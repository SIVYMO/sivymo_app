{"version":3,"sources":["utils/Strings.js","utils/Validations.js","assets/img/logonovopatent.jpg","service/API.js","service/Endpoints.js","service/UsuarioService.js","components/pages/Login.jsx","service/ResumeService.js","components/templates/HomeTemplate.jsx","components/organisms/MenuTop.jsx","components/pages/HomePage.jsx","service/ClienteService.js","service/APIScraping.js","service/ScrapingService.js","service/HistorialService.js","utils/Colors.js","components/templates/PatentTemplate.jsx","components/pages/PatentPage.jsx","components/templates/BrandTemplate.jsx","components/pages/BrandPage.jsx","components/templates/ClientsTemplate.jsx","components/pages/ClientsPage.jsx","components/organisms/PersonalData.jsx","components/organisms/CrudUsers.jsx","components/templates/ProfileTemplate.jsx","components/pages/ProfilePage.jsx","components/pages/ErrorPage.jsx","App.js","index.js"],"names":["backgroundWallpaper","txtWelcome","txtLastQueryPatent","txtLastQueryBrand","txtLastUpdateClients","txtConfirmExit","txtExit","txtAltLogoImg","txtLogoutButton","txtEmailValid","txtPasswordValid","txtMessageSucces","type","title","description","txtMessageLoading","txtLogin","txtFillFields","txtEmailLabel","txtPasswordLabel","txtLoginButton","txtCancelButton","txtMessageLoginError","txt404","txtPageNotFound","txtPageError","txtMessageUserSuccess","txtMessageUserError","txtMessageUserDelete","txtMessageUserPasswordSuccess","txtMessageUserPasswordError","txtMessageUserPasswordReset","txtMessageErrorGeneral","txtTitlePersonalData","txtNameLabel","txtNameHelp","txtFistSurnameLabel","txtFistSurnameHelp","txtSecondSurnameLabel","txtDateOfBirthLabel","txtDateOfBirthHelp","txtEmailHelp","txtDesactiveActiveFieldsLabel","txtUpdateInformationLabel","txtUpdatePassword","txtPasswordCurrentlyLabel","txtPasswordCurrentlyHelp","txtNewPasswordLabel","txtNewPasswordHelp","txtRepeatNewPasswordLabel","txtRepeatNewPasswordHelp","txtRestartPasswordTitle","txtRestartPasswordContent","txtYES","txtNO","txtSaveButton","txtNewUserButton","txtExport","txtSearch","txtTitleCrud","txtFooterTableLabel","txtUserDetails","txtSuperAdminLabel","txtDeleteUserTitle","txtDeleteUserContent","txtTitleProfile","txtTabPersonalData","txtTabUserTable","txtCheckPasswords","txtSmsLoading","txtMessageClientsSaved","txtTitleClients","txtClearButton","txtClearMessages","txtExportButton","txtStartSearchButton","txtNoData","txtTitlePatents","txtTitleBrands","txtMessageNoClients","txtMessageSearchSuccess","txtMessageSearchError","txtSubtitleBrand","txtSubitlePatent1","txtSubitlePatent2","txtSubitlePatent3","txtLodaing","txtStartSearch","txtInstructionsSearch","txtDateStartLabel","txtDateEndLabel","txtNoDataSearch","txtDataSearch","email","test","name","flag","i","length","indexOf","charAt","surname","this","validateNames","date","split","replaceAll","tempDate","JSON","stringify","cutDate","substring","convertAPIDate","dateStart","dateEnd","first","second","dateBirth","validateSecondSurname","validateEmail","curently","newPas","repeat","userEmail","userEmailInfo","AXIOS","axios","create","baseURL","headers","API","put","oldPassword","newPassword","obj","post","get","id","delete","Login","history","useHistory","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","emailErrorSms","setEmailErrorSms","passwordErrorSms","setPasswordErrorSms","emailUIError","setEmailUIError","passwordUIError","setPasswordUIError","toastMessages","useRef","localStorage","getItem","push","clearMessages","current","clear","showMessage","show","severity","summary","detail","sticky","className","ref","src","logonovopatent","alt","height","style","fontSize","fontWeight","htmlFor","value","maxLength","onChange","e","target","toggleMask","feedback","label","icon","onClick","Validations","userLogin","correo","contrasena","UsuarioService","login","then","response","setItem","data","usuario","catch","err","console","error","HomeTemplate","userInfo","setUserInfo","ultimaBusquedaPatentes","ultimaBusquedaMarcas","ultimaModificacionClientes","clientesTotales","resume","setResume","useEffect","ResumeService","getResume","parse","Cover","width","objectFit","Card","text","moment","format","nombre","primerApellido","backgroundColor","locale","MenuTop","itemsMenuTop","command","start","end","confirmDialog","message","header","acceptClassName","rejectClassName","accept","model","HomePage","dark_sea_green","PatentTemplate","showDialog","setShowDialog","notificaciones","setNotificaciones","patentesRegistros","setPatentesRegistros","requisitos","setRequisitos","setHistory","filesReady","setFilesReady","inputFechaInicio","setInputFechaInicio","inputFechaFin","setInputFechaFin","toast","dt1","dt2","dt3","setData","getClients","info","objSend","fechaInicio","fechaFin","datos","descargado","ScrapingService","getPatentes","resp","viewData","HistorialService","insertOne","log","window","onbeforeunload","ClienteService","getAll","enlaceBodyTemplate","rowdata","href","rel","NotificacionPatentes","emptyMessage","paginator","rows","field","sortable","body","PatentesIndustriales","scrollable","headerStyle","PatentesNotificados","home","convertInputDate","Date","exportCSV","showHeader","visible","draggable","closable","onHide","mode","color","dateFormat","mask","monthNavigator","yearNavigator","yearRange","placeholder","disabled","inputId","checked","validateDateStartEnd","PatentPage","BrandTemplate","marcas","setMarcas","getMarcas","BrandPage","ClientsTemplate","allClients","setAllClients","clients","setClients","allClientsText","setAllClientsText","clientsText","setClientsText","clearAndFilterData","newData","item","trim","saveAllClients","showMessageloading","middleBig1","splice","middleTiny1","middleTiny2","middleBig2","middleTiny3","middleTiny4","insertAll","res","Promise","all","clearMessageLoading","saveHistory","clearAllClients","saveClients","clearClients","content","flex","life","autoResize","ClientsPage","PersonalData","activePersonalFields","setActivePersonalFields","activePasswordFields","setActivePasswordFields","segundoApellido","fechaDeNacimiento","superAdmin","contraseñaActual","nuevaContraseña","repetirNuevaContraseña","userPassword","setUserPassword","showIcon","result","convertOnlyInputDate","user","validateFormUser","updateOne","validatePassworsNoEmpty","changePassword","CrudUsers","emptyUser","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","selectedUsers","setSelectedUsers","globalFilter","setGlobalFilter","setUser","saveOrUpdate","setSaveOrUpdate","detailsUser","setDetailsUser","detailUserChange","setDetailUserChange","dt","openNew","hideDialog","hideDeleteUserDialog","hideDetailsUser","resetPassword","userDialogFooter","Fragment","deleteUserDialogFooter","removeOne","onInput","left","right","selection","onSelectionChange","dataKey","paginatorTemplate","currentPageReportTemplate","rowData","editUser","confirmDeleteUser","showConfirmResetPassword","modal","footer","ProfileTemplate","leftIcon","ProfilePage","ErrorPage","App","path","exact","component","InformationPage","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","reject","choose","upload","cancel","passwordPrompt","weak","medium","strong","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2b73ed7.chunk.js","sourcesContent":["// ? Locale\nexport const localLocation = {\n    firstDayOfWeek: 1,\n    dayNames: [\n        \"domingo\",\n        \"lunes\",\n        \"martes\",\n        \"miércoles\",\n        \"jueves\",\n        \"viernes\",\n        \"sábado\",\n    ],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"Mi\", \"J\", \"V\", \"S\"],\n    monthNames: [\n        \"enero\",\n        \"febrero\",\n        \"marzo\",\n        \"abril\",\n        \"mayo\",\n        \"junio\",\n        \"julio\",\n        \"agosto\",\n        \"septiembre\",\n        \"octubre\",\n        \"noviembre\",\n        \"diciembre\",\n    ],\n    monthNamesShort: [\n        \"ene\",\n        \"feb\",\n        \"mar\",\n        \"abr\",\n        \"may\",\n        \"jun\",\n        \"jul\",\n        \"ago\",\n        \"sep\",\n        \"oct\",\n        \"nov\",\n        \"dic\",\n    ],\n    today: \"Hoy\",\n    clear: \"Claro\",\n    accept: \"Si\",\n    reject: \"No\",\n    choose: \"Elija\",\n    upload: \"Subir\",\n    cancel: \"Cancelar\",\n    passwordPrompt: \"Ingrese contraseña\",\n    weak: \"Débil\",\n    medium: \"Normal\",\n    strong: \"Fuerte\",\n};\n\n// ? HomeTemplate.jsx\nexport const backgroundWallpaper = \"Fondo de portada\",\n    txtWelcome = \"Hola, bienvenido(a) de nuevo\",\n    txtLastQueryPatent = \"Última búsqueda de patentes: \",\n    txtLastQueryBrand = \"Última búsqueda de marcas: \",\n    txtLastUpdateClients = \"Última actualización en expedientes: \",\n    txtBadgeClients =\"Ingresar expedientes para poder realizar consultas\";\n\n// ? MenuTop.jsx\nexport const txtConfirmExit = \"¿Estás seguro de salir del sistema?\",\n    txtExit = \"Salir\",\n    txtAltLogoImg = \"Logo Novopatent\",\n    txtLogoutButton = \"Salir\";\n\n// ? Login.jsx\nexport const txtEmailValid = \"El email no debe estar vacío y debe ser válido\",\n    txtPasswordValid = \"La contraseña no debe estar vacía\",\n    txtMessageSucces = {\n        type: \"success\",\n        title: \"El código es correcto\",\n        description: \"Redirigiendo...\",\n    },\n    txtMessageLoading = {\n        type: \"info\",\n        title: \"Cargando...\",\n        description: \"Por favor espere\",\n    },\n    txtLogin = \"Inicio de sesión\",\n    txtFillFields = \"Favor de llenar todos los campos\",\n    txtEmailLabel = \"Correo electrónico:\",\n    txtPasswordLabel = \"Contraseña:\",\n    txtPleaseWait = \"Por favor espere...\",\n    txtLoginButton = \"Iniciar sesión\",\n    txtCodeVerification =\n        \"Ingrese el código de verificación que ha sido enviado a su correo electrónico\",\n    txtCodeVerificationLabel = \"Código de verificación\",\n    txtCancelButton = \"Cancelar\",\n    txtVerifyButton = \"Verificar\",\n    txtMessageLoginError = {\n        type: \"error\",\n        title: \"Correo electrónico y/o contraseña incorrectos\",\n        description: \"Por favor verifíquelos nuevamente\",\n    };\n\n// ? ErrorPage.jsx\nexport const txt404 = \"404\",\n    txtPageNotFound = \"Página no encontrada\",\n    txtPageError =\n        \"La página que estás buscando no existe o ha ocurrido un error\";\n\n// ? ProfileTemplate.jsx\nexport const txtMessageUserSuccess = {\n        type: \"success\",\n        title: \"Usuario guardado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserError = {\n        type: \"error\",\n        title: \"Campos no válidos\",\n        description:\n            \"Algunos campos tienen caracteres especiales o están vacíos\",\n    },\n    txtMessageUserDelete = {\n        type: \"success\",\n        title: \"Usuario eliminado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordSuccess = {\n        type: \"success\",\n        title: \"Contraseña guardada correctamente\",\n        description: \"La contraseña del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordError = {\n        type: \"error\",\n        title: \"Las contraseñas no coinciden o están vacías\",\n        description: \"Verificar los campos de las contraseñas\",\n    },\n    txtMessageUserPasswordReset = {\n        type: \"success\",\n        title: \"Contraseña restablecida correctamente\",\n        description: \"Se ha cambiado la contraseña\",\n    },\n    txtMessageErrorGeneral = {\n        type: \"error\",\n        title: \"No se ejecutó la operación\",\n        description: \"Intente de nuevo\",\n    },\n    txtTitlePersonalData = \"Tu información\",\n    txtNameLabel = \"Nombre:\",\n    txtNameHelp = \" El nombre no debe estar vacío y debe ser válido\",\n    txtFistSurnameLabel = \"Primer apellido:\",\n    txtFistSurnameHelp =\n        \" El primer apellido no debe estar vacío y debe ser válido\",\n    txtSecondSurnameLabel = \"Segundo apellido:\",\n    txtDateOfBirthLabel = \"Fecha de nacimiento:\",\n    txtDateOfBirthHelp =\n        \"La fecha de nacimiento no debe estar vacía y debe ser válida\",\n    txtEmailHelp =\n        \"El correo electrónico no debe estar vacío y debe ser válido\",\n    txtDesactiveActiveFieldsLabel = \"Habilitar/Deshabilitar campos\",\n    txtUpdateInformationLabel = \"Actualizar información\",\n    txtUpdatePassword = \"Actualizar contraseña\",\n    txtPasswordCurrentlyLabel = \"Contraseña actual:\",\n    txtPasswordCurrentlyHelp = \"La contraseña actual no debe estar vacía\",\n    txtNewPasswordLabel = \"Nueva contraseña:\",\n    txtNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRepeatNewPasswordLabel = \"Repetir nueva contraseña:\",\n    txtRepeatNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRestartPasswordTitle = \"¿Restablecer la contraseña de este usuario?\",\n    txtRestartPasswordContent =\n        \" Se le enviará un correo electrónico a esa persona con la nueva contraseña\",\n    txtYES = \"Si\",\n    txtNO = \"No\",\n    txtSaveButton = \"Guardar\",\n    txtNewUserButton = \"Nuevo usuario\",\n    txtExport = \"Exportar en CSV\",\n    txtSearch = \"Buscar...\",\n    txtTitleCrud = \"Tabla de usuarios\",\n    txtFooterTableLabel =\n        \"Mostrando {first} a {last} de {totalRecords} usuarios\",\n    txtUserDetails = \"Detalles de usuario\",\n    txtSuperAdminLabel = \"Super administrador:\",\n    txtDeleteUserTitle = \"¿Eliminar usuario?\",\n    txtDeleteUserContent =\n        \"El usuario se eliminará permanente de la aplicación\",\n    txtTitleProfile = \"Perfil\",\n    txtTabPersonalData = \"Datos personales\",\n    txtTabUserTable = \"Tabla de usuarios\",\n    txtCheckPasswords = \"Verifica que la contraseña actual sea correcta\"\n\n//  ? ClientsTemplate.js\nexport const txtSmsLoading = [\n        \"Cargando\",\n        \"Espere a que los datos estén listos\",\n    ],\n    txtMessageClientsSaved = {\n        type: \"success\",\n        title: \"Expedientes guardados\",\n        description: \"Se han actualizado correctamente\",\n    },\n    txtTitleClients = \"Expedientes\",\n    txtClearButton = \"Limpiar datos\",\n    txtNoDataLabel = \"Sin ningún dato subido\",\n    txtClearMessages = \"Limpiar mensajes\";\n\n// ? SpecimensTemplate.jsx\n// ? PatentTemplate.jsx\n// ? BrandTemplate.jsx\nexport const txtExportButton = \"Exportar resultados\",\n    txtStartSearchButton = \"Iniciar con la búsqueda\",\n    txtNoData = \"No hay datos\",\n    txtTitleExtraordinaryExamples = \"Ejemplares extraordinarios\",\n    txtTitlePatents = \"Patentes\",\n    txtTitleBrands = \"Marcas\",\n    txtMessageNoClients = {\n        type: \"error\",\n        title: \"No hay expedientes registrados\",\n        description: \"Registra algunos para realizar búsquedas\",\n    },\n    txtMessageSearchSuccess = {\n        type: \"success\",\n        title: \"Búsqueda realizada con éxito\",\n        description: \"Revisa si hubo coincidencias con los registros\",\n    },\n    txtMessageSearchError = {\n        type: \"error\",\n        title: \"Ocurrió un error de conexión\",\n        description: \"Vuelve a intentarlo de nuevo\",\n    },\n    txtSubtitleBrand = \"Notificaciones de marcas\",\n    txtSubitlePatent1 = \"Notificaciones de patentes\",\n    txtSubitlePatent2 = \"Patentes, registros de modelos de utilidad y diseños industriales\",\n    txtSubitlePatent3 = \"Requisitos de forma y fondo, y abandonos notificados\",\n    txtLodaing = \"Realizando las búsquedas necesarias\",\n    txtStartSearch = \"Iniciar búsqueda\",\n    txtInstructionsSearch =\n        \"Puedes colocar alguna fecha en especifico o ignorar y continuar con la búsqueda regular\",\n    txtDateStartLabel = \"Fecha inicio:\",\n    txtDateEndLabel = \"Fecha fin:\",\n    txtNoDataSearch = \"No se encontraron coincidencias\",\n    txtDataSearch = \"Se encontraron coincidencias\"\n","/* eslint-disable no-useless-escape */\nconst CHARS =\n    \"áéíóúÁÉÍÓÚabcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ \";\n\nclass Validations {\n    validateEmail(email) {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    validateNames(name) {\n        let flag = true;\n        if (name !== \"\") {\n            for (let i = 0; i < name.length; i++) {\n                if (CHARS.indexOf(name.charAt(i)) === -1) {\n                    flag = false;\n                    break;\n                }\n            }\n        } else {\n            return false;\n        }\n        return flag;\n    }\n\n    validateSecondSurname(surname) {\n        if (surname === \"\") {\n            return true;\n        } else {\n            return this.validateNames(surname);\n        }\n    }\n\n    convertAPIDate(date) {\n        let tempDate = date.split(\"T\")[0];\n        return tempDate.replaceAll(\"-\", \"/\");\n    }\n\n    convertInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        let cutDate = tempDate.substring(1, tempDate.length - 1);\n        return this.convertAPIDate(cutDate);\n    }\n\n    convertOnlyInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        return tempDate.substring(1, tempDate.length - 1);\n    }\n\n    validateDateStartEnd(dateStart, dateEnd) {\n        return !(dateStart.length === 10 &&\n            dateEnd.length === 10 &&\n            dateStart.split(\"/\").length === 3 &&\n            dateEnd.split(\"/\").length === 3);\n\n    }\n\n    validateFormUser(name, first, second, dateBirth, email) {\n        return this.validateNames(name) &&\n            this.validateNames(first) &&\n            this.validateSecondSurname(second) &&\n            dateBirth !== \"\" &&\n            this.validateEmail(email);\n    }\n\n    validatePassworsNoEmpty(curently, newPas, repeat) {\n        return curently !== \"\" && newPas !== \"\" && repeat !== \"\"\n    }\n\n    validateSameEmail(userEmail, userEmailInfo) {\n        return userEmail === userEmailInfo;\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new Validations();\n","export default __webpack_public_path__ + \"static/media/logonovopatent.015ff878.jpg\";","import axios from \"axios\";\nimport {API_BACKEND_URL} from \"./Endpoints\";\n\nconst AXIOS = axios.create({\n    baseURL: API_BACKEND_URL,\n    headers: {\"Content-type\": \"application/json\"},\n})\nexport default AXIOS\n","// export const API_BACKEND_URL = 'http://localhost:8080/novopatent-api'\nexport const API_BACKEND_URL = 'https://sivymoapi-production.up.railway.app/novopatent-api'\nexport const API_SCRAPING_URL = 'http://localhost:8081'","import API from \"./API\";\n\nclass UsuarioService {\n    resetPassword(email) {\n        return API.put(`/reset-password/${email}`);\n    }\n\n    changePassword(email, oldPassword, newPassword) {\n        return API.put(\n            `/change-password/${email}/${oldPassword}/${newPassword}`\n        );\n    }\n\n    login(obj) {\n        return API.post(\"/login\", obj);\n    }\n\n    getAll() {\n        return API.get(\"/users\");\n    }\n\n    getOne(id) {\n        return API.get(`/users/${id}`);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/users\", obj);\n    }\n\n    updateOne(obj) {\n        return API.put(\"/users\", obj);\n    }\n\n    removeOne(email) {\n        return API.delete(`/users/${email}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new UsuarioService();\n","import React, {useState, useRef} from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport Validations from \"../../utils/Validations\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport {\n    txtAltLogoImg,\n    txtEmailValid,\n    txtPasswordValid,\n    txtLogin,\n    txtFillFields,\n    txtEmailLabel,\n    txtPasswordLabel,\n    txtLoginButton,\n    txtMessageLoginError,\n    txtMessageSucces,\n    txtMessageLoading\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function Login() {\n    const history = useHistory();\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [emailErrorSms, setEmailErrorSms] = useState(\"\");\n    const [passwordErrorSms, setPasswordErrorSms] = useState(\"\");\n    const [emailUIError, setEmailUIError] = useState(\"p-d-block\");\n    const [passwordUIError, setPasswordUIError] = useState(\"p-d-block\");\n    const toastMessages = useRef(null);\n\n    if (localStorage.getItem(\"userActive\") !== null) history.push(\"/inicio\");\n\n    const login = () => {\n        if (emailInput.length <= 0 || !Validations.validateEmail(emailInput)) {\n            setEmailErrorSms(txtEmailValid);\n            setEmailUIError(\"p-invalid p-d-block\");\n        } else {\n            setEmailErrorSms(\"\");\n            setEmailUIError(\"p-d-block\");\n        }\n        if (passwordInput.length <= 0) {\n            setPasswordErrorSms(txtPasswordValid);\n            setPasswordUIError(\"p-invalid p-d-block\");\n        } else {\n            setPasswordErrorSms(\"\");\n            setPasswordUIError(\"p-d-block\");\n        }\n        if (\n            emailInput.length > 0 &&\n            passwordInput.length > 0 &&\n            Validations.validateEmail(emailInput)\n        ) {\n            let userLogin = {\n                correo: emailInput,\n                contrasena: passwordInput,\n            };\n            showMessage(txtMessageLoading);\n            UsuarioService.login(userLogin)\n                .then((response) => {\n                    clearMessages();\n                    localStorage.setItem(\"userActive\", JSON.stringify(response.data.usuario));\n                    showMessage(txtMessageSucces);\n                    history.push(\"/inicio\");\n                })\n                .catch((err) => {\n                    clearMessages();\n                    console.error(err)\n                    showMessage(txtMessageLoginError);\n                });\n        }\n    };\n\n    const clearMessages = () => {\n        toastMessages.current.clear();\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toastMessages.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <div className=\"pagelogin p-d-flex p-jc-center p-ai-center\">\n            <div className=\"card p-shadow-11 p-col-12 p-md-6 p-lg-4\">\n                <Toast ref={toastMessages}/>\n                <div className=\"p-col p-text-center\">\n                    <img src={logonovopatent} alt={txtAltLogoImg} height=\"90px\"/>\n                </div>\n                <div className=\"p-col\">\n                    <div className=\"p-text-center\" style={{fontSize: \"2em\", fontWeight: \"500\"}}>\n                        {txtLogin}\n                    </div>\n                    <div className=\"p-text-center\">{txtFillFields}</div>\n                    <div className=\"p-mx-6 p-my-4\">\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"emailInput\" className=\"p-d-block\">\n                                    {txtEmailLabel}\n                                </label>\n                                <InputText\n                                    className={emailUIError}\n                                    id=\"emailInput\"\n                                    aria-describedby=\"emailInput-help\"\n                                    value={emailInput}\n                                    maxLength=\"50\"\n                                    onChange={(e) => {\n                                        setEmailInput(e.target.value);\n                                    }}\n                                />\n                                <small id=\"emailInput-help\" className=\"p-error p-d-block\">\n                                    {emailErrorSms}\n                                </small>\n                            </div>\n                        </div>\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"passwordInput\" className=\"p-d-block\">\n                                    {txtPasswordLabel}\n                                </label>\n                                <Password\n                                    id=\"passwordInput\"\n                                    toggleMask\n                                    className={passwordUIError}\n                                    feedback={false}\n                                    maxLength=\"50\"\n                                    value={passwordInput}\n                                    onChange={(e) => {\n                                        setPasswordInput(e.target.value);\n                                    }}\n                                />\n                                <small id=\"passwordInput-help\" className=\"p-error p-d-block\">\n                                    {passwordErrorSms}\n                                </small>\n                            </div>\n                        </div>\n                        <div className=\"p-text-center\">\n                            <Button\n                                label={txtLoginButton}\n                                icon=\"pi pi-sign-in\"\n                                className=\"p-button-success\"\n                                onClick={login}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import API from './API'\n\nclass ResumeService{\n     getResume(){\n          return API.get(\"/resume\")\n     }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ResumeService();","import React, {useState, useEffect} from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport {\n    backgroundWallpaper,\n    txtWelcome,\n    txtLastQueryPatent,\n    txtLastQueryBrand,\n    txtLastUpdateClients,\n} from \"../../utils/Strings\";\nimport ResumeService from \"../../service/ResumeService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function HomeTemplate() {\n    const [userInfo, setUserInfo] = useState({});\n    const [resume, setResume] = useState({\n        ultimaBusquedaPatentes: \"\",\n        ultimaBusquedaMarcas: \"\",\n        ultimaModificacionClientes: \"\",\n        clientesTotales: 0,\n    });\n\n    useEffect(() => {\n        getResume();\n        getPersonalInformation();\n    }, []);\n\n\n    const Cover = () => (\n        <img src=\"https://random.imagecdn.app/1080/720\" alt={backgroundWallpaper}\n             style={{width: \"100%\", height: \"300px\", objectFit: \"cover\"}}\n        />\n    );\n\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function getResume() {\n        ResumeService.getResume()\n            .then(({data}) => {\n                setResume({...data});\n                localStorage.setItem(\"resume\", JSON.stringify(data));\n            })\n            .catch((err) => console.error(err));\n    }\n\n    const Card = ({icon, text, value}) => (\n            <div className=\"p-col-12 p-sm-3 card p-shadow-2\">\n                <div className=\"p-d-flex p-d-flex p-jc-center p-ai-center\" style={{height: '200px'}}>\n                    <div className='p-text-center'>\n                        <i className={icon} style={{'fontSize': '2em'}}></i>\n                        <div className='p-mb-2 p-mt-1' style={{'fontSize': '1.5em'}}>{text}</div>\n                        <div className='p-text-bold' style={{'fontSize': '1.6em'}}>{moment(value).format(\"LLLL\")}</div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    return (\n        <>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <h1>{txtWelcome}{' '}<i>{`${userInfo.nombre} ${userInfo.primerApellido}`}</i></h1>\n                </div>\n                <div className=\"p-col\"><Cover/></div>\n            </div>\n            <div className='p-grid p-mt-3'>\n                <div className=\"p-col-12 p-sm-3 card p-shadow-2\"\n                     style={{backgroundColor: resume.clientesTotales === 0 ? 'var(--pink-100)' : 'var(--green-200)'}}>\n                    <div className=\"p-d-flex p-d-flex p-jc-center p-ai-center\" style={{height: '200px'}}>\n                        <div className='p-text-center'>\n                            <i className='pi pi-user' style={{'fontSize': '2em'}}></i>\n                            <div className='p-mb-2 p-mt-1' style={{'fontSize': '1.5em'}}>Total de expedientes:</div>\n                            <div className='p-text-bold' style={{'fontSize': '5em'}}>{resume.clientesTotales}</div>\n                        </div>\n                    </div>\n                </div>\n                <Card icon='pi pi-file' text={txtLastQueryPatent} value={resume.ultimaBusquedaPatentes}/>\n                <Card icon='pi pi-globe' text={txtLastQueryBrand} value={resume.ultimaBusquedaMarcas}/>\n                <Card icon='pi pi-id-card' text={txtLastUpdateClients} value={resume.ultimaModificacionClientes}/>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport {Menubar} from \"primereact/menubar\";\nimport {Button} from \"primereact/button\";\nimport {confirmDialog} from \"primereact/confirmdialog\";\nimport {txtConfirmExit, txtExit, txtAltLogoImg, txtLogoutButton} from \"../../utils/Strings\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function MenuTop() {\n    const history = useHistory();\n    const itemsMenuTop = [\n        {\n            label: \"Inicio\",\n            icon: \"pi pi-fw pi-home\",\n            command: () => {\n                history.push(\"/inicio\");\n            },\n        },\n        {\n            label: \"Patentes\",\n            icon: \"pi pi-fw pi-file\",\n            command: () => {\n                history.push(\"/patentes\");\n            },\n        },\n        {\n            label: \"Marcas\",\n            icon: \"pi pi-fw pi-globe\",\n            command: () => {\n                history.push(\"/marcas\");\n            },\n        },\n        {\n            label: \"Expedientes\",\n            icon: \"pi pi-fw pi-id-card\",\n            command: () => {\n                history.push(\"/expedientes\");\n            },\n        },\n        {\n            label: \"Perfil\",\n            icon: \"pi pi-fw pi-user\",\n            command: () => {\n                history.push(\"/perfil\");\n            },\n        },\n    ];\n\n    const confirmLogout = () => {\n        confirmDialog({\n            message: txtConfirmExit,\n            header: txtExit,\n            icon: \"pi pi-exclamation-triangle\",\n            acceptClassName: \"p-button-success\",\n            rejectClassName: \"p-button-plain p-button-text\",\n            accept: () => {\n                localStorage.clear();\n                history.push(\"/\");\n            },\n        });\n    };\n\n    const start = (\n        <img\n            alt={txtAltLogoImg}\n            src={logonovopatent}\n            height=\"50\"\n            className=\"p-mr-2\"\n            onClick={() => {history.push(\"/inicio\");}}\n        />\n    );\n\n    const end = (\n        <Button\n            className=\"p-button-success\"\n            onClick={confirmLogout}\n            label={txtLogoutButton}\n            icon=\"pi pi-sign-out\"\n        />\n    );\n\n    return (\n        <div className=\"p-grid p-m-1\">\n            <div className=\"p-col\">\n                <div className=\"card\">\n                    <Menubar model={itemsMenuTop} start={start} end={end}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport HomeTemplate from \"../templates/HomeTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function HomePage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop/>\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\"><HomeTemplate/></div>\n            </div>\n        </>\n    );\n}\n","import API from \"./API\";\n\nclass ClienteService {\n    getAll() {\n        return API.get(\"/clients\");\n    }\n\n    insertAll(obj) {\n        return API.post(\"/clientsAll\", obj);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/clientsOne\", obj);\n    }\n\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ClienteService();","import axios from \"axios\";\nimport {API_SCRAPING_URL} from \"./Endpoints\";\n\nexport default axios.create({\n    baseURL: API_SCRAPING_URL,\n    headers: {\"Content-type\": \"application/json\",},\n});\n","import API from \"./APIScraping\";\n\nclass ScrapingService {\n    getPatentes(obj) {\n        return API.post(\"/patentes\", obj);\n    }\n\n    getMarcas(obj) {\n        return API.post(\"marcas\", obj);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ScrapingService();","import API from \"./API\";\n\nclass HistorialService {\n    insertOne(type) {\n        return API.post(`/history/${type}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new HistorialService();\n","export const dark_sea_green = \"#81BA8E\",\n    brunswick_green = \"#1B4631\",\n    amazon =\"#467256\"\n","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Toast} from \"primereact/toast\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Calendar} from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtNoData,\n    txtTitlePatents,\n    txtStartSearchButton,\n    txtExportButton,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtSubitlePatent1,\n    txtSubitlePatent2,\n    txtSubitlePatent3,\n    txtLastQueryPatent,\n    txtSmsLoading,\n    txtLodaing,\n    txtStartSearch,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages\n} from \"../../utils/Strings\";\nimport {dark_sea_green} from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function PatentTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [notificaciones, setNotificaciones] = useState([]);\n    const [patentesRegistros, setPatentesRegistros] = useState([]);\n    const [requisitos, setRequisitos] = useState([]);\n    const [history, setHistory] = useState(false);\n    const [filesReady, setFilesReady] = useState(false);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n    const dt2 = useRef(null);\n    const dt3 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(Validations.convertAPIDate(resume.ultimaBusquedaPatentes));\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(1)\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getPatentes(objSend)\n            .then((resp) => {\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n                saveHistory();\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data[0].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setNotificaciones(data[0].data);\n            showMessage({type: \"info\", title: txtSubitlePatent1, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent1, description: txtNoDataSearch,});\n\n        if (data[1].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setPatentesRegistros(data[1].data);\n            showMessage({type: \"info\", title: txtSubitlePatent2, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent2, description: txtNoDataSearch,});\n\n        if (data[2].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setRequisitos(data[2].data);\n            showMessage({type: \"info\", title: txtSubitlePatent3, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent3, description: txtNoDataSearch,});\n\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => Validations.validateDateStartEnd(inputFechaInicio, inputFechaFin);\n\n\n    const exports = () => {\n        dt1.current.exportCSV();\n        dt2.current.exportCSV();\n        dt3.current.exportCSV();\n    };\n\n    const clear = () => {\n        setNotificaciones([]);\n        setPatentesRegistros([]);\n        setRequisitos([]);\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, sticky: true});\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    }\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\" rel=\"noreferrer\">\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n    function NotificacionPatentes() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent1}</h2>\n                <DataTable ref={dt1} emptyMessage={txtNoData} paginator rows={7} value={notificaciones}>\n                    <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                    <Column field=\"Fecha del Oficio\" header=\"Fecha del Oficio\" sortable/>\n                    <Column field=\"Descripción general del asunto\" header=\"Descripción general del asunto\" sortable/>\n                    <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" body={enlaceBodyTemplate} sortable/>\n                    <Column field=\"Expediente\" header=\"Expediente\" sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesIndustriales() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent2}</h2>\n                <DataTable ref={dt2} emptyMessage={txtNoData} paginator rows={7} scrollable value={patentesRegistros}>\n                    <Column field=\"Oficina, No de Patente y Tipo de documento\"\n                            header=\"Oficina, No de Patente y Tipo de documento\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Número de concesión\" header=\"Número de concesión\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Tipo de documento\" header=\"Tipo de documento\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Número de solicitud\" header=\"Número de solicitud\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Fecha de presentación\" header=\"Fecha de presentación\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Fecha de concesión\" header=\"Fecha de concesión\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Título\" header=\"Título\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Inventor(es)\" header=\"Inventor(es)\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Titular\" header=\"Titular\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Agente\" header=\"Agente\" headerStyle={{width: \"17vh\"}} sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesNotificados() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent3}</h2>\n                <DataTable ref={dt3} emptyMessage={txtNoData} paginator rows={7} value={requisitos}>\n                    <Column field=\"Número de expediente\" header=\"Número de expediente\" sortable/>\n                    <Column field=\"Solicitante(s)\" header=\"Solicitante(s)\" sortable/>\n                    <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                    <Column field=\"Agente\" header=\"Agente\" sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitlePatents}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitlePatents}</h1>\n                    <div>\n                        {txtLastQueryPatent}\n                        {moment(resume.ultimaBusquedaPatentes).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button label={txtStartSearchButton} icon=\"pi pi-search\" className=\"p-button-lg p-ml-auto\"\n                            style={{backgroundColor: \"var(--green-600)\"}} onClick={confirmStartSearch}/>\n                </div>\n            </div>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\n                        <Button type=\"button\" className=\"p-mr-2\" icon=\"pi pi-download\" label={txtExportButton}\n                                style={{backgroundColor: \"var(--teal-600)\"}} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton}\n                                className=\"p-button-info  p-mr-2\" onClick={clear}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\"\n                                onClick={clearMessages}/>\n                    </div>\n                </div>\n                <div className=\"p-col\"><NotificacionPatentes/></div>\n                <div className=\"p-col\"><PatentesIndustriales/></div>\n                <div className=\"p-col\"><PatentesNotificados/></div>\n            </div>\n            <Dialog\n                showHeader={false}\n                visible={showDialog}\n                draggable={false}\n                closable={false}\n                onHide={() => {\n                }}>\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <>\n                                <div className=\"p-col p-col-align-center\">\n                                    <h1>{txtSmsLoading[0]}</h1>\n                                    <div>{txtLodaing}</div>\n                                    <ProgressBar\n                                        mode=\"indeterminate\"\n                                        color={dark_sea_green}\n                                        style={{height: \"6px\"}}\n                                    />\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateStartInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateStartInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaInicio}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaInicio}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(e.target.value);\n                                                setInputFechaInicio(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateEndInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox\n                                            inputId=\"filesReady\"\n                                            checked={filesReady}\n                                            onChange={(e) =>\n                                                setFilesReady(e.checked)\n                                            }\n                                        />\n                                        <label htmlFor=\"filesReady\">\n                                            Ya cuento con los archivos descargados\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport PatentTemplate from \"../templates/PatentTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function PatentPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <PatentTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {Toast} from \"primereact/toast\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Calendar} from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtExportButton,\n    txtStartSearchButton,\n    txtNoData,\n    txtTitleBrands,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtLastQueryBrand,\n    txtSubtitleBrand,\n    txtSmsLoading,\n    txtStartSearch,\n    txtLodaing,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages,\n} from \"../../utils/Strings\";\nimport {dark_sea_green} from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function BrandTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [marcas, setMarcas] = useState([]);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const [filesReady, setFilesReady] = useState(false);\n    const [history, setHistory] = useState(false);\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(Validations.convertAPIDate(resume.ultimaBusquedaMarcas));\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(2)\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getMarcas(objSend)\n            .then((resp) => {\n                saveHistory();\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data.data !== false) {\n            setMarcas(data.data);\n            showMessage({type: \"info\", title: txtSubtitleBrand, description: txtDataSearch,});\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n        } else showMessage({type: \"warn\", title: txtSubtitleBrand, description: txtNoDataSearch,});\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => Validations.validateDateStartEnd(inputFechaInicio, inputFechaFin);\n\n    const exports = () => {\n        dt1.current.exportCSV();\n    };\n\n    const clear = () => {\n        setMarcas([]);\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    };\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\" rel=\"noreferrer\">\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitleBrands}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitleBrands}</h1>\n                    <div>\n                        {txtLastQueryBrand}\n                        {moment(resume.ultimaBusquedaMarcas).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button label={txtStartSearchButton} icon=\"pi pi-search\" className=\"p-button-lg p-ml-auto\"\n                            style={{backgroundColor: \"var(--green-600)\"}} onClick={confirmStartSearch}/>\n                </div>\n            </div>\n\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\n                        <Button type=\"button\" icon=\"pi pi-download\" className=\"p-mr-2\" label={txtExportButton}\n                                style={{backgroundColor: \"var(--teal-600)\"}} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton} className=\"p-button-info p-mr-2\"\n                                onClick={clear}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\"\n                                onClick={clearMessages}/>\n                    </div>\n                </div>\n                <div className=\"p-col\">\n                    <h2>{txtSubtitleBrand}</h2>\n                    <DataTable value={marcas} ref={dt1} emptyMessage={txtNoData} paginator scrollable rows={7}>\n                        <Column field=\"Expediente\" header=\"Expediente\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Descripción del oficio\" header=\"Descripción del oficio\"\n                                headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Fecha del oficio\" header=\"Fecha del oficio\" headerStyle={{width: \"20vh\"}}\n                                sortable/>\n                        <Column field=\"Número del oficio\" header=\"Número del oficio\" headerStyle={{width: \"20vh\"}}\n                                sortable/>\n                        <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" headerStyle={{width: \"20vh\"}}\n                                body={enlaceBodyTemplate} sortable/>\n                    </DataTable>\n                </div>\n            </div>\n\n            <Dialog showHeader={false} visible={showDialog} draggable={false} closable={false}>\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <div className=\"p-col p-col-align-center\">\n                                <h1>{txtSmsLoading[0]}</h1>\n                                <div>{txtLodaing}</div>\n                                <ProgressBar mode=\"indeterminate\" color={dark_sea_green} style={{height: \"6px\"}}/>\n                            </div>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label htmlFor=\"dateStartInput\" className=\"p-d-block\">\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar id=\"dateStartInput\" dateFormat=\"yy/mm/dd\" mask=\"9999/99/99\"\n                                                  value={inputFechaInicio} monthNavigator\n                                                  yearNavigator\n                                                  yearRange=\"2010:2030\"\n                                                  placeholder={inputFechaInicio}\n                                                  disabled={filesReady}\n                                                  onChange={(e) => {\n                                                      let dateFormat =\n                                                          Validations.convertInputDate(\n                                                              e.target.value\n                                                          );\n                                                      setInputFechaInicio(dateFormat);\n                                                  }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label htmlFor=\"dateEndInput\" className=\"p-d-block\">\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox inputId=\"filesReady\" checked={filesReady}\n                                                  onChange={(e) =>\n                                                      setFilesReady(e.checked)\n                                                  }\n                                        />\n                                        <label htmlFor=\"filesReady\">Ya cuento con los archivos descargados</label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport BrandTemplate from \"../templates/BrandTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function BrandPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <BrandTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport ClienteService from \"../../service/ClienteService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport {\n  txtSmsLoading,\n  txtMessageErrorGeneral,\n  txtMessageClientsSaved,\n  txtTitleClients,\n  txtLastUpdateClients,\n} from \"../../utils/Strings\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { Button } from \"primereact/button\";\n\nmoment.locale(\"es\");\n\nexport default function ClientsTemplate() {\n  const [resume, setResume] = useState({});\n  const [allClients, setAllClients] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [allClientsText, setAllClientsText] = useState(\"\");\n  const [clientsText, setClientsText] = useState(\"\");\n\n  const toast = useRef(null);\n\n  useEffect(() => {\n    getResume();\n  }, []);\n\n  const getResume = () => {\n    setResume(JSON.parse(localStorage.getItem(\"resume\")));\n  };\n\n  const clearAndFilterData = async (data = []) => {\n    let newData = [];\n    for await (let item of data) {\n      item = item.trim();\n      if (item.length > 2) newData.push(item);\n    }\n    return newData;\n  };\n\n  const saveAllClients = async () => {\n    showMessageloading();\n    const data = await clearAndFilterData(allClients);\n    const middleBig1 = data.splice(0, data.length / 2);\n    const middleTiny1 = middleBig1.splice(0, middleBig1.length / 2);\n    const middleTiny2 = middleBig1.splice(0, middleBig1.length);\n    const middleBig2 = data.splice(0, data.length);\n    const middleTiny3 = middleBig2.splice(0, middleBig2.length / 2);\n    const middleTiny4 = middleBig2.splice(0, middleBig2.length);\n    ClienteService.insertAll(middleTiny1)\n      .then((res) => {\n        if (res.data) {\n          Promise.all([\n            ClienteService.insertOne(middleTiny2),\n            ClienteService.insertOne(middleTiny3),\n            ClienteService.insertOne(middleTiny4),\n          ])\n            .then((res) => {\n              if (res[0].data && res[1].data && res[2].data) {\n                clearMessageLoading();\n                saveHistory();\n                clearAllClients();\n                showMessage(txtMessageClientsSaved);\n              } else showMessage(txtMessageErrorGeneral);\n            })\n            .catch((err) => {\n              clearMessageLoading();\n              console.error(err);\n              showMessage(txtMessageErrorGeneral);\n            });\n        } else showMessage(txtMessageErrorGeneral);\n      })\n      .catch((err) => {\n        clearMessageLoading();\n        console.error(err);\n        showMessage(txtMessageErrorGeneral);\n      });\n  };\n\n  const saveClients = async () => {\n    showMessageloading();\n    const data = await clearAndFilterData(clients);\n    ClienteService.insertOne(data)\n      .then((response) => {\n        clearMessageLoading();\n        if (response) {\n          saveHistory();\n          clearClients();\n          showMessage(txtMessageClientsSaved);\n        } else {\n          showMessage(txtMessageErrorGeneral);\n        }\n      })\n      .catch((error) => {\n        clearMessageLoading();\n        console.error(error);\n        showMessage(txtMessageErrorGeneral);\n      });\n  };\n\n  const clearAllClients = () => {\n    setAllClients([]);\n    setAllClientsText(\"\");\n    showMessage({\n      type: \"info\",\n      title: \"Se han limpiado todos expedientes\",\n      description: \"Limpiado\",\n    });\n  };\n  const clearClients = () => {\n    setClients([]);\n    setClientsText(\"\");\n    showMessage({\n      type: \"info\",\n      title: \"Se han limpiado los expedientes\",\n      description: \"Limpiado\",\n    });\n  };\n\n  const clearMessageLoading = () => {\n    toast.current.clear();\n  };\n\n  const showMessageloading = () => {\n    toast.current.show({\n      severity: \"info\",\n      sticky: true,\n      content: (\n        <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\n          <div className=\"p-text-center\">\n            <i\n              className=\"pi pi-spin pi-spinner\"\n              style={{ fontSize: \"3em\" }}\n            ></i>\n            <h4>{txtSmsLoading[0]}</h4>\n            <p>{txtSmsLoading[1]}</p>\n          </div>\n        </div>\n      ),\n    });\n  };\n\n  const saveHistory = () => {\n    HistorialService.insertOne(3);\n  };\n\n  const showMessage = ({ type, title, description }) => {\n    toast.current.show({\n      severity: type,\n      summary: title,\n      detail: description,\n      life: 3000,\n    });\n  };\n\n  return (\n    <>\n      <BreadCrumb\n        model={[{ label: txtTitleClients }]}\n        home={{ icon: \"pi pi-home\" }}\n      />\n      <Toast ref={toast} />\n      <div className=\"p-grid\">\n        <div className=\"p-col p-p-3\">\n          <h1>{txtTitleClients}</h1>\n          <div>\n            {txtLastUpdateClients}\n            {moment(resume.ultimaModificacionClientes).format(\"LLLL\")}\n          </div>\n          <div className=\"p-grid p-mt-3\">\n            <div className=\"p-col-12 p-sm-6\">\n              <div className=\"p-grid\">\n                <div className=\"p-col-12 p-sm-8\">\n                  <h2>\n                    Guardar todos los expedientes :{\" \"}\n                    <span>{allClients.length}</span>\n                  </h2>\n                </div>\n                <div className=\"p-col-12 p-sm-4 p-mt-0 p-mt-sm-2\">\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-times\"\n                    label=\"Limpiar\"\n                    className=\"p-button-info p-mr-1\"\n                    onClick={clearAllClients}\n                    disabled={allClients.length <= 0}\n                  />\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-save\"\n                    label=\"Guardar\"\n                    className=\"p-button-success\"\n                    onClick={saveAllClients}\n                    disabled={allClients.length <= 0}\n                  />\n                </div>\n              </div>\n              <InputTextarea\n                value={allClientsText}\n                rows={20}\n                autoResize\n                style={{ width: \"100%\" }}\n                onChange={(e) => {\n                  setAllClientsText(e.target.value);\n                  setAllClients(e.target.value.split(\"\\n\"));\n                }}\n              />\n            </div>\n            <div className=\"p-col-12 p-sm-6\">\n              <div className=\"p-grid\">\n                <div className=\"p-col\">\n                  <h2>\n                    Añadir más expedientes : <span>{clients.length}</span>\n                  </h2>\n                </div>\n                <div className=\"p-col-12 p-sm-4 p-mt-0 p-mt-sm-2\">\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-times\"\n                    label=\"Limpiar\"\n                    className=\"p-button-info p-mr-1\"\n                    onClick={clearClients}\n                    disabled={clients.length <= 0}\n                  />\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-save\"\n                    label=\"Guardar\"\n                    className=\"p-button-warning\"\n                    onClick={saveClients}\n                    disabled={clients.length <= 0}\n                  />\n                </div>\n              </div>\n              <InputTextarea\n                value={clientsText}\n                rows={20}\n                autoResize\n                style={{ width: \"100%\" }}\n                onChange={(e) => {\n                  setClientsText(e.target.value);\n                  setClients(e.target.value.split(\"\\n\"));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport ClientsTemplate from '../templates/ClientsTemplate'\nimport {useHistory} from \"react-router-dom\";\n\nexport default function ClientsPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n     return (\n          <>\n              <MenuTop/>\n              <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ClientsTemplate />\n                </div>\n            </div>\n          </>\n     )\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtMessageUserPasswordSuccess,\n    txtMessageUserPasswordError,\n    txtTitlePersonalData,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtDesactiveActiveFieldsLabel,\n    txtUpdateInformationLabel,\n    txtPasswordCurrentlyLabel,\n    txtPasswordCurrentlyHelp,\n    txtNewPasswordLabel,\n    txtNewPasswordHelp,\n    txtRepeatNewPasswordLabel,\n    txtRepeatNewPasswordHelp,\n    txtUpdatePassword,\n    txtMessageErrorGeneral,\n    txtCheckPasswords,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function PersonalData() {\n    // ? Controla la habilitación y deshabilitación de todos los campos\n    const [activePersonalFields, setActivePersonalFields] = useState(true);\n    const [activePasswordFields, setActivePasswordFields] = useState(true);\n    const toast = useRef(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function changePassword({contraseñaActual, nuevaContraseña, repetirNuevaContraseña,}) {\n        UsuarioService.changePassword(\n            userInfo.correo,\n            contraseñaActual,\n            nuevaContraseña,\n            repetirNuevaContraseña\n        )\n            .then((response) => {\n                if (response.data) {\n                    showMessage(txtMessageUserPasswordSuccess);\n                    localStorage.clear();\n                    history.push(\"/\");\n                } else {\n                    txtMessageErrorGeneral.description = txtCheckPasswords;\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                setUserInfo(response.data);\n                localStorage.setItem(\"userActive\", JSON.stringify(userInfo));\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    //? Aquí se guarda la información de la persona que está operando el sistema\n    const [userInfo, setUserInfo] = useState({\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    });\n\n    // ? Aquí se guarda la información del cambio de contraseña\n    const [userPassword, setUserPassword] = useState({\n        contraseñaActual: \"****\",\n        nuevaContraseña: \"****\",\n        repetirNuevaContraseña: \"****\",\n    });\n\n    //? Valida los valores de userInfo y cambiar datos\n    const checkFormInfoUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = userInfo;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            updateOne(userInfo);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n    };\n\n    //? Valida los valores de userPassword  y cambiar datos\n    const checkFormPasswordUser = () => {\n        const {contraseñaActual, nuevaContraseña, repetirNuevaContraseña} =\n            userPassword;\n        if (\n            Validations.validatePassworsNoEmpty(\n                contraseñaActual,\n                nuevaContraseña,\n                repetirNuevaContraseña\n            )\n        ) {\n            if (nuevaContraseña === repetirNuevaContraseña) {\n                changePassword(userPassword);\n            } else {\n                showMessage(txtMessageUserPasswordError);\n            }\n        } else {\n            showMessage(txtMessageUserPasswordError);\n        }\n    };\n\n    //? Cambiar el contenido de los input (Solo es diseño)\n    const handleContentPasswordUser = () => {\n        setActivePasswordFields(!activePasswordFields);\n        if (activePasswordFields) {\n            setUserPassword({\n                contraseñaActual: \"\",\n                nuevaContraseña: \"\",\n                repetirNuevaContraseña: \"\",\n            });\n        } else {\n            setUserPassword({\n                contraseñaActual: \"****\",\n                nuevaContraseña: \"****\",\n                repetirNuevaContraseña: \"****\",\n            });\n        }\n    };\n\n    //? Muestra los mensajes de los Toast\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast}/>\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitlePersonalData}</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                        <InputText\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.nombre}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    nombre: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.nombre && \"p-invalid\"}\n                        />\n                        {!userInfo.nombre && (\n                            <small id=\"nombre-help\" className=\"p-error p-d-block\">\n                                {txtNameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"primerApellido\">\n                            {txtFistSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"primerApellido\"\n                            name=\"primerApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.primerApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    primerApellido: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.primerApellido && \"p-invalid\"}\n                        />\n                        {!userInfo.primerApellido && (\n                            <small id=\"primerApellido-help\" className=\"p-error p-d-block\">\n                                {txtFistSurnameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"segundoApellido\">\n                            {txtSecondSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"segundoApellido\"\n                            name=\"segundoApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.segundoApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    segundoApellido: e.target.value,\n                                });\n                            }}\n                        />\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"fechaDeNacimiento\">\n                            {txtDateOfBirthLabel}\n                        </label>\n                        <Calendar\n                            id=\"fechaDeNacimiento\"\n                            name=\"fechaDeNacimiento\"\n                            monthNavigator\n                            yearNavigator\n                            showIcon\n                            yearRange=\"1950:2010\"\n                            dateFormat=\"yy-mm-dd\"\n                            placeholder={\n                                userInfo.fechaDeNacimiento.split(\"T\")[0]\n                            }\n                            disabled={activePersonalFields}\n                            value={userInfo.fechaDeNacimiento}\n                            onChange={(e) => {\n                                let result = Validations.convertOnlyInputDate(\n                                    e.target.value\n                                );\n                                setUserInfo({\n                                    ...userInfo,\n                                    fechaDeNacimiento: result,\n                                });\n                            }}\n                        />\n                        {!userInfo.fechaDeNacimiento && (\n                            <small\n                                id=\"fechaDeNacimiento-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtDateOfBirthHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                        <InputText\n                            id=\"correo\"\n                            name=\"correo\"\n                            type=\"correo\"\n                            disabled={activePersonalFields}\n                            value={userInfo.correo}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    correo: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.correo && \"p-invalid\"}\n                        />\n                        {!userInfo.correo && (\n                            <small id=\"correo-help\" className=\"p-error p-d-block\">\n                                {txtEmailHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            setActivePersonalFields(!activePersonalFields);\n                        }}\n                    />\n                    <Button\n                        label={txtUpdateInformationLabel}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePersonalFields}\n                        onClick={checkFormInfoUser}\n                    />\n                </div>\n            </div>\n            <div className=\"p-col p-p-3\">\n                <h2>Cambio de contraseña</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"contraseñaActual\">\n                            {txtPasswordCurrentlyLabel}\n                        </label>\n                        <Password\n                            id=\"contraseñaActual\"\n                            name=\"contraseñaActual\"\n                            toggleMask\n                            feedback={false}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.contraseñaActual}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    contraseñaActual: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.contraseñaActual && (\n                            <small id=\"contraseñaActual-help\" className=\"p-error p-d-block\">\n                                {txtPasswordCurrentlyHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nuevaContraseña\">\n                            {txtNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"nuevaContraseña\"\n                            name=\"nuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.nuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    nuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.nuevaContraseña && (\n                            <small id=\"nuevaContraseña-help\" className=\"p-error p-d-block\">\n                                {txtNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"repetirNuevaContraseña\">\n                            {txtRepeatNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"repetirNuevaContraseña\"\n                            name=\"repetirNuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.repetirNuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    repetirNuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.repetirNuevaContraseña && (\n                            <small id=\"repetirNuevaContraseña-help\" className=\"p-error p-d-block\">\n                                {txtRepeatNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            handleContentPasswordUser();\n                        }}\n                    />\n                    <Button\n                        label={txtUpdatePassword}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePasswordFields}\n                        onClick={checkFormPasswordUser}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Toast} from \"primereact/toast\";\nimport {Toolbar} from \"primereact/toolbar\";\nimport {InputSwitch} from \"primereact/inputswitch\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Badge} from \"primereact/badge\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtMessageUserDelete,\n    txtRestartPasswordTitle,\n    txtRestartPasswordContent,\n    txtYES,\n    txtNO,\n    txtCancelButton,\n    txtSaveButton,\n    txtNewUserButton,\n    txtExport,\n    txtSearch,\n    txtTitleCrud,\n    txtFooterTableLabel,\n    txtUserDetails,\n    txtSuperAdminLabel,\n    txtDeleteUserTitle,\n    txtDeleteUserContent,\n    txtMessageUserPasswordReset,\n    txtMessageErrorGeneral,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function CrudUsers() {\n    let emptyUser = {\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    };\n\n    const [users, setUsers] = useState([]);\n    const [userDialog, setUserDialog] = useState(false);\n    const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n    const [selectedUsers, setSelectedUsers] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(\"\");\n    const [user, setUser] = useState(emptyUser);\n    const [saveOrUpdate, setSaveOrUpdate] = useState(false);\n    const [detailsUser, setDetailsUser] = useState(false);\n    const [detailUserChange, setDetailUserChange] = useState({});\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    useEffect(() => {\n        getAll();\n    }, []);\n\n    const getAll = ()=> {\n        UsuarioService.getAll()\n            .then((response) => {\n                setUsers(response.data);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function insertOne(user) {\n        UsuarioService.insertOne(user)\n            .then((response) => {\n                setDetailUserChange(response.data);\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function removeOne(email) {\n        UsuarioService.removeOne(email)\n            .then((response) => {\n                if (response.data) {\n                    getAll();\n                    showMessage(txtMessageUserDelete);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function resetPasswordUser(email) {\n        UsuarioService.resetPassword(email)\n            .then((response) => {\n                if (response.data) {\n                    setDetailUserChange(response.data);\n                    hideDetailsUser();\n                    showMessage(txtMessageUserPasswordReset);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    const openNew = () => {\n        setUser(emptyUser);\n        setUserDialog(true);\n        setSaveOrUpdate(true);\n    };\n\n    const hideDialog = () => {\n        setUserDialog(false);\n    };\n\n    const hideDeleteUserDialog = () => {\n        setDeleteUserDialog(false);\n    };\n\n    const hideDetailsUser = () => setDetailsUser(!detailsUser);\n\n    const saveUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = user;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            if (saveOrUpdate) {\n                insertOne(user);\n                hideDetailsUser();\n            } else {\n                updateOne(user);\n            }\n            setSaveOrUpdate(false);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n        setUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const editUser = (user) => {\n        setUser({...user});\n        setUserDialog(true);\n    };\n\n    const confirmDeleteUser = (user) => {\n        setUser(user);\n        setDeleteUserDialog(true);\n    };\n\n    const deleteUser = () => {\n        removeOne(user.correo);\n        setDeleteUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const exportCSV = () => {\n        dt.current.exportCSV();\n    };\n\n    const resetPassword = (user) => {\n        resetPasswordUser(user.correo);\n        toast.current.clear();\n    };\n\n    const showConfirmResetPassword = (rowData) => {\n        toast.current.show({\n            severity: \"warn\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{flex: \"1\"}}>\n                    <div className=\"p-text-center\">\n                        <i className=\"pi pi-exclamation-triangle\" style={{fontSize: \"3rem\"}}></i>\n                        <h4>{txtRestartPasswordTitle}</h4>\n                        <p>{txtRestartPasswordContent}</p>\n                    </div>\n                    <div className=\"p-grid p-fluid\">\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtYES}\n                                className=\"p-button-success\"\n                                onClick={() => resetPassword(rowData)}\n                            />\n                        </div>\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtNO}\n                                className=\"p-button-danger\"\n                                onClick={() => {\n                                    toast.current.clear();\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                <Button\n                    icon=\"pi pi-pencil\"\n                    className=\"p-button-rounded p-button-info p-mr-2\"\n                    onClick={() => editUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-trash\"\n                    className=\"p-button-rounded p-button-danger p-mr-2\"\n                    onClick={() => confirmDeleteUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-replay\"\n                    className=\"p-button-rounded p-button-warning\"\n                    onClick={() => showConfirmResetPassword(rowData)}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const adminBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                {rowData.superAdmin ? (\n                    <Badge value={txtYES} severity=\"success\" className=\"p-mr-2\"/>\n                ) : (\n                    <Badge value={txtNO} className=\"p-mr-2\" severity=\"danger\"/>\n                )}\n            </React.Fragment>\n        );\n    };\n\n    const dateBirthBodyTemplane = (rowData) => {\n        return (\n            <React.Fragment>\n                <div>{moment(rowData.fechaDeNacimiento).format(\"LL\")}</div>\n            </React.Fragment>\n        );\n    };\n\n    const userDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtCancelButton}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDialog}\n            />\n            <Button\n                label={txtSaveButton}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={saveUser}\n            />\n        </React.Fragment>\n    );\n\n    const deleteUserDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtNO}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDeleteUserDialog}\n            />\n            <Button\n                label={txtYES}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={deleteUser}\n            />\n        </React.Fragment>\n    );\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtNewUserButton}\n                    icon=\"pi pi-plus\"\n                    className=\"p-button-success p-mr-2\"\n                    onClick={openNew}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtExport}\n                    icon=\"pi pi-download\"\n                    className=\"p-button\"\n                    style={{backgroundColor: \"var(--teal-600)\"}}\n                    onClick={exportCSV}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const header = (\n        <div className=\"table-header\">\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\"/>\n                <InputText\n                    type=\"search\"\n                    value={globalFilter}\n                    onInput={(e) => setGlobalFilter(e.target.value)}\n                    placeholder={txtSearch}\n                />\n            </span>\n        </div>\n    );\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast}/>\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitleCrud}</h2>\n                <div className=\"card\">\n                    <Toolbar\n                        className=\"p-mb-4\"\n                        left={leftToolbarTemplate}\n                        right={rightToolbarTemplate}\n                    />\n                    <DataTable\n                        ref={dt}\n                        value={users}\n                        selection={selectedUsers}\n                        onSelectionChange={(e) => setSelectedUsers(e.value)}\n                        dataKey=\"correo\"\n                        paginator\n                        rows={7}\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate={txtFooterTableLabel}\n                        globalFilter={globalFilter}\n                        header={header}\n                        emptyMessage=\"Sin ningun usuario aún\"\n                    >\n                        <Column field=\"nombre\" header=\"Nombre\" sortable/>\n                        <Column\n                            field=\"primerApellido\"\n                            header=\"Primer apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"segundoApellido\"\n                            header=\"Segundo apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"fechaDeNacimiento\"\n                            header=\"Fecha de nacimiento\"\n                            body={dateBirthBodyTemplane}\n                            sortable\n                        />\n                        <Column\n                            field=\"correo\"\n                            header=\"Correo electrónico\"\n                            sortable\n                        />\n                        <Column\n                            field=\"superAdmin\"\n                            header=\"Super administrador\"\n                            body={adminBodyTemplate}\n                        />\n                        <Column header=\"Acciones\" body={actionBodyTemplate}/>\n                    </DataTable>\n                    <Dialog\n                        visible={userDialog}\n                        style={{width: \"450px\"}}\n                        header={txtUserDetails}\n                        modal\n                        className=\"p-fluid\"\n                        footer={userDialogFooter}\n                        onHide={hideDialog}>\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                                <InputText\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    type=\"text\"\n                                    value={user.nombre}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            nombre: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.nombre && \"p-invalid\"}\n                                />\n                                {!user.nombre && (\n                                    <small id=\"nombre-help\" className=\"p-error p-d-block\">\n                                        {txtNameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"primerApellido\">\n                                    {txtFistSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"primerApellido\"\n                                    name=\"primerApellido\"\n                                    type=\"text\"\n                                    value={user.primerApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            primerApellido: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.primerApellido && \"p-invalid\"}\n                                />\n                                {!user.primerApellido && (\n                                    <small id=\"primerApellido-help\" className=\"p-error p-d-block\">\n                                        {txtFistSurnameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"segundoApellido\">\n                                    {txtSecondSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"segundoApellido\"\n                                    name=\"segundoApellido\"\n                                    type=\"text\"\n                                    value={user.segundoApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            segundoApellido: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"fechaDeNacimiento\">\n                                    {txtDateOfBirthLabel}\n                                </label>\n                                <Calendar\n                                    id=\"fechaDeNacimiento\"\n                                    name=\"fechaDeNacimiento\"\n                                    monthNavigator\n                                    yearNavigator\n                                    yearRange=\"1950:2010\"\n                                    showIcon\n                                    placeholder={\n                                        user.fechaDeNacimiento.split(\"T\")[0]\n                                    }\n                                    dateFormat=\"yy-mm-d\"\n                                    value={user.fechaDeNacimiento}\n                                    onChange={(e) => {\n                                        let result =\n                                            Validations.convertOnlyInputDate(\n                                                e.target.value\n                                            );\n                                        setUser({\n                                            ...user,\n                                            fechaDeNacimiento: result,\n                                        });\n                                    }}\n                                />\n                                {!user.fechaDeNacimiento && (\n                                    <small id=\"fechaDeNacimiento-help\" className=\"p-error p-d-block\">\n                                        {txtDateOfBirthHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                                <InputText\n                                    id=\"correo\"\n                                    name=\"correo\"\n                                    type=\"email\"\n                                    value={user.correo}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            correo: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.correo && \"p-invalid\"}\n                                />\n                                {!user.correo && (\n                                    <small id=\"correo-help\" className=\"p-error p-d-block\">\n                                        {txtEmailHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field p-text-center\">\n                                <label htmlFor=\"superAdmin\">\n                                    {txtSuperAdminLabel}\n                                </label>\n                                <br/>\n                                <InputSwitch\n                                    id=\"superAdmin\"\n                                    name=\"superAdmin\"\n                                    checked={user.superAdmin}\n                                    onChange={(e) =>\n                                        setUser({\n                                            ...user,\n                                            superAdmin: !user.superAdmin,\n                                        })\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={deleteUserDialog}\n                        style={{width: \"450px\"}}\n                        header={txtDeleteUserTitle}\n                        modal\n                        footer={deleteUserDialogFooter}\n                        onHide={hideDeleteUserDialog}>\n                        <div className=\"confirmation-content\">\n                            {txtDeleteUserContent}\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={detailsUser}\n                        style={{width: \"450px\"}}\n                        header={\"Detalles de usuario\"}\n                        draggable={false}\n                        onHide={hideDetailsUser}\n                        footer={\n                            <Button\n                                label=\"¡Listo!\"\n                                className=\"p-button-success\"\n                                onClick={hideDetailsUser}\n                            />\n                        }>\n                        <div>\n                            Nombre completo:{\" \"}\n                            <span>{`${detailUserChange.nombre} ${detailUserChange.primerApellido} ${detailUserChange.segundoApellido}`}</span>\n                        </div>\n                        <div>\n                            Fecha de nacimiento:{\" \"}\n                            <span>{`${moment(detailUserChange.fechaDeNacimiento).format(\"LLL\")}`}</span>\n                        </div>\n                        <div>\n                            Correo: <span>{`${detailUserChange.correo}`}</span>\n                        </div>\n                        <div>\n                            Contraseña creada:{\" \"}\n                            <span>{`${detailUserChange.contrasena}`}</span>\n                            <p><i>Favor de guardar y cambiar la contraseña más tarde</i></p>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport PersonalData from \"../organisms/PersonalData\";\nimport CrudUsers from \"../organisms/CrudUsers\";\nimport {\n    txtTitleProfile,\n    txtTabPersonalData,\n    txtTabUserTable,\n} from \"../../utils/Strings\";\n\nexport default function ProfileTemplate() {\n    const [userInfo, setUserInfo] = useState({\n        superAdmin: false,\n    });\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitleProfile }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <div className=\"p-grid\">\n                <div className=\"p-col\">\n                    <TabView>\n                        <TabPanel\n                            header={txtTabPersonalData}\n                            leftIcon=\"pi pi-fw pi-user\"\n                        >\n                            <PersonalData />\n                        </TabPanel>\n                        {userInfo.superAdmin ? (\n                            <TabPanel\n                                header={txtTabUserTable}\n                                leftIcon=\"pi pi-fw pi-pencil\"\n                            >\n                                <CrudUsers />\n                            </TabPanel>\n                        ) : (\n                            <div className=\"disable\"></div>\n                        )}\n                    </TabView>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport ProfileTemplate from '../templates/ProfileTemplate';\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function ProfilePage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop/>\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ProfileTemplate/>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport {txtAltLogoImg, txt404, txtPageNotFound, txtPageError,} from \"../../utils/Strings\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\n\nexport default function ErrorPage() {\n    return (\n        <div className=\"p-d-flex p-ai-center p-jc-center pageerror\">\n            <div className=\"p-col-6\">\n                <div className=\"p-text-center\">\n                    <img src={logonovopatent} alt={txtAltLogoImg} height=\"100px\"/>\n                    <div style={{fontSize: \"8em\", color: \"#454545\"}}>{txt404}</div>\n                    <div style={{fontSize: \"3em\", color: \"#454545\"}}>{txtPageNotFound}</div>\n                    <div style={{fontSize: \"1.5em\", color: \"#454545\"}}>{txtPageError}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import \"primereact/resources/themes/tailwind-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport React from \"react\";\nimport { locale, addLocale } from \"primereact/api\";\nimport { localLocation } from \"./utils/Strings\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport HomePage from \"./components/pages/HomePage\";\nimport PatentPage from \"./components/pages/PatentPage\";\nimport BrandPage from \"./components/pages/BrandPage\";\nimport InformationPage from \"./components/pages/ClientsPage\";\nimport ProfilePage from \"./components/pages/ProfilePage\";\nimport ErrorPage from \"./components/pages/ErrorPage\";\naddLocale(\"es\", localLocation);\nlocale(\"es\");\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/inicio\" component={HomePage} />\n                <Route path=\"/patentes\" component={PatentPage} />\n                <Route path=\"/marcas\" component={BrandPage} />\n                <Route path=\"/expedientes\" component={InformationPage} />\n                <Route path=\"/perfil\" component={ProfilePage} />\n                <Route component={ErrorPage} />\n            </Switch>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}