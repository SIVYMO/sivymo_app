{"version":3,"sources":["utils/Strings.js","utils/Validations.js","assets/img/logonovopatent.jpg","service/api.js","service/UsuarioService.js","components/pages/Login.jsx","components/CustomHooks/useLogin.js","components/CustomHooks/useActive.js","service/ResumeService.js","components/templates/HomeTemplate.jsx","components/organisms/MenuTop.jsx","components/pages/HomePage.jsx","service/ClienteService.js","service/apiScraping.js","service/ScrapingService.js","service/HistorialService.js","utils/Colors.js","components/templates/PatentTemplate.jsx","components/pages/PatentPage.jsx","components/templates/BrandTemplate.jsx","components/pages/BrandPage.jsx","components/templates/ClientsTemplate.jsx","components/pages/ClientsPage.jsx","components/organisms/PersonalData.jsx","components/organisms/CrudUsers.jsx","components/templates/ProfileTemplate.jsx","components/pages/ProfilePage.jsx","components/pages/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["txtLastQueryPatent","txtLastQueryBrand","txtLastUpdateClients","itemsMenuTop","label","icon","command","window","location","txtAltLogoImg","txtMessageSucces","type","title","description","txtEmailLabel","txtMessageLoginError","txtMessageUserSuccess","txtMessageUserError","txtMessageUserDelete","txtMessageUserPasswordSuccess","txtMessageUserPasswordError","txtMessageUserPasswordReset","txtMessageErrorGeneral","txtNameLabel","txtNameHelp","txtFistSurnameLabel","txtFistSurnameHelp","txtSecondSurnameLabel","txtDateOfBirthLabel","txtDateOfBirthHelp","txtEmailHelp","txtDesactiveActiveFieldsLabel","txtYES","txtNO","txtSaveButton","txtSmsLoading","txtMessageClientsSaved","txtTitleClients","txtClearButton","txtClearMessages","txtExportButton","txtStartSearchButton","txtNoData","txtTitlePatents","txtTitleBrands","txtMessageNoClients","txtMessageSearchSuccess","txtMessageSearchError","txtSubtitleBrand","txtSubitlePatent1","txtSubitlePatent2","txtSubitlePatent3","txtLodaing","txtStartSearch","txtInstructionsSearch","txtDateStartLabel","txtDateEndLabel","txtNoDataSearch","txtDataSearch","email","test","name","flag","i","length","indexOf","charAt","surname","this","validateNames","date","split","replaceAll","tempDate","JSON","stringify","cutDate","substring","convertAPIDate","dateStart","dateEnd","first","second","dateBirth","validateSecondSurname","validateEmail","curently","newPas","repeat","userEmail","userEmailInfo","axios","create","baseURL","headers","api","put","oldPassword","newPassword","obj","post","get","id","delete","Login","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","emailErrorSms","setEmailErrorSms","passwordErrorSms","setPasswordErrorSms","emailUIError","setEmailUIError","passwordUIError","setPasswordUIError","toastMessages","useRef","useEffect","localStorage","getItem","clearMessages","current","clear","showMessage","show","severity","summary","detail","sticky","className","ref","src","logonovopatent","alt","height","style","fontSize","fontWeight","htmlFor","aria-describedby","value","maxLength","onChange","e","target","toggleMask","feedback","onClick","Validations","userLogin","correo","contrasena","UsuarioService","login","then","response","setItem","data","usuario","catch","err","useActive","Logo","width","objectFit","LastDateCategory","last_search_info","last_date","size","moment","format","HomeTemplate","userInfo","setUserInfo","ultimaBusquedaPatentes","ultimaBusquedaMarcas","ultimaBusquedaEjemplares","ultimaModificacionClientes","clientesTotales","resume","setResume","ResumeService","getResume","console","error","parse","nombre","primerApellido","locale","MenuTop","start","end","confirmDialog","message","header","acceptClassName","rejectClassName","accept","reject","model","HomePage","dark_sea_green","PatentTemplate","showDialog","setShowDialog","notificaciones","setNotificaciones","patentesRegistros","setPatentesRegistros","requisitos","setRequisitos","history","setHistory","filesReady","setFilesReady","inputFechaInicio","setInputFechaInicio","inputFechaFin","setInputFechaFin","toast","dt1","dt2","dt3","setData","a","getClients","info","objSend","fechaInicio","fechaFin","datos","descargado","ScrapingService","getPatentes","resp","viewData","log","onbeforeunload","ClienteService","getAll","enlaceBodyTemplate","rowdata","href","rel","NotificacionPatentes","emptyMessage","paginator","rows","field","sortable","body","PatentesIndustriales","scrollable","headerStyle","PatentesNotificados","home","backgroundColor","convertInputDate","Date","exportCSV","showHeader","visible","draggable","closable","onHide","mode","color","dateFormat","mask","monthNavigator","yearNavigator","yearRange","placeholder","disabled","inputId","checked","validateDateStartEnd","HistorialService","insertOne","PatentPage","BrandTemplate","marcas","setMarcas","getMarcas","headerExport","BrandPage","ClientsTemplate","importedData","setImportedData","selectedImportedData","setSelectedImportedData","importedCols","setImportedCols","importExcel","showMessageloading","file","files","xlsx","reader","FileReader","onload","wb","read","result","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","cols","shift","_importedCols","map","col","toCapitalize","_importedData","d","reduce","c","readAsArrayBuffer","clearMessageLoading","s","r","toLowerCase","slice","content","flex","saveAllImportedData","m1","splice","m2","insertTwo","life","chooseOptions","auto","url","onUpload","selection","index","ClientsPage","PersonalData","activePersonalFields","setActivePersonalFields","activePasswordFields","setActivePasswordFields","segundoApellido","fechaDeNacimiento","superAdmin","contraseñaActual","nuevaContraseña","repetirNuevaContraseña","userPassword","setUserPassword","showIcon","convertOnlyInputDate","user","validateFormUser","updateOne","validatePassworsNoEmpty","changePassword","CrudUsers","emptyUser","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","selectedUsers","setSelectedUsers","globalFilter","setGlobalFilter","setUser","saveOrUpdate","setSaveOrUpdate","detailsUser","setDetailsUser","detailUserChange","setDetailUserChange","dt","openNew","hideDialog","hideDeleteUserDialog","hideDetailsUser","resetPassword","userDialogFooter","Fragment","deleteUserDialogFooter","removeOne","onInput","left","right","onSelectionChange","dataKey","paginatorTemplate","currentPageReportTemplate","rowData","editUser","confirmDeleteUser","showConfirmResetPassword","modal","footer","ProfileTemplate","leftIcon","ProfilePage","ErrorPage","App","path","exact","component","InformationPage","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","choose","upload","cancel","passwordPrompt","weak","medium","strong","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19b20bc8.chunk.js","sourcesContent":["// ? Locale\nexport const localLocation = {\n    firstDayOfWeek: 1,\n    dayNames: [\n        \"domingo\",\n        \"lunes\",\n        \"martes\",\n        \"miércoles\",\n        \"jueves\",\n        \"viernes\",\n        \"sábado\",\n    ],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"Mi\", \"J\", \"V\", \"S\"],\n    monthNames: [\n        \"enero\",\n        \"febrero\",\n        \"marzo\",\n        \"abril\",\n        \"mayo\",\n        \"junio\",\n        \"julio\",\n        \"agosto\",\n        \"septiembre\",\n        \"octubre\",\n        \"noviembre\",\n        \"diciembre\",\n    ],\n    monthNamesShort: [\n        \"ene\",\n        \"feb\",\n        \"mar\",\n        \"abr\",\n        \"may\",\n        \"jun\",\n        \"jul\",\n        \"ago\",\n        \"sep\",\n        \"oct\",\n        \"nov\",\n        \"dic\",\n    ],\n    today: \"Hoy\",\n    clear: \"Claro\",\n    accept: \"Si\",\n    reject: \"No\",\n    choose: \"Elija\",\n    upload: \"Subir\",\n    cancel: \"Cancelar\",\n    passwordPrompt: \"Ingrese contraseña\",\n    weak: \"Débil\",\n    medium: \"Normal\",\n    strong: \"Fuerte\",\n};\n\n// ? HomeTemplate.jsx\nexport const backgroundWallpaper = \"Fondo de portada\",\n    txtWelcome = \"Hola, bienvenido(a) de nuevo\",\n    txtLastQueryPatent = \"Última búsqueda de patentes: \",\n    txtLastQueryBrand = \"Última búsqueda de marcas: \",\n    txtLastQueryEjemplares = \"Última búsqueda de ejemplares extraordinarios: \",\n    txtLastUpdateClients = \"Última actualización en expedientes: \",\n    txtBadgeClients =\"Ingresar expedientes para poder realizar consultas\";\n\n// ? MenuTop.jsx\nexport const txtConfirmExit = \"¿Estás seguro de salir del sistema?\",\n    txtExit = \"Salir\",\n    itemsMenuTop = [\n        {\n            label: \"Inicio\",\n            icon: \"pi pi-fw pi-home\",\n            command: () => {\n                window.location = \"/sivymo_app/#/inicio\";\n            },\n        },\n        {\n            label: \"Patentes\",\n            icon: \"pi pi-fw pi-file\",\n            command: () => {\n                window.location = \"/sivymo_app/#/patentes\";\n            },\n        },\n        {\n            label: \"Marcas\",\n            icon: \"pi pi-fw pi-globe\",\n            command: () => {\n                window.location = \"/sivymo_app/#/marcas\";\n            },\n        },\n        {\n            label: \"Expedientes\",\n            icon: \"pi pi-fw pi-id-card\",\n            command: () => {\n                window.location = \"/sivymo_app/#/expedientes\";\n            },\n        },\n        {\n            label: \"Perfil\",\n            icon: \"pi pi-fw pi-user\",\n            command: () => {\n                window.location = \"/sivymo_app/#/perfil\";\n            },\n        },\n    ],\n    txtAltLogoImg = \"Logo Novopatent\",\n    txtLogoutButton = \"Salir\";\n\n// ? Login.jsx\nexport const txtCodeMustBe = \"El código es de 8 caracteres\",\n    txtEmailValid = \"El email no debe estar vacío y debe ser válido\",\n    txtPasswordValid = \"La contraseña no debe estar vacía\",\n    txtCodeValid = \"El código no debe estar vacío o ser menor a 8 caracteres\",\n    txtMessageSucces = {\n        type: \"success\",\n        title: \"El código es correcto\",\n        description: \"Redirigiendo...\",\n    },\n    txtMessageError = {\n        type: \"error\",\n        title: \"El código es incorrecto\",\n        description: \"Por favor verifíquelo nuevamente\",\n    },\n    txtLogin = \"Inicio de sesión\",\n    txtFillFields = \"Favor de llenar todos los campos\",\n    txtEmailLabel = \"Correo electrónico:\",\n    txtPasswordLabel = \"Contraseña:\",\n    txtPleaseWait = \"Por favor espere...\",\n    txtLoginButton = \"Iniciar sesión\",\n    txtCodeVerification =\n        \"Ingrese el código de verificación que ha sido enviado a su correo electrónico\",\n    txtCodeVerificationLabel = \"Código de verificación\",\n    txtCancelButton = \"Cancelar\",\n    txtVerifyButton = \"Verificar\",\n    txtMessageLoginError = {\n        type: \"error\",\n        title: \"Correo electrónico y/o contraseña incorrectos\",\n        description: \"Por favor verifíquelos nuevamente\",\n    };\n\n// ? ErrorPage.jsx\nexport const txt404 = \"404\",\n    txtPageNotFound = \"Página no encontrada\",\n    txtPageError =\n        \"La página que estás buscando no existe o ha ocurrido un error\";\n\n// ? ProfileTemplate.jsx\nexport const txtMessageUserSuccess = {\n        type: \"success\",\n        title: \"Usuario guardado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserError = {\n        type: \"error\",\n        title: \"Campos no válidos\",\n        description:\n            \"Algunos campos tienen caracteres especiales o están vacíos\",\n    },\n    txtMessageUserDelete = {\n        type: \"success\",\n        title: \"Usuario eliminado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordSuccess = {\n        type: \"success\",\n        title: \"Contraseña guardada correctamente\",\n        description: \"La contraseña del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordError = {\n        type: \"error\",\n        title: \"Las contraseñas no coinciden o están vacías\",\n        description: \"Verificar los campos de las contraseñas\",\n    },\n    txtMessageUserPasswordReset = {\n        type: \"success\",\n        title: \"Contraseña restablecida correctamente\",\n        description: \"Se ha cambiado la contraseña\",\n    },\n    txtMessageErrorGeneral = {\n        type: \"error\",\n        title: \"No se ejecutó la operación\",\n        description: \"Intentar de nuevo\",\n    },\n    txtTitlePersonalData = \"Tu información\",\n    txtNameLabel = \"Nombre:\",\n    txtNameHelp = \" El nombre no debe estar vacío y debe ser válido\",\n    txtFistSurnameLabel = \"Primer apellido:\",\n    txtFistSurnameHelp =\n        \" El primer apellido no debe estar vacío y debe ser válido\",\n    txtSecondSurnameLabel = \"Segundo apellido:\",\n    txtDateOfBirthLabel = \"Fecha de nacimiento:\",\n    txtDateOfBirthHelp =\n        \"La fecha de nacimiento no debe estar vacía y debe ser válida\",\n    txtEmailHelp =\n        \"El correo electrónico no debe estar vacío y debe ser válido\",\n    txtDesactiveActiveFieldsLabel = \"Habilitar/Deshabilitar campos\",\n    txtUpdateInformationLabel = \"Actualizar información\",\n    txtUpdatePassword = \"Actualizar contraseña\",\n    txtPasswordCurrentlyLabel = \"Contraseña actual:\",\n    txtPasswordCurrentlyHelp = \"La contraseña actual no debe estar vacía\",\n    txtNewPasswordLabel = \"Nueva contraseña:\",\n    txtNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRepeatNewPasswordLabel = \"Repetir nueva contraseña:\",\n    txtRepeatNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRestartPasswordTitle = \"¿Restablecer la contraseña de este usuario?\",\n    txtRestartPasswordContent =\n        \" Se le enviará un correo electrónico a esa persona con la nueva contraseña\",\n    txtYES = \"Si\",\n    txtNO = \"No\",\n    txtSaveButton = \"Guardar\",\n    txtNewUserButton = \"Nuevo usuario\",\n    txtExport = \"Exportar en CSV\",\n    txtSearch = \"Buscar...\",\n    txtTitleCrud = \"Tabla de usuarios\",\n    txtFooterTableLabel =\n        \"Mostrando {first} a {last} de {totalRecords} usuarios\",\n    txtUserDetails = \"Detalles de usuario\",\n    txtSuperAdminLabel = \"Super administrador:\",\n    txtDeleteUserTitle = \"¿Eliminar usuario?\",\n    txtDeleteUserContent =\n        \"El usuario se eliminará permanente de la aplicación\",\n    txtTitleProfile = \"Perfil\",\n    txtTabPersonalData = \"Datos personales\",\n    txtTabUserTable = \"Tabla de usuarios\",\n    txtCheckPasswords = \"Verifica que la contraseña actual sea correcta\"\n\n//  ? ClientsTemplate.js\nexport const txtSmsLoading = [\n        \"Cargando\",\n        \"Espere a que los datos estén listos\",\n    ],\n    txtMessageClientsSaved = {\n        type: \"success\",\n        title: \"Expedientes guardados\",\n        description: \"Se han actualizado correctamente\",\n    },\n    txtTitleClients = \"Expedientes\",\n    txtClearButton = \"Limpiar datos\",\n    txtNoDataLabel = \"Sin ningún dato subido\",\n    txtClearMessages = \"Limpiar mensajes\";\n\n// ? SpecimensTemplate.jsx\n// ? PatentTemplate.jsx\n// ? BrandTemplate.jsx\nexport const txtExportButton = \"Exportar resultados\",\n    txtStartSearchButton = \"Iniciar con la búsqueda\",\n    txtNoData = \"No hay datos\",\n    txtTitleExtraordinaryExamples = \"Ejemplares extraordinarios\",\n    txtTitlePatents = \"Patentes\",\n    txtTitleBrands = \"Marcas\",\n    txtMessageNoClients = {\n        type: \"error\",\n        title: \"No hay expedientes registrados\",\n        description: \"Registra algunos para realizar búsquedas\",\n    },\n    txtMessageSearchSuccess = {\n        type: \"success\",\n        title: \"Búsqueda realizada con éxito\",\n        description: \"Revisa si hubo coincidencias con los registros\",\n    },\n    txtMessageSearchError = {\n        type: \"error\",\n        title: \"Ocurrió un error de conexión\",\n        description: \"Vuelve a intentarlo de nuevo\",\n    },\n    txtSubtitleBrand = \"Notificaciones de marcas\",\n    txtSubitlePatent1 = \"Notificaciones de patentes\",\n    txtSubitlePatent2 = \"Patentes, registros de modelos de utilidad y diseños industriales\",\n    txtSubitlePatent3 = \"Requisitos de forma y fondo, y abandonos notificados\",\n    txtLodaing = \"Realizando las búsquedas necesarias\",\n    txtStartSearch = \"Iniciar búsqueda\",\n    txtInstructionsSearch =\n        \"Puedes colocar alguna fecha en especifico o ignorar y continuar con la búsqueda regular\",\n    txtDateStartLabel = \"Fecha inicio:\",\n    txtDateEndLabel = \"Fecha fin:\",\n    txtNoDataSearch = \"No se encontraron coincidencias\",\n    txtDataSearch = \"Se encontraron coincidencias\"\n","/* eslint-disable no-useless-escape */\nconst CHARS =\n    \"áéíóúÁÉÍÓÚabcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ \";\nclass Validations {\n    validateEmail(email) {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    validateNames(name) {\n        let flag = true;\n        if (name !== \"\") {\n            for (let i = 0; i < name.length; i++) {\n                if (CHARS.indexOf(name.charAt(i)) === -1) {\n                    flag = false;\n                    break;\n                }\n            }\n        } else {\n            return false;\n        }\n        return flag;\n    }\n\n    validateSecondSurname(surname) {\n        if (surname === \"\") {\n            return true;\n        } else {\n            return this.validateNames(surname);\n        }\n    }\n\n    convertAPIDate(date) {\n        let tempDate = date.split(\"T\")[0];\n        return tempDate.replaceAll(\"-\", \"/\");\n    }\n\n    convertInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        let cutDate = tempDate.substring(1, tempDate.length - 1);\n        return this.convertAPIDate(cutDate);\n    }\n\n    convertOnlyInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        return tempDate.substring(1, tempDate.length - 1);\n    }\n\n    validateDateStartEnd(dateStart, dateEnd) {\n        if (\n            dateStart.length === 10 &&\n            dateEnd.length === 10 &&\n            dateStart.split(\"/\").length === 3 &&\n            dateEnd.split(\"/\").length === 3\n        ) {\n            return false;\n        }\n        return true;\n    }\n\n    validateFormUser(name, first, second, dateBirth, email) {\n        if (\n            this.validateNames(name) &&\n            this.validateNames(first) &&\n            this.validateSecondSurname(second) &&\n            dateBirth !== \"\" &&\n            this.validateEmail(email)\n        )\n            return true;\n        else return false;\n    }\n\n    validatePassworsNoEmpty(curently, newPas, repeat){\n        return curently !== \"\" && newPas !== \"\" && repeat !== \"\"\n    }\n\n    validateSameEmail(userEmail, userEmailInfo){\n        return userEmail === userEmailInfo;\n    }\n}\n\nexport default new Validations();\n","export default __webpack_public_path__ + \"static/media/logonovopatent.015ff878.jpg\";","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://sivymoapi-production.up.railway.app/novopatent-api\",\n    // baseURL: \"http://localhost:8080/novopatent-api\",\n    headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n    },\n});\n","import api from \"./api\";\n\nclass UsuarioService {\n    resetPassword(email) {\n        return api.put(`/reset-password/${email}`);\n    }\n\n    changePassword(email, oldPassword, newPassword) {\n        return api.put(\n            `/change-password/${email}/${oldPassword}/${newPassword}`\n        );\n    }\n\n    login(obj) {\n        return api.post(\"/login\", obj);\n    }\n\n    getAll() {\n        return api.get(\"/users\");\n    }\n\n    getOne(id) {\n        return api.get(`/users/${id}`);\n    }\n\n    insertOne(obj) {\n        return api.post(\"/users\", obj);\n    }\n\n    updateOne(obj) {\n        return api.put(\"/users\", obj);\n    }\n\n    removeOne(email) {\n        return api.delete(`/users/${email}`);\n    }\n}\n\nexport default new UsuarioService();\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport Validations from \"../../utils/Validations\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Password } from \"primereact/password\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport {\n    txtAltLogoImg,\n    txtEmailValid,\n    txtPasswordValid,\n    txtLogin,\n    txtFillFields,\n    txtEmailLabel,\n    txtPasswordLabel,\n    txtLoginButton,\n    txtMessageLoginError,\n    txtMessageSucces,\n} from \"../../utils/Strings\";\nimport useLogin from \"../CustomHooks/useLogin\";\nimport UsuarioService from \"../../service/UsuarioService\";\n\nexport default function Login() {\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [emailErrorSms, setEmailErrorSms] = useState(\"\");\n    const [passwordErrorSms, setPasswordErrorSms] = useState(\"\");\n    const [emailUIError, setEmailUIError] = useState(\"p-d-block\");\n    const [passwordUIError, setPasswordUIError] = useState(\"p-d-block\");\n    const toastMessages = useRef(null);\n\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useLogin();\n    }, []);\n\n    const login = () => {\n        if (emailInput.length <= 0 || !Validations.validateEmail(emailInput)) {\n            setEmailErrorSms(txtEmailValid);\n            setEmailUIError(\"p-invalid p-d-block\");\n        } else {\n            setEmailErrorSms(\"\");\n            setEmailUIError(\"p-d-block\");\n        }\n        if (passwordInput.length <= 0) {\n            setPasswordErrorSms(txtPasswordValid);\n            setPasswordUIError(\"p-invalid p-d-block\");\n        } else {\n            setPasswordErrorSms(\"\");\n            setPasswordUIError(\"p-d-block\");\n        }\n        if (\n            emailInput.length > 0 &&\n            passwordInput.length > 0 &&\n            Validations.validateEmail(emailInput)\n        ) {\n            let userLogin = {\n                correo: emailInput,\n                contrasena: passwordInput,\n            };\n            showMessage({\n                type: \"info\",\n                title: \"Cargando...\",\n                description: \"Por favor espere\",\n            });\n            UsuarioService.login(userLogin)\n                .then((response) => {\n                    clearMessages();\n                    localStorage.setItem(\n                        \"userActive\",\n                        JSON.stringify(response.data.usuario)\n                    );\n                    showMessage(txtMessageSucces);\n                    window.location = \"/sivymo_app/#/inicio\";\n                })\n                .catch((err) => {\n                    clearMessages();\n                    showMessage(txtMessageLoginError);\n                });\n        }\n    };\n\n    const clearMessages = () => {\n        toastMessages.current.clear();\n    };\n\n    const showMessage = ({ type, title, description }) => {\n        toastMessages.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <div className=\"pagelogin\">\n            <Toast ref={toastMessages} />\n            <div className=\"p-d-flex p-jc-center\">\n                <div className=\"p-col-12 p-md-6 p-lg-4 p-mt-6 card p-shadow-11\">\n                    <div className=\"p-col p-p-0 p-text-center\">\n                        <img\n                            src={logonovopatent}\n                            alt={txtAltLogoImg}\n                            height=\"70px\"\n                        />\n                    </div>\n                    <div className=\"p-col\">\n                        <div\n                            className=\"p-text-center\"\n                            style={{ fontSize: \"2em\", fontWeight: \"500\" }}\n                        >\n                            {txtLogin}\n                        </div>\n                        <div className=\"p-text-center\">{txtFillFields}</div>\n\n                        <div className=\"p-mx-6 p-my-4\">\n                            <div className=\"p-fluid\">\n                                <div className=\"p-field\">\n                                    <label\n                                        htmlFor=\"emailInput\"\n                                        className=\"p-d-block\"\n                                    >\n                                        {txtEmailLabel}\n                                    </label>\n                                    <InputText\n                                        className={emailUIError}\n                                        id=\"emailInput\"\n                                        aria-describedby=\"emailInput-help\"\n                                        value={emailInput}\n                                        maxLength=\"50\"\n                                        onChange={(e) => {\n                                            setEmailInput(e.target.value);\n                                        }}\n                                    />\n                                    <small\n                                        id=\"emailInput-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {emailErrorSms}\n                                    </small>\n                                </div>\n                            </div>\n                            <div className=\"p-fluid\">\n                                <div className=\"p-field\">\n                                    <label\n                                        htmlFor=\"passwordInput\"\n                                        className=\"p-d-block\"\n                                    >\n                                        {txtPasswordLabel}\n                                    </label>\n                                    <Password\n                                        id=\"passwordInput\"\n                                        toggleMask\n                                        className={passwordUIError}\n                                        feedback={false}\n                                        maxLength=\"50\"\n                                        value={passwordInput}\n                                        onChange={(e) => {\n                                            setPasswordInput(e.target.value);\n                                        }}\n                                    />\n                                    <small\n                                        id=\"passwordInput-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {passwordErrorSms}\n                                    </small>\n                                </div>\n                            </div>\n                            <div className=\"p-text-center\">\n                                <Button\n                                    label={txtLoginButton}\n                                    icon=\"pi pi-sign-in\"\n                                    className=\"p-button-success\"\n                                    onClick={login}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","export default function useLogin() {\n    if (localStorage.getItem(\"userActive\") !== null) {\n        window.location = \"/sivymo_app/#/inicio\";\n    }\n}\n","export default function useActive() {\n     if (localStorage.getItem(\"userActive\") === null) {\n         window.location = \"/sivymo_app/#/\";\n     }\n }","import api from './api'\n\nclass ResumeService{\n     getResume(){\n          return api.get(\"/resume\")\n     }\n}\n\nexport default new ResumeService();","import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport { Badge } from \"primereact/badge\";\nimport { Avatar } from \"primereact/avatar\";\nimport {\n    backgroundWallpaper,\n    txtWelcome,\n    txtLastQueryPatent,\n    txtLastQueryBrand,\n    txtLastUpdateClients,\n    txtBadgeClients,\n} from \"../../utils/Strings\";\nimport ResumeService from \"../../service/ResumeService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nfunction Logo() {\n    return (\n        <img\n            src=\"https://picsum.photos/1080/720\"\n            alt={backgroundWallpaper}\n            style={{\n                width: \"100%\",\n                height: \"300px\",\n                objectFit: \"cover\",\n            }}\n        />\n    );\n}\n\nfunction LastDateCategory({ icon, last_search_info, last_date }) {\n    return (\n        <div className=\"p-col-12 p-md-6 p-xl-6\">\n            <div className=\"p-grid\">\n                <div>\n                    <Avatar icon={icon} className=\"p-mr-2\" size=\"xlarge\" />\n                </div>\n                <div className=\"p-col\">\n                    <div style={{ fontSize: \"1.2em\", fontWeight: \"lighter\" }}>\n                        {last_search_info}\n                    </div>\n                    <div style={{ fontSize: \"1.2em\", fontWeight: \"bold\" }}>\n                        {moment(last_date).format(\"LLLL\")}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default function HomeTemplate() {\n    const [userInfo, setUserInfo] = useState({});\n\n    const [resume, setResume] = useState({\n        ultimaBusquedaPatentes: \"\",\n        ultimaBusquedaMarcas: \"\",\n        ultimaBusquedaEjemplares: \"\",\n        ultimaModificacionClientes: \"\",\n        clientesTotales: 0,\n    });\n\n    useEffect(() => {\n        getResume();\n        getPersonalInformation();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function getResume() {\n        ResumeService.getResume()\n            .then((response) => {\n                setResume({ ...response.data });\n                localStorage.setItem(\"resume\", JSON.stringify(response.data));\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    return (\n        <div>\n            <div className=\"p-grid\">\n                <div className=\"p-col\">\n                    <Logo />\n                </div>\n            </div>\n            <div className=\"p-grid\">\n                <div className=\"p-col-12 p-md-6 p-xl-6\">\n                    <h1>\n                        {txtWelcome}{\" \"}\n                        <i>{`${userInfo.nombre} ${userInfo.primerApellido}`}</i>\n                    </h1>\n                </div>\n                <div className=\"p-col-12 p-md-6 p-xl-6\">\n                    <h1>\n                        <Badge\n                            value={`Existen ${resume.clientesTotales} expedientes guardados en la nube`}\n                            size=\"xlarge\"\n                            severity={\n                                resume.clientesTotales <= 0\n                                    ? \"danger\"\n                                    : \"success\"\n                            }\n                        />\n                    </h1>\n                    {resume.clientesTotales <= 0 && (\n                        <Badge\n                            value={txtBadgeClients}\n                            severity=\"warning\"\n                            className=\"p-mr-2\"\n                        ></Badge>\n                    )}\n                </div>\n            </div>\n            <div className=\"p-grid p-mt-2\">\n                <LastDateCategory\n                    icon=\"pi pi-file\"\n                    last_search_info={txtLastQueryPatent}\n                    last_date={resume.ultimaBusquedaPatentes}\n                />\n                <LastDateCategory\n                    icon=\"pi pi-globe\"\n                    last_search_info={txtLastQueryBrand}\n                    last_date={resume.ultimaBusquedaMarcas}\n                />\n            </div>\n            <div className=\"p-grid p-mt-2\">\n                <LastDateCategory\n                    icon=\"pi pi-id-card\"\n                    last_search_info={txtLastUpdateClients}\n                    last_date={resume.ultimaModificacionClientes}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport { Menubar } from \"primereact/menubar\";\nimport { Button } from \"primereact/button\";\nimport { confirmDialog } from \"primereact/confirmdialog\";\nimport { txtConfirmExit, txtExit, txtAltLogoImg, txtLogoutButton } from \"../../utils/Strings\";\nimport {itemsMenuTop} from '../../utils/Strings'\n\nexport default function MenuTop() {\n    const confirmLogout = () => {\n        confirmDialog({\n            message: txtConfirmExit,\n            header: txtExit,\n            icon: \"pi pi-exclamation-triangle\",\n            acceptClassName:\"p-button-success\",\n            rejectClassName: \"p-button-plain p-button-text\",\n            accept: () => {\n                localStorage.clear();\n                window.location= \"https://sivymo.github.io/sivymo_app/#/\"\n                \n            },\n            reject: () => {},\n        });\n    };\n\n    const start = (\n        <img\n            alt={txtAltLogoImg}\n            src={logonovopatent}\n            height=\"50\"\n            className=\"p-mr-2\"\n            onClick={() => { window.location = \"/sivymo_app/#/inicio\"}}\n        />\n    );\n\n    const end = (\n        <Button\n            className=\"p-button-success\"\n            onClick={confirmLogout}\n            label={txtLogoutButton}\n            icon=\"pi pi-sign-out\"\n        />\n    );\n\n    return (\n        <div className=\"p-grid p-m-1\">\n            <div className=\"p-col\">\n                <div className=\"card\">\n                    <Menubar model={itemsMenuTop} start={start} end={end} />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport useActive from '../CustomHooks/useActive'\nimport HomeTemplate from \"../templates/HomeTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\n\nexport default function HomePage() {\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useActive()\n    }, [])\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <HomeTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import api from \"./api\";\n\nclass ClienteService {\n     getAll(){\n          return api.get(\"/clients\");\n     }\n\n     insertOne(obj){\n          return api.post(\"/clientsOne\", obj);\n     }\n\n     insertTwo(obj){\n          return api.post(\"/clientsTwo\", obj);\n     }\n\n     removeAll(){\n          return api.delete(\"/clients\")\n     }\n}\n\nexport default new ClienteService();\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:8081\",\n    headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n    },\n});\n","import api from \"./apiScraping\";\n\nclass ScrapingService {\n    getPatentes(obj) {\n        return api.post(\"/patentes\", obj);\n    }\n\n    getMarcas(obj) {\n        return api.post(\"marcas\", obj);\n    }\n}\n\nexport default new ScrapingService();","import api from \"./api\";\n\nclass HistorialService {\n    insertOne(type) {\n        return api.post(`/history/${type}`);\n    }\n}\n\nexport default new HistorialService();\n","export const dark_sea_green = \"#81BA8E\",\n    brunswick_green = \"#1B4631\",\n    amazon =\"#467256\"\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport { ProgressBar } from \"primereact/progressbar\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Toast } from \"primereact/toast\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Calendar } from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtNoData,\n    txtTitlePatents,\n    txtStartSearchButton,\n    txtExportButton,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtSubitlePatent1,\n    txtSubitlePatent2,\n    txtSubitlePatent3,\n    txtLastQueryPatent,\n    txtSmsLoading,\n    txtLodaing,\n    txtStartSearch,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages\n} from \"../../utils/Strings\";\nimport { dark_sea_green } from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nexport default function PatentTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [notificaciones, setNotificaciones] = useState([]);\n    const [patentesRegistros, setPatentesRegistros] = useState([]);\n    const [requisitos, setRequisitos] = useState([]);\n    const [history, setHistory] = useState(false);\n    const [filesReady, setFilesReady] = useState(false);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n    const dt2 = useRef(null);\n    const dt3 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(\n            Validations.convertAPIDate(resume.ultimaBusquedaPatentes)\n        );\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        saveHistory();\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(\"1\")\n            .then((response) => {})\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getPatentes(objSend)\n            .then((resp) => {\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data[0].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setNotificaciones(data[0].data);\n            showMessage({\n                type: \"info\",\n                title: txtSubitlePatent1,\n                description: txtDataSearch,\n            });\n        } else {\n            showMessage({\n                type: \"warn\",\n                title: txtSubitlePatent1,\n                description: txtNoDataSearch,\n            });\n        }\n        if (data[1].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setPatentesRegistros(data[1].data);\n            showMessage({\n                type: \"info\",\n                title: txtSubitlePatent2,\n                description: txtDataSearch,\n            });\n        } else {\n            showMessage({\n                type: \"warn\",\n                title: txtSubitlePatent2,\n                description: txtNoDataSearch,\n            });\n        }\n        if (data[2].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setRequisitos(data[2].data);\n            showMessage({\n                type: \"info\",\n                title: txtSubitlePatent3,\n                description: txtDataSearch,\n            });\n        } else {\n            showMessage({\n                type: \"warn\",\n                title: txtSubitlePatent3,\n                description: txtNoDataSearch,\n            });\n        }\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => {\n        return Validations.validateDateStartEnd(\n            inputFechaInicio,\n            inputFechaFin\n        );\n    };\n\n    const exports = () => {\n        dt1.current.exportCSV();\n        dt2.current.exportCSV();\n        dt3.current.exportCSV();\n    };\n\n    const clear = () => {\n        setNotificaciones([]);\n        setPatentesRegistros([]);\n        setRequisitos([]);\n    };\n\n    const showMessage = ({ type, title, description }) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    const clearMessages = () =>{\n        toast.current.clear();\n    }\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a\n                    href={rowdata[\"Enlace electrónico\"]}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n    function NotificacionPatentes() {\n        return (\n            <div className=\"p-grid p-col\">\n                <h2>{txtSubitlePatent1}</h2>\n                <DataTable\n                    ref={dt1}\n                    emptyMessage={txtNoData}\n                    paginator\n                    rows={7}\n                    value={notificaciones}\n                >\n                    <Column\n                        field=\"Número del Oficio\"\n                        header=\"Número del Oficio\"\n                        sortable\n                    />\n                    <Column\n                        field=\"Fecha del Oficio\"\n                        header=\"Fecha del Oficio\"\n                        sortable\n                    />\n                    <Column\n                        field=\"Descripción general del asunto\"\n                        header=\"Descripción general del asunto\"\n                        sortable\n                    />\n                    <Column\n                        field=\"Enlace electrónico\"\n                        header=\"Enlace electrónico\"\n                        body={enlaceBodyTemplate}\n                        sortable\n                    />\n                    <Column field=\"Expediente\" header=\"Expediente\" sortable />\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesIndustriales() {\n        return (\n            <div className=\"p-grid p-col\">\n                <h2>{txtSubitlePatent2}</h2>\n                <DataTable\n                    ref={dt2}\n                    emptyMessage={txtNoData}\n                    paginator\n                    rows={7}\n                    scrollable\n                    value={patentesRegistros}\n                >\n                    <Column\n                        field=\"Oficina, No de Patente y Tipo de documento\"\n                        header=\"Oficina, No de Patente y Tipo de documento\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Número de concesión\"\n                        header=\"Número de concesión\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Tipo de documento\"\n                        header=\"Tipo de documento\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Número de solicitud\"\n                        header=\"Número de solicitud\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Fecha de presentación\"\n                        header=\"Fecha de presentación\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Fecha de concesión\"\n                        header=\"Fecha de concesión\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Título\"\n                        header=\"Título\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Inventor(es)\"\n                        header=\"Inventor(es)\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Titular\"\n                        header=\"Titular\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                    <Column\n                        field=\"Agente\"\n                        header=\"Agente\"\n                        headerStyle={{ width: \"17vh\" }}\n                        sortable\n                    />\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesNotificados() {\n        return (\n            <div className=\"p-grid p-col\">\n                <h2>{txtSubitlePatent3}</h2>\n                <DataTable\n                    ref={dt3}\n                    emptyMessage={txtNoData}\n                    paginator\n                    rows={7}\n                    value={requisitos}\n                >\n                    <Column\n                        field=\"Número de expediente\"\n                        header=\"Número de expediente\"\n                        sortable\n                    />\n                    <Column\n                        field=\"Solicitante(s)\"\n                        header=\"Solicitante(s)\"\n                        sortable\n                    />\n                    <Column\n                        field=\"Número del Oficio\"\n                        header=\"Número del Oficio\"\n                        sortable\n                    />\n                    <Column field=\"Agente\" header=\"Agente\" sortable />\n                </DataTable>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitlePatents }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <Toast ref={toast} />\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitlePatents}</h1>\n                    <div>\n                        {txtLastQueryPatent}\n                        {moment(resume.ultimaBusquedaPatentes).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button\n                        label={txtStartSearchButton}\n                        icon=\"pi pi-search\"\n                        className=\"p-button-lg p-ml-auto\"\n                        style={{ backgroundColor: \"var(--green-600)\" }}\n                        onClick={confirmStartSearch}\n                    />\n                </div>\n            </div>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\n                        <Button\n                            type=\"button\"\n                            className=\"p-mr-2\"\n                            icon=\"pi pi-download\"\n                            label={txtExportButton}\n                            style={{ backgroundColor: \"var(--teal-600)\" }}\n                            onClick={exports}\n                        />\n                        <Button\n                            type=\"button\"\n                            icon=\"pi pi-times\"\n                            label={txtClearButton}\n                            className=\"p-button-info  p-mr-2\"\n                            onClick={clear}\n                        />\n                        <Button\n                            type=\"button\"\n                            icon=\"pi pi-comments\"\n                            label={txtClearMessages}\n                            className=\"p-button-info\"\n                            onClick={clearMessages}\n                        />\n                    </div>\n                    <NotificacionPatentes />\n                </div>\n                <div className=\"p-col\">\n                    <PatentesIndustriales />\n                </div>\n                <div className=\"p-col\">\n                    <PatentesNotificados />\n                </div>\n            </div>\n\n            <Dialog\n                showHeader={false}\n                visible={showDialog}\n                draggable={false}\n                closable={false}\n                onHide={() => {}}\n            >\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <>\n                                <div className=\"p-col p-col-align-center\">\n                                    <h1>{txtSmsLoading[0]}</h1>\n                                    <div>{txtLodaing}</div>\n                                    <ProgressBar\n                                        mode=\"indeterminate\"\n                                        color={dark_sea_green}\n                                        style={{ height: \"6px\" }}\n                                    />\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateStartInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateStartInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaInicio}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaInicio}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaInicio(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateEndInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox\n                                            inputId=\"filesReady\"\n                                            checked={filesReady}\n                                            onChange={(e) =>\n                                                setFilesReady(e.checked)\n                                            }\n                                        />\n                                        <label htmlFor=\"filesReady\">\n                                            Ya cuento con los archivos\n                                            descargados\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport useActive from '../CustomHooks/useActive'\nimport PatentTemplate from \"../templates/PatentTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\n\nexport default function PatentPage() {\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useActive()\n    }, [])\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <PatentTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport { Toast } from \"primereact/toast\";\nimport { ProgressBar } from \"primereact/progressbar\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Calendar } from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtExportButton,\n    txtStartSearchButton,\n    txtNoData,\n    txtTitleBrands,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtLastQueryBrand,\n    txtSubtitleBrand,\n    txtSmsLoading,\n    txtStartSearch,\n    txtLodaing,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages,\n} from \"../../utils/Strings\";\nimport { dark_sea_green } from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nexport default function BrandTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [marcas, setMarcas] = useState([]);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const [filesReady, setFilesReady] = useState(false);\n    const [history, setHistory] = useState(false);\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(\n            Validations.convertAPIDate(resume.ultimaBusquedaMarcas)\n        );\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        saveHistory();\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(\"2\")\n            .then((response) => {})\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getMarcas(objSend)\n            .then((resp) => {\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data.data !== false) {\n            setMarcas(data.data);\n            showMessage({\n                type: \"info\",\n                title: txtSubtitleBrand,\n                description: txtDataSearch,\n            });\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n        } else {\n            showMessage({\n                type: \"warn\",\n                title: txtSubtitleBrand,\n                description: txtNoDataSearch,\n            });\n        }\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => {\n        return Validations.validateDateStartEnd(\n            inputFechaInicio,\n            inputFechaFin\n        );\n    };\n\n    const exports = () => {\n        dt1.current.exportCSV();\n    };\n\n    const clear = () => {\n        setMarcas([]);\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    };\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a\n                    href={rowdata[\"Enlace electrónico\"]}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n    const headerExport = (\n        <div className=\"p-d-flex p-ai-center export-buttons\">\n            <Button\n                type=\"button\"\n                icon=\"pi pi-download\"\n                className=\"p-mr-2\"\n                label={txtExportButton}\n                style={{ backgroundColor: \"var(--teal-600)\" }}\n                onClick={exports}\n            />\n\n            <Button\n                type=\"button\"\n                icon=\"pi pi-times\"\n                label={txtClearButton}\n                className=\"p-button-info p-mr-2\"\n                onClick={clear}\n            />\n            <Button\n                type=\"button\"\n                icon=\"pi pi-comments\"\n                label={txtClearMessages}\n                className=\"p-button-info\"\n                onClick={clearMessages}\n            />\n        </div>\n    );\n\n    const showMessage = ({ type, title, description }) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitleBrands }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <Toast ref={toast} />\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitleBrands}</h1>\n                    <div>\n                        {txtLastQueryBrand}\n                        {moment(resume.ultimaBusquedaMarcas).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button\n                        label={txtStartSearchButton}\n                        icon=\"pi pi-search\"\n                        className=\"p-button-lg p-ml-auto\"\n                        style={{ backgroundColor: \"var(--green-600)\" }}\n                        onClick={confirmStartSearch}\n                    />\n                </div>\n            </div>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <h2>{txtSubtitleBrand}</h2>\n                    <DataTable\n                        value={marcas}\n                        ref={dt1}\n                        header={headerExport}\n                        emptyMessage={txtNoData}\n                        paginator\n                        scrollable\n                        rows={7}\n                    >\n                        <Column\n                            field=\"Expediente\"\n                            header=\"Expediente\"\n                            headerStyle={{ width: \"20vh\" }}\n                            sortable\n                        />\n                        <Column\n                            field=\"Descripción del oficio\"\n                            header=\"Descripción del oficio\"\n                            headerStyle={{ width: \"20vh\" }}\n                            sortable\n                        />\n                        <Column\n                            field=\"Fecha del oficio\"\n                            header=\"Fecha del oficio\"\n                            headerStyle={{ width: \"20vh\" }}\n                            sortable\n                        />\n                        <Column\n                            field=\"Número del oficio\"\n                            header=\"Número del oficio\"\n                            headerStyle={{ width: \"20vh\" }}\n                            sortable\n                        />\n                        <Column\n                            field=\"Enlace electrónico\"\n                            header=\"Enlace electrónico\"\n                            headerStyle={{ width: \"20vh\" }}\n                            body={enlaceBodyTemplate}\n                            sortable\n                        />\n                    </DataTable>\n                </div>\n            </div>\n\n            <Dialog\n                showHeader={false}\n                visible={showDialog}\n                draggable={false}\n                closable={false}\n                onHide={() => {}}\n            >\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <>\n                                <div className=\"p-col p-col-align-center\">\n                                    <h1>{txtSmsLoading[0]}</h1>\n                                    <div>{txtLodaing}</div>\n                                    <ProgressBar\n                                        mode=\"indeterminate\"\n                                        color={dark_sea_green}\n                                        style={{ height: \"6px\" }}\n                                    />\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateStartInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateStartInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaInicio}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaInicio}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaInicio(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateEndInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox\n                                            inputId=\"filesReady\"\n                                            checked={filesReady}\n                                            onChange={(e) =>\n                                                setFilesReady(e.checked)\n                                            }\n                                        />\n                                        <label htmlFor=\"filesReady\">\n                                            Ya cuento con los archivos\n                                            descargados\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport useActive from '../CustomHooks/useActive'\nimport BrandTemplate from \"../templates/BrandTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\n\nexport default function BrandPage() {\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useActive()\n    }, [])\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <BrandTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Button } from \"primereact/button\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { Toast } from \"primereact/toast\";\nimport ClienteService from \"../../service/ClienteService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport {\n    txtSmsLoading,\n    txtMessageErrorGeneral,\n    txtMessageClientsSaved,\n    txtTitleClients,\n    txtSaveButton,\n    txtClearButton,\n    txtNoDataLabel,\n    txtLastUpdateClients,\n} from \"../../utils/Strings\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function ClientsTemplate() {\n    const [resume, setResume] = useState({});\n    const [importedData, setImportedData] = useState([]);\n    const [selectedImportedData, setSelectedImportedData] = useState([]);\n    const [importedCols, setImportedCols] = useState([\n        { field: \"\", header: \"Columnas\" },\n    ]);\n    const toast = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const importExcel = async (e) => {\n        showMessageloading();\n        const file = e.files[0];\n        await import(\"xlsx\").then((xlsx) => {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const wb = xlsx.read(e.target.result, { type: \"array\" });\n                const wsname = wb.SheetNames[0];\n                const ws = wb.Sheets[wsname];\n                const data = xlsx.utils.sheet_to_json(ws, { header: 1 });\n                const cols = data[0];\n                data.shift();\n                let _importedCols = cols.map((col) => ({\n                    field: toCapitalize(col),\n                    header: toCapitalize(col),\n                }));\n                let _importedData = data.map((d) => {\n                    return cols.reduce((obj, c, i) => {\n                        let key = toCapitalize(c);\n                        obj[key] = d[i];\n                        return obj;\n                    }, {});\n                });\n                setImportedCols(_importedCols);\n                setImportedData(_importedData);\n            };\n            reader.readAsArrayBuffer(file);\n        });\n        clearMessageLoading();\n    };\n\n    const toCapitalize = (s) => {\n        let r = s.replaceAll(\" \", \"_\");\n        let c = r.charAt(0).toLowerCase() + r.slice(1);\n        return c;\n    };\n\n    const clear = () => {\n        setImportedData([]);\n        setSelectedImportedData([]);\n        setImportedCols([{ field: \"\", header: \"Columnas\" }]);\n    };\n\n    const clearMessageLoading = () => {\n        toast.current.clear();\n    };\n\n    const showMessageloading = () => {\n        toast.current.show({\n            severity: \"info\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\n                    <div className=\"p-text-center\">\n                        <i\n                            className=\"pi pi-spin pi-spinner\"\n                            style={{ fontSize: \"3em\" }}\n                        ></i>\n                        <h4>{txtSmsLoading[0]}</h4>\n                        <p>{txtSmsLoading[1]}</p>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(\"4\")\n            .then((response) => {})\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    const saveAllImportedData = async () => {\n        showMessageloading();\n        let m1 = importedData.splice(0, importedData.length / 2);\n        let m2 = importedData.splice(0, importedData.length);\n\n        await ClienteService.insertOne(m1)\n            .then((response) => {\n                if (response.data) {\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                clearMessageLoading();\n                console.error(err);\n                return;\n            });\n\n        await ClienteService.insertTwo(m2)\n            .then((response) => {\n                clearMessageLoading();\n                if (response.data) {\n                    saveHistory();\n                    clear();\n                    showMessage(txtMessageClientsSaved);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                clearMessageLoading();\n                console.error(err);\n                console.log(err);\n                showMessage(txtMessageErrorGeneral);\n                return;\n            });\n    };\n\n    const showMessage = ({ type, title, description }) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitleClients }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <Toast ref={toast} />\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitleClients}</h1>\n                    <div>\n                        {txtLastUpdateClients}\n                        {moment(resume.ultimaModificacionClientes).format(\n                            \"LLLL\"\n                        )}\n                    </div>\n                    <div className=\"p-d-flex p-ai-center p-py-2\">\n                        <FileUpload\n                            chooseOptions={{\n                                label: \"Importar desde Excel\",\n                                icon: \"pi pi-file-excel\",\n                                className: \"p-button-success p-button-outlined\",\n                            }}\n                            mode=\"basic\"\n                            name=\"demo[]\"\n                            auto\n                            url=\"https://sivymoapi-production.up.railway.app/novopatent-api/uploadFake\"\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                            className=\"p-mr-2\"\n                            onUpload={importExcel}\n                        />\n\n                        <Button\n                            type=\"button\"\n                            label={txtClearButton}\n                            icon=\"pi pi-times\"\n                            onClick={clear}\n                            className=\"p-button-info p-ml-auto\"\n                            disabled={importedData.length === 0 ? true : false}\n                        />\n                        <Button\n                            type=\"button\"\n                            label={txtSaveButton}\n                            icon=\"pi pi-save\"\n                            className=\"p-button-success p-ml-2\"\n                            disabled={importedData.length === 0 ? true : false}\n                            onClick={saveAllImportedData}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <DataTable\n                value={importedData}\n                emptyMessage={txtNoDataLabel}\n                paginator\n                rows={7}\n                scrollable\n                selection={selectedImportedData}\n            >\n                {importedCols.map((col, index) => (\n                    <Column\n                        key={index}\n                        field={col.field}\n                        header={col.header}\n                        style={{ width: \"15em\" }}\n                    />\n                ))}\n            </DataTable>\n        </>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport useActive from '../CustomHooks/useActive'\nimport MenuTop from \"../organisms/MenuTop\";\nimport ClientsTemplate from '../templates/ClientsTemplate'\n\nexport default function ClientsPage() {\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useActive()\n}, [])\n     return (\n          <>\n              <MenuTop/>\n              <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ClientsTemplate />\n                </div>\n            </div>\n          </>\n     )\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Password } from \"primereact/password\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtMessageUserPasswordSuccess,\n    txtMessageUserPasswordError,\n    txtTitlePersonalData,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtDesactiveActiveFieldsLabel,\n    txtUpdateInformationLabel,\n    txtPasswordCurrentlyLabel,\n    txtPasswordCurrentlyHelp,\n    txtNewPasswordLabel,\n    txtNewPasswordHelp,\n    txtRepeatNewPasswordLabel,\n    txtRepeatNewPasswordHelp,\n    txtUpdatePassword,\n    txtMessageErrorGeneral,\n    txtCheckPasswords,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\n\nexport default function PersonalData() {\n    // ? Controla la habilitación y deshabilitación de todos los campos\n    const [activePersonalFields, setActivePersonalFields] = useState(true);\n    const [activePasswordFields, setActivePasswordFields] = useState(true);\n    const toast = useRef(null);\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function changePassword({\n        contraseñaActual,\n        nuevaContraseña,\n        repetirNuevaContraseña,\n    }) {\n        UsuarioService.changePassword(\n            userInfo.correo,\n            contraseñaActual,\n            nuevaContraseña,\n            repetirNuevaContraseña\n        )\n            .then((response) => {\n                if (response.data) {\n                    showMessage(txtMessageUserPasswordSuccess);\n                    localStorage.clear();\n                    window.location = \"/sivymo_app/#/\";\n                } else {\n                    txtMessageErrorGeneral.description = txtCheckPasswords;\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                setUserInfo(response.data);\n                localStorage.setItem(\"userActive\", JSON.stringify(userInfo));\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    //? Aquí se guarda la información de la persona que está operando el sistema\n    const [userInfo, setUserInfo] = useState({\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    });\n\n    // ? Aquí se guarda la información del cambio de contraseña\n    const [userPassword, setUserPassword] = useState({\n        contraseñaActual: \"****\",\n        nuevaContraseña: \"****\",\n        repetirNuevaContraseña: \"****\",\n    });\n\n    //? Valida los valores de userInfo y cambiar datos\n    const checkFormInfoUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = userInfo;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            updateOne(userInfo);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n    };\n\n    //? Valida los valores de userPassword  y cambiar datos\n    const checkFormPasswordUser = () => {\n        const { contraseñaActual, nuevaContraseña, repetirNuevaContraseña } =\n            userPassword;\n        if (\n            Validations.validatePassworsNoEmpty(\n                contraseñaActual,\n                nuevaContraseña,\n                repetirNuevaContraseña\n            )\n        ) {\n            if (nuevaContraseña === repetirNuevaContraseña) {\n                changePassword(userPassword);\n            } else {\n                showMessage(txtMessageUserPasswordError);\n            }\n        } else {\n            showMessage(txtMessageUserPasswordError);\n        }\n    };\n\n    //? Cambiar el contenido de los input (Solo es diseño)\n    const handleContentPasswordUser = () => {\n        setActivePasswordFields(!activePasswordFields);\n        if (activePasswordFields) {\n            setUserPassword({\n                contraseñaActual: \"\",\n                nuevaContraseña: \"\",\n                repetirNuevaContraseña: \"\",\n            });\n        } else {\n            setUserPassword({\n                contraseñaActual: \"****\",\n                nuevaContraseña: \"****\",\n                repetirNuevaContraseña: \"****\",\n            });\n        }\n    };\n\n    //? Muestra los mensajes de los Toast\n    const showMessage = ({ type, title, description }) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast} />\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitlePersonalData}</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                        <InputText\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.nombre}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    nombre: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.nombre && \"p-invalid\"}\n                        />\n                        {!userInfo.nombre && (\n                            <small\n                                id=\"nombre-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtNameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"primerApellido\">\n                            {txtFistSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"primerApellido\"\n                            name=\"primerApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.primerApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    primerApellido: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.primerApellido && \"p-invalid\"}\n                        />\n                        {!userInfo.primerApellido && (\n                            <small\n                                id=\"primerApellido-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtFistSurnameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"segundoApellido\">\n                            {txtSecondSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"segundoApellido\"\n                            name=\"segundoApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.segundoApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    segundoApellido: e.target.value,\n                                });\n                            }}\n                        />\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"fechaDeNacimiento\">\n                            {txtDateOfBirthLabel}\n                        </label>\n                        <Calendar\n                            id=\"fechaDeNacimiento\"\n                            name=\"fechaDeNacimiento\"\n                            monthNavigator\n                            yearNavigator\n                            showIcon\n                            yearRange=\"1950:2010\"\n                            dateFormat=\"yy-mm-dd\"\n                            placeholder={\n                                userInfo.fechaDeNacimiento.split(\"T\")[0]\n                            }\n                            disabled={activePersonalFields}\n                            value={userInfo.fechaDeNacimiento}\n                            onChange={(e) => {\n                                let result = Validations.convertOnlyInputDate(\n                                    e.target.value\n                                );\n                                setUserInfo({\n                                    ...userInfo,\n                                    fechaDeNacimiento: result,\n                                });\n                            }}\n                        />\n                        {!userInfo.fechaDeNacimiento && (\n                            <small\n                                id=\"fechaDeNacimiento-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtDateOfBirthHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                        <InputText\n                            id=\"correo\"\n                            name=\"correo\"\n                            type=\"correo\"\n                            disabled={activePersonalFields}\n                            value={userInfo.correo}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    correo: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.correo && \"p-invalid\"}\n                        />\n                        {!userInfo.correo && (\n                            <small\n                                id=\"correo-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtEmailHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            setActivePersonalFields(!activePersonalFields);\n                        }}\n                    />\n                    <Button\n                        label={txtUpdateInformationLabel}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePersonalFields}\n                        onClick={checkFormInfoUser}\n                    />\n                </div>\n            </div>\n            <div className=\"p-col p-p-3\">\n                <h2>Cambio de contraseña</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"contraseñaActual\">\n                            {txtPasswordCurrentlyLabel}\n                        </label>\n                        <Password\n                            id=\"contraseñaActual\"\n                            name=\"contraseñaActual\"\n                            toggleMask\n                            feedback={false}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.contraseñaActual}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    contraseñaActual: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.contraseñaActual && (\n                            <small\n                                id=\"contraseñaActual-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtPasswordCurrentlyHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nuevaContraseña\">\n                            {txtNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"nuevaContraseña\"\n                            name=\"nuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.nuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    nuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.nuevaContraseña && (\n                            <small\n                                id=\"nuevaContraseña-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"repetirNuevaContraseña\">\n                            {txtRepeatNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"repetirNuevaContraseña\"\n                            name=\"repetirNuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.repetirNuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    repetirNuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.repetirNuevaContraseña && (\n                            <small\n                                id=\"repetirNuevaContraseña-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtRepeatNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            handleContentPasswordUser();\n                        }}\n                    />\n                    <Button\n                        label={txtUpdatePassword}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePasswordFields}\n                        onClick={checkFormPasswordUser}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Button } from \"primereact/button\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Toast } from \"primereact/toast\";\nimport { Toolbar } from \"primereact/toolbar\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Badge } from \"primereact/badge\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtMessageUserDelete,\n    txtRestartPasswordTitle,\n    txtRestartPasswordContent,\n    txtYES,\n    txtNO,\n    txtCancelButton,\n    txtSaveButton,\n    txtNewUserButton,\n    txtExport,\n    txtSearch,\n    txtTitleCrud,\n    txtFooterTableLabel,\n    txtUserDetails,\n    txtSuperAdminLabel,\n    txtDeleteUserTitle,\n    txtDeleteUserContent,\n    txtMessageUserPasswordReset,\n    txtMessageErrorGeneral,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nexport default function CrudUsers() {\n    let emptyUser = {\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    };\n\n    const [users, setUsers] = useState([]);\n    const [userDialog, setUserDialog] = useState(false);\n    const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n    const [selectedUsers, setSelectedUsers] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(\"\");\n    const [user, setUser] = useState(emptyUser);\n    const [saveOrUpdate, setSaveOrUpdate] = useState(false);\n    const [detailsUser, setDetailsUser] = useState(false);\n    const [detailUserChange, setDetailUserChange] = useState({});\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    useEffect(() => {\n        getAll();\n    }, []);\n\n    function getAll() {\n        UsuarioService.getAll()\n            .then((response) => {\n                setUsers(response.data);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function insertOne(user) {\n        UsuarioService.insertOne(user)\n            .then((response) => {\n                setDetailUserChange(response.data);\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function removeOne(email) {\n        UsuarioService.removeOne(email)\n            .then((response) => {\n                if (response.data) {\n                    getAll();\n                    showMessage(txtMessageUserDelete);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function resetPasswordUser(email) {\n        UsuarioService.resetPassword(email)\n            .then((response) => {\n                if (response.data) {\n                    setDetailUserChange(response.data);\n                    hideDetailsUser();\n                    showMessage(txtMessageUserPasswordReset);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    const openNew = () => {\n        setUser(emptyUser);\n        setUserDialog(true);\n        setSaveOrUpdate(true);\n    };\n\n    const hideDialog = () => {\n        setUserDialog(false);\n    };\n\n    const hideDeleteUserDialog = () => {\n        setDeleteUserDialog(false);\n    };\n\n    const hideDetailsUser = () => setDetailsUser(!detailsUser);\n\n    const saveUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = user;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            if (saveOrUpdate) {\n                insertOne(user);\n                hideDetailsUser();\n            } else {\n                updateOne(user);\n            }\n            setSaveOrUpdate(false);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n        setUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const editUser = (user) => {\n        setUser({ ...user });\n        setUserDialog(true);\n    };\n\n    const confirmDeleteUser = (user) => {\n        setUser(user);\n        setDeleteUserDialog(true);\n    };\n\n    const deleteUser = () => {\n        removeOne(user.correo);\n        setDeleteUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const exportCSV = () => {\n        dt.current.exportCSV();\n    };\n\n    const resetPassword = (user) => {\n        resetPasswordUser(user.correo);\n        toast.current.clear();\n    };\n\n    const showConfirmResetPassword = (rowData) => {\n        toast.current.show({\n            severity: \"warn\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\n                    <div className=\"p-text-center\">\n                        <i\n                            className=\"pi pi-exclamation-triangle\"\n                            style={{ fontSize: \"3rem\" }}\n                        ></i>\n                        <h4>{txtRestartPasswordTitle}</h4>\n                        <p>{txtRestartPasswordContent}</p>\n                    </div>\n                    <div className=\"p-grid p-fluid\">\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtYES}\n                                className=\"p-button-success\"\n                                onClick={() => resetPassword(rowData)}\n                            />\n                        </div>\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtNO}\n                                className=\"p-button-danger\"\n                                onClick={() => {\n                                    toast.current.clear();\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    const showMessage = ({ type, title, description }) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                <Button\n                    icon=\"pi pi-pencil\"\n                    className=\"p-button-rounded p-button-info p-mr-2\"\n                    onClick={() => editUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-trash\"\n                    className=\"p-button-rounded p-button-danger p-mr-2\"\n                    onClick={() => confirmDeleteUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-replay\"\n                    className=\"p-button-rounded p-button-warning\"\n                    onClick={() => showConfirmResetPassword(rowData)}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const adminBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                {rowData.superAdmin ? (\n                    <Badge\n                        value={txtYES}\n                        severity=\"success\"\n                        className=\"p-mr-2\"\n                    />\n                ) : (\n                    <Badge value={txtNO} className=\"p-mr-2\" severity=\"danger\" />\n                )}\n            </React.Fragment>\n        );\n    };\n\n    const dateBirthBodyTemplane = (rowData) => {\n        return (\n            <React.Fragment>\n                <div>{moment(rowData.fechaDeNacimiento).format(\"LL\")}</div>\n            </React.Fragment>\n        );\n    };\n\n    const userDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtCancelButton}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDialog}\n            />\n            <Button\n                label={txtSaveButton}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={saveUser}\n            />\n        </React.Fragment>\n    );\n\n    const deleteUserDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtNO}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDeleteUserDialog}\n            />\n            <Button\n                label={txtYES}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={deleteUser}\n            />\n        </React.Fragment>\n    );\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtNewUserButton}\n                    icon=\"pi pi-plus\"\n                    className=\"p-button-success p-mr-2\"\n                    onClick={openNew}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtExport}\n                    icon=\"pi pi-download\"\n                    className=\"p-button\"\n                    style={{ backgroundColor: \"var(--teal-600)\" }}\n                    onClick={exportCSV}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const header = (\n        <div className=\"table-header\">\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText\n                    type=\"search\"\n                    value={globalFilter}\n                    onInput={(e) => setGlobalFilter(e.target.value)}\n                    placeholder={txtSearch}\n                />\n            </span>\n        </div>\n    );\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast} />\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitleCrud}</h2>\n                <div className=\"card\">\n                    <Toolbar\n                        className=\"p-mb-4\"\n                        left={leftToolbarTemplate}\n                        right={rightToolbarTemplate}\n                    />\n                    <DataTable\n                        ref={dt}\n                        value={users}\n                        selection={selectedUsers}\n                        onSelectionChange={(e) => setSelectedUsers(e.value)}\n                        dataKey=\"correo\"\n                        paginator\n                        rows={7}\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate={txtFooterTableLabel}\n                        globalFilter={globalFilter}\n                        header={header}\n                        emptyMessage=\"Sin ningun usuario aún\"\n                    >\n                        <Column field=\"nombre\" header=\"Nombre\" sortable />\n                        <Column\n                            field=\"primerApellido\"\n                            header=\"Primer apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"segundoApellido\"\n                            header=\"Segundo apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"fechaDeNacimiento\"\n                            header=\"Fecha de nacimiento\"\n                            body={dateBirthBodyTemplane}\n                            sortable\n                        />\n                        <Column\n                            field=\"correo\"\n                            header=\"Correo electrónico\"\n                            sortable\n                        />\n                        <Column\n                            field=\"superAdmin\"\n                            header=\"Super administrador\"\n                            body={adminBodyTemplate}\n                        />\n\n                        <Column header=\"Acciones\" body={actionBodyTemplate} />\n                    </DataTable>\n\n                    <Dialog\n                        visible={userDialog}\n                        style={{ width: \"450px\" }}\n                        header={txtUserDetails}\n                        modal\n                        className=\"p-fluid\"\n                        footer={userDialogFooter}\n                        onHide={hideDialog}\n                    >\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                                <InputText\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    type=\"text\"\n                                    value={user.nombre}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            nombre: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.nombre && \"p-invalid\"}\n                                />\n                                {!user.nombre && (\n                                    <small\n                                        id=\"nombre-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {txtNameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"primerApellido\">\n                                    {txtFistSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"primerApellido\"\n                                    name=\"primerApellido\"\n                                    type=\"text\"\n                                    value={user.primerApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            primerApellido: e.target.value,\n                                        });\n                                    }}\n                                    className={\n                                        !user.primerApellido && \"p-invalid\"\n                                    }\n                                />\n                                {!user.primerApellido && (\n                                    <small\n                                        id=\"primerApellido-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {txtFistSurnameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"segundoApellido\">\n                                    {txtSecondSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"segundoApellido\"\n                                    name=\"segundoApellido\"\n                                    type=\"text\"\n                                    value={user.segundoApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            segundoApellido: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"fechaDeNacimiento\">\n                                    {txtDateOfBirthLabel}\n                                </label>\n                                <Calendar\n                                    id=\"fechaDeNacimiento\"\n                                    name=\"fechaDeNacimiento\"\n                                    monthNavigator\n                                    yearNavigator\n                                    yearRange=\"1950:2010\"\n                                    showIcon\n                                    placeholder={\n                                        user.fechaDeNacimiento.split(\"T\")[0]\n                                    }\n                                    dateFormat=\"yy-mm-d\"\n                                    value={user.fechaDeNacimiento}\n                                    onChange={(e) => {\n                                        let result =\n                                            Validations.convertOnlyInputDate(\n                                                e.target.value\n                                            );\n                                        setUser({\n                                            ...user,\n                                            fechaDeNacimiento: result,\n                                        });\n                                    }}\n                                />\n                                {!user.fechaDeNacimiento && (\n                                    <small\n                                        id=\"fechaDeNacimiento-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {txtDateOfBirthHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                                <InputText\n                                    id=\"correo\"\n                                    name=\"correo\"\n                                    type=\"email\"\n                                    value={user.correo}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            correo: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.correo && \"p-invalid\"}\n                                />\n                                {!user.correo && (\n                                    <small\n                                        id=\"correo-help\"\n                                        className=\"p-error p-d-block\"\n                                    >\n                                        {txtEmailHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field p-text-center\">\n                                <label htmlFor=\"superAdmin\">\n                                    {txtSuperAdminLabel}\n                                </label>\n                                <br />\n                                <InputSwitch\n                                    id=\"superAdmin\"\n                                    name=\"superAdmin\"\n                                    checked={user.superAdmin}\n                                    onChange={(e) =>\n                                        setUser({\n                                            ...user,\n                                            superAdmin: !user.superAdmin,\n                                        })\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={deleteUserDialog}\n                        style={{ width: \"450px\" }}\n                        header={txtDeleteUserTitle}\n                        modal\n                        footer={deleteUserDialogFooter}\n                        onHide={hideDeleteUserDialog}\n                    >\n                        <div className=\"confirmation-content\">\n                            {txtDeleteUserContent}\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={detailsUser}\n                        style={{ width: \"450px\" }}\n                        header={\"Detalles de usuario\"}\n                        draggable={false}\n                        onHide={hideDetailsUser}\n                        footer={\n                            <Button\n                                label=\"¡Listo!\"\n                                className=\"p-button-success\"\n                                onClick={hideDetailsUser}\n                            />\n                        }\n                    >\n                        <div>\n                            Nombre completo:{\" \"}\n                            <span>{`${detailUserChange.nombre} ${detailUserChange.primerApellido} ${detailUserChange.segundoApellido}`}</span>\n                        </div>\n                        <div>\n                            Fecha de nacimiento:{\" \"}\n                            <span>{`${moment(detailUserChange.fechaDeNacimiento).format(\"LLL\") }`}</span>\n                        </div>\n                        <div>\n                            Correo: <span>{`${detailUserChange.correo}`}</span>\n                        </div>\n                        <div>\n                            Contraseña creada:{\" \"}\n                            <span>{`${detailUserChange.contrasena}`}</span>\n                            <p>\n                                <i>\n                                    Favor de guardar y cambiar la contraseña más\n                                    tarde\n                                </i>\n                            </p>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport PersonalData from \"../organisms/PersonalData\";\nimport CrudUsers from \"../organisms/CrudUsers\";\nimport {\n    txtTitleProfile,\n    txtTabPersonalData,\n    txtTabUserTable,\n} from \"../../utils/Strings\";\n\nexport default function ProfileTemplate() {\n    const [userInfo, setUserInfo] = useState({\n        superAdmin: false,\n    });\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitleProfile }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <div className=\"p-grid\">\n                <div className=\"p-col\">\n                    <TabView>\n                        <TabPanel\n                            header={txtTabPersonalData}\n                            leftIcon=\"pi pi-fw pi-user\"\n                        >\n                            <PersonalData />\n                        </TabPanel>\n                        {userInfo.superAdmin ? (\n                            <TabPanel\n                                header={txtTabUserTable}\n                                leftIcon=\"pi pi-fw pi-pencil\"\n                            >\n                                <CrudUsers />\n                            </TabPanel>\n                        ) : (\n                            <div className=\"disable\"></div>\n                        )}\n                    </TabView>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport useActive from '../CustomHooks/useActive'\nimport ProfileTemplate from '../templates/ProfileTemplate';\nimport MenuTop from \"../organisms/MenuTop\";\nexport default function ProfilePage() {\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useActive()\n    }, [])\n     return (\n          <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ProfileTemplate />\n                </div>\n            </div>\n        </>\n     )\n}\n","import React from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport {\n    txtAltLogoImg,\n    txt404,\n    txtPageNotFound,\n    txtPageError,\n} from \"../../utils/Strings\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\n\nexport default function ErrorPage() {\n    return (\n        <div className=\"p-d-flex p-ai-center p-jc-center pageerror\">\n            <div className=\"p-col-6\">\n                <div className=\"p-text-center\">\n                    <img\n                        src={logonovopatent}\n                        alt={txtAltLogoImg}\n                        height=\"100px\"\n                    />\n                    <div style={{ fontSize: \"8em\", color: \"#454545\" }}>\n                        {txt404}\n                    </div>\n                    <div style={{ fontSize: \"3em\", color: \"#454545\" }}>\n                        {txtPageNotFound}\n                    </div>\n                    <div style={{ fontSize: \"1.5em\", color: \"#454545\" }}>\n                        {txtPageError}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import \"primereact/resources/themes/md-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport React from \"react\";\nimport { locale, addLocale } from \"primereact/api\";\nimport { localLocation } from \"./utils/Strings\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport HomePage from \"./components/pages/HomePage\";\nimport PatentPage from \"./components/pages/PatentPage\";\nimport BrandPage from \"./components/pages/BrandPage\";\nimport InformationPage from \"./components/pages/ClientsPage\";\nimport ProfilePage from \"./components/pages/ProfilePage\";\nimport ErrorPage from \"./components/pages/ErrorPage\";\naddLocale(\"es\", localLocation);\nlocale(\"es\");\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/inicio\" component={HomePage} />\n                <Route path=\"/patentes\" component={PatentPage} />\n                <Route path=\"/marcas\" component={BrandPage} />\n                <Route path=\"/expedientes\" component={InformationPage} />\n                <Route path=\"/perfil\" component={ProfilePage} />\n                <Route component={ErrorPage} />\n            </Switch>\n        </Router>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}