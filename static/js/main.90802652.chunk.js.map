{"version":3,"sources":["utils/Strings.js","utils/Validations.js","assets/img/logonovopatent.jpg","service/api.js","service/UsuarioService.js","components/pages/Login.jsx","components/CustomHooks/useLogin.js","components/CustomHooks/useActive.js","service/ResumeService.js","components/templates/HomeTemplate.jsx","components/organisms/MenuTop.jsx","components/pages/HomePage.jsx","service/ClienteService.js","service/apiScraping.js","service/ScrapingService.js","service/HistorialService.js","utils/Colors.js","components/templates/PatentTemplate.jsx","components/pages/PatentPage.jsx","components/templates/BrandTemplate.jsx","components/pages/BrandPage.jsx","components/templates/ClientsTemplate.jsx","components/pages/ClientsPage.jsx","components/organisms/PersonalData.jsx","components/organisms/CrudUsers.jsx","components/templates/ProfileTemplate.jsx","components/pages/ProfilePage.jsx","components/pages/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["txtLastQueryPatent","txtLastQueryBrand","txtLastUpdateClients","itemsMenuTop","label","icon","command","window","location","txtAltLogoImg","txtMessageSucces","type","title","description","txtEmailLabel","txtMessageLoginError","txtMessageUserSuccess","txtMessageUserError","txtMessageUserDelete","txtMessageUserPasswordSuccess","txtMessageUserPasswordError","txtMessageUserPasswordReset","txtMessageErrorGeneral","txtNameLabel","txtNameHelp","txtFistSurnameLabel","txtFistSurnameHelp","txtSecondSurnameLabel","txtDateOfBirthLabel","txtDateOfBirthHelp","txtEmailHelp","txtDesactiveActiveFieldsLabel","txtYES","txtNO","txtSaveButton","txtSmsLoading","txtMessageClientsSaved","txtTitleClients","txtClearButton","txtClearMessages","txtExportButton","txtStartSearchButton","txtNoData","txtTitlePatents","txtTitleBrands","txtMessageNoClients","txtMessageSearchSuccess","txtMessageSearchError","txtSubtitleBrand","txtSubitlePatent1","txtSubitlePatent2","txtSubitlePatent3","txtLodaing","txtStartSearch","txtInstructionsSearch","txtDateStartLabel","txtDateEndLabel","txtNoDataSearch","txtDataSearch","email","test","name","flag","i","length","indexOf","charAt","surname","this","validateNames","date","split","replaceAll","tempDate","JSON","stringify","cutDate","substring","convertAPIDate","dateStart","dateEnd","first","second","dateBirth","validateSecondSurname","validateEmail","curently","newPas","repeat","userEmail","userEmailInfo","axios","create","baseURL","headers","api","put","oldPassword","newPassword","obj","post","get","id","delete","Login","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","emailErrorSms","setEmailErrorSms","passwordErrorSms","setPasswordErrorSms","emailUIError","setEmailUIError","passwordUIError","setPasswordUIError","toastMessages","useRef","useEffect","localStorage","key","clearMessages","current","clear","showMessage","show","severity","summary","detail","sticky","className","ref","src","logonovopatent","alt","height","style","fontSize","fontWeight","htmlFor","aria-describedby","value","maxLength","onChange","e","target","toggleMask","feedback","onClick","Validations","userLogin","correo","contrasena","UsuarioService","login","then","response","setItem","data","usuario","catch","err","useActive","Logo","width","objectFit","LastDateCategory","last_search_info","last_date","size","moment","format","HomeTemplate","userInfo","setUserInfo","ultimaBusquedaPatentes","ultimaBusquedaMarcas","ultimaBusquedaEjemplares","ultimaModificacionClientes","clientesTotales","resume","setResume","ResumeService","getResume","console","error","parse","getItem","nombre","primerApellido","locale","MenuTop","start","end","confirmDialog","message","header","acceptClassName","rejectClassName","accept","reject","model","HomePage","dark_sea_green","PatentTemplate","showDialog","setShowDialog","notificaciones","setNotificaciones","patentesRegistros","setPatentesRegistros","requisitos","setRequisitos","history","setHistory","filesReady","setFilesReady","inputFechaInicio","setInputFechaInicio","inputFechaFin","setInputFechaFin","toast","dt1","dt2","dt3","setData","a","getClients","info","objSend","fechaInicio","fechaFin","datos","descargado","ScrapingService","getPatentes","resp","viewData","log","onbeforeunload","ClienteService","getAll","enlaceBodyTemplate","rowdata","href","rel","NotificacionPatentes","emptyMessage","paginator","rows","field","sortable","body","PatentesIndustriales","scrollable","headerStyle","PatentesNotificados","home","backgroundColor","convertInputDate","Date","exportCSV","showHeader","visible","draggable","closable","onHide","mode","color","dateFormat","mask","monthNavigator","yearNavigator","yearRange","placeholder","disabled","inputId","checked","validateDateStartEnd","HistorialService","insertOne","PatentPage","BrandTemplate","marcas","setMarcas","getMarcas","headerExport","BrandPage","ClientsTemplate","importedData","setImportedData","selectedImportedData","setSelectedImportedData","importedCols","setImportedCols","importExcel","showMessageloading","file","files","xlsx","reader","FileReader","onload","wb","read","result","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","cols","shift","_importedCols","map","col","toCapitalize","_importedData","d","reduce","c","readAsArrayBuffer","clearMessageLoading","s","r","toLowerCase","slice","content","flex","saveAllImportedData","m1","splice","m2","insertTwo","life","chooseOptions","auto","url","onUpload","selection","index","ClientsPage","PersonalData","activePersonalFields","setActivePersonalFields","activePasswordFields","setActivePasswordFields","segundoApellido","fechaDeNacimiento","superAdmin","contraseñaActual","nuevaContraseña","repetirNuevaContraseña","userPassword","setUserPassword","showIcon","convertOnlyInputDate","user","validateFormUser","updateOne","validatePassworsNoEmpty","changePassword","CrudUsers","emptyUser","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","selectedUsers","setSelectedUsers","globalFilter","setGlobalFilter","setUser","saveOrUpdate","setSaveOrUpdate","detailsUser","setDetailsUser","detailUserChange","setDetailUserChange","dt","openNew","hideDialog","hideDeleteUserDialog","hideDetailsUser","resetPassword","userDialogFooter","Fragment","deleteUserDialogFooter","removeOne","onInput","left","right","onSelectionChange","dataKey","paginatorTemplate","currentPageReportTemplate","rowData","editUser","confirmDeleteUser","showConfirmResetPassword","modal","footer","ProfileTemplate","leftIcon","ProfilePage","ErrorPage","App","path","exact","component","InformationPage","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","choose","upload","cancel","passwordPrompt","weak","medium","strong","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA0DIA,EAAqB,sCACrBC,EAAoB,oCAEpBC,EAAuB,8CAMvBC,EAAe,CACX,CACIC,MAAO,SACPC,KAAM,mBACNC,QAAS,WACLC,OAAOC,SAAW,YAG1B,CACIJ,MAAO,WACPC,KAAM,mBACNC,QAAS,WACLC,OAAOC,SAAW,cAG1B,CACIJ,MAAO,SACPC,KAAM,oBACNC,QAAS,WACLC,OAAOC,SAAW,YAG1B,CACIJ,MAAO,cACPC,KAAM,sBACNC,QAAS,WACLC,OAAOC,SAAW,iBAG1B,CACIJ,MAAO,SACPC,KAAM,mBACNC,QAAS,WACLC,OAAOC,SAAW,aAI9BC,EAAgB,kBAQhBC,EAAmB,CACfC,KAAM,UACNC,MAAO,2BACPC,YAAa,mBASjBC,EAAgB,yBAShBC,EAAuB,CACnBJ,KAAM,QACNC,MAAO,sDACPC,YAAa,wCAURG,EAAwB,CAC7BL,KAAM,UACNC,MAAO,iCACPC,YAAa,4CAEjBI,EAAsB,CAClBN,KAAM,QACNC,MAAO,uBACPC,YACI,oEAERK,EAAuB,CACnBP,KAAM,UACNC,MAAO,kCACPC,YAAa,4CAEjBM,EAAgC,CAC5BR,KAAM,UACNC,MAAO,uCACPC,YAAa,mDAEjBO,EAA8B,CAC1BT,KAAM,QACNC,MAAO,uDACPC,YAAa,8CAEjBQ,EAA8B,CAC1BV,KAAM,UACNC,MAAO,2CACPC,YAAa,mCAEjBS,EAAyB,CACrBX,KAAM,QACNC,MAAO,mCACPC,YAAa,qBAGjBU,EAAe,UACfC,EAAc,yDACdC,EAAsB,mBACtBC,EACI,kEACJC,EAAwB,oBACxBC,EAAsB,uBACtBC,EACI,qEACJC,EACI,uEACJC,EAAgC,gCAYhCC,EAAS,KACTC,EAAQ,KACRC,EAAgB,UAkBPC,EAAgB,CACrB,WACA,0CAEJC,EAAyB,CACrBzB,KAAM,UACNC,MAAO,wBACPC,YAAa,oCAEjBwB,EAAkB,cAClBC,EAAiB,gBAEjBC,EAAmB,mBAKVC,EAAkB,sBAC3BC,EAAuB,6BACvBC,EAAY,eAEZC,EAAkB,WAClBC,EAAiB,SACjBC,EAAsB,CAClBlC,KAAM,QACNC,MAAO,iCACPC,YAAa,+CAEjBiC,EAA0B,CACtBnC,KAAM,UACNC,MAAO,qCACPC,YAAa,kDAEjBkC,EAAwB,CACpBpC,KAAM,QACNC,MAAO,qCACPC,YAAa,gCAEjBmC,EAAmB,2BACnBC,EAAoB,6BACpBC,EAAoB,uEACpBC,EAAoB,uDACpBC,EAAa,yCACbC,EAAiB,sBACjBC,GACI,6FACJC,GAAoB,gBACpBC,GAAkB,aAClBC,GAAkB,kCAClBC,GAAgB,+B,oDCjML,OA/EE,6CA4EZ,OA5EY,2CACb,SAAcC,GAGV,MADI,4JACMC,KAAKD,KAClB,2BAED,SAAcE,GACV,IAAIC,GAAO,EACX,GAAa,KAATD,EAQA,OAAO,EAPP,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC7B,IAAuC,IAZnD,wGAYsBE,QAAQJ,EAAKK,OAAOH,IAAY,CACtCD,GAAO,EACP,MAMZ,OAAOA,IACV,mCAED,SAAsBK,GAClB,MAAgB,KAAZA,GAGOC,KAAKC,cAAcF,KAEjC,4BAED,SAAeG,GAEX,OADeA,EAAKC,MAAM,KAAK,GACfC,WAAW,IAAK,OACnC,8BAED,SAAiBF,GACb,IAAIG,EAAWC,KAAKC,UAAUL,GAC1BM,EAAUH,EAASI,UAAU,EAAGJ,EAAST,OAAS,GACtD,OAAOI,KAAKU,eAAeF,KAC9B,kCAED,SAAqBN,GACjB,IAAIG,EAAWC,KAAKC,UAAUL,GAC9B,OAAOG,EAASI,UAAU,EAAGJ,EAAST,OAAS,KAClD,kCAED,SAAqBe,EAAWC,GAC5B,OACyB,KAArBD,EAAUf,QACS,KAAnBgB,EAAQhB,QACwB,IAAhCe,EAAUR,MAAM,KAAKP,QACS,IAA9BgB,EAAQT,MAAM,KAAKP,SAK1B,8BAED,SAAiBH,EAAMoB,EAAOC,EAAQC,EAAWxB,GAC7C,SACIS,KAAKC,cAAcR,IACnBO,KAAKC,cAAcY,IACnBb,KAAKgB,sBAAsBF,IACb,KAAdC,GACAf,KAAKiB,cAAc1B,MAI1B,qCAED,SAAwB2B,EAAUC,EAAQC,GACtC,MAAoB,KAAbF,GAA8B,KAAXC,GAA4B,KAAXC,IAC9C,+BAED,SAAkBC,EAAWC,GACzB,OAAOD,IAAcC,MACxB,EA5EY,ICHF,OAA0B,2C,2DCE1BC,QAAMC,OAAO,CACxBC,QAAS,iDAETC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,OC+BxB,OApCK,6CAiCf,OAjCe,2CAChB,SAAcnC,GACV,OAAOoC,GAAIC,IAAI,mBAAD,OAAoBrC,MACrC,4BAED,SAAeA,EAAOsC,EAAaC,GAC/B,OAAOH,GAAIC,IAAI,oBAAD,OACUrC,EAAK,YAAIsC,EAAW,YAAIC,MAEnD,mBAED,SAAMC,GACF,OAAOJ,GAAIK,KAAK,SAAUD,KAC7B,oBAED,WACI,OAAOJ,GAAIM,IAAI,YAClB,oBAED,SAAOC,GACH,OAAOP,GAAIM,IAAI,UAAD,OAAWC,MAC5B,uBAED,SAAUH,GACN,OAAOJ,GAAIK,KAAK,SAAUD,KAC7B,uBAED,SAAUA,GACN,OAAOJ,GAAIC,IAAI,SAAUG,KAC5B,uBAED,SAAUxC,GACN,OAAOoC,GAAIQ,OAAO,UAAD,OAAW5C,QAC/B,EAjCe,I,QCqBL,SAAS6C,KAAS,IAAD,EACQC,mBAAS,IAAG,oBAAzCC,EAAU,KAAEC,EAAa,OACUF,mBAAS,IAAG,oBAA/CG,EAAa,KAAEC,EAAgB,OACIJ,mBAAS,IAAG,oBAA/CK,EAAa,KAAEC,EAAgB,OACUN,mBAAS,IAAG,oBAArDO,EAAgB,KAAEC,EAAmB,OACJR,mBAAS,aAAY,oBAAtDS,EAAY,KAAEC,EAAe,OACUV,mBAAS,aAAY,oBAA5DW,EAAe,KAAEC,EAAkB,KACpCC,EAAgBC,iBAAO,MAE7BC,qBAAU,WC/B6B,OAAnCC,aAAaC,IAAI,gBACjBnH,OAAOC,SAAW,aDiCnB,IAEH,IA8CMmH,EAAgB,WAClBL,EAAcM,QAAQC,SAGpBC,EAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCyG,EAAcM,QAAQG,KAAK,CACvBC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRsH,QAAQ,KAIhB,OACI,uBAAKC,UAAU,YAAW,UACtB,eAAC,SAAK,CAACC,IAAKf,IACZ,sBAAKc,UAAU,uBAAsB,SACjC,uBAAKA,UAAU,iDAAgD,UAC3D,sBAAKA,UAAU,4BAA2B,SACtC,sBACIE,IAAKC,GACLC,IAAK/H,EACLgI,OAAO,WAGf,uBAAKL,UAAU,QAAO,UAClB,sBACIA,UAAU,gBACVM,MAAO,CAAEC,SAAU,MAAOC,WAAY,OAAQ,SLW3D,wBKPS,sBAAKR,UAAU,gBAAe,SLQlC,qCKNI,uBAAKA,UAAU,gBAAe,UAC1B,sBAAKA,UAAU,UAAS,SACpB,uBAAKA,UAAU,UAAS,UACpB,wBACIS,QAAQ,aACRT,UAAU,YAAW,SAEpBtH,IAEL,eAAC,aAAS,CACNsH,UAAWlB,EACXZ,GAAG,aACHwC,mBAAiB,kBACjBC,MAAOrC,EACPsC,UAAU,KACVC,SAAU,SAACC,GACPvC,EAAcuC,EAAEC,OAAOJ,UAG/B,wBACIzC,GAAG,kBACH8B,UAAU,oBAAmB,SAE5BtB,SAIb,sBAAKsB,UAAU,UAAS,SACpB,uBAAKA,UAAU,UAAS,UACpB,wBACIS,QAAQ,gBACRT,UAAU,YAAW,SLvBtC,mBK2Ba,eAAC,YAAQ,CACL9B,GAAG,gBACH8C,YAAU,EACVhB,UAAWhB,EACXiC,UAAU,EACVL,UAAU,KACVD,MAAOnC,EACPqC,SAAU,SAACC,GACPrC,EAAiBqC,EAAEC,OAAOJ,UAGlC,wBACIzC,GAAG,qBACH8B,UAAU,oBAAmB,SAE5BpB,SAIb,sBAAKoB,UAAU,gBAAe,SAC1B,eAAC,UAAM,CACHhI,ML9Cf,oBK+CeC,KAAK,gBACL+H,UAAU,mBACVkB,QA3IlB,WAeV,GAdI5C,EAAW1C,QAAU,IAAMuF,GAAYlE,cAAcqB,IACrDK,ELsEQ,wDKrERI,EAAgB,yBAEhBJ,EAAiB,IACjBI,EAAgB,cAEhBP,EAAc5C,QAAU,GACxBiD,ELgEW,2CK/DXI,EAAmB,yBAEnBJ,EAAoB,IACpBI,EAAmB,cAGnBX,EAAW1C,OAAS,GACpB4C,EAAc5C,OAAS,GACvBuF,GAAYlE,cAAcqB,GAC5B,CACE,IAAI8C,EAAY,CACZC,OAAQ/C,EACRgD,WAAY9C,GAEhBkB,EAAY,CACRnH,KAAM,OACNC,MAAO,cACPC,YAAa,qBAEjB8I,GAAeC,MAAMJ,GAChBK,MAAK,SAACC,GACHnC,IACAF,aAAasC,QACT,aACArF,KAAKC,UAAUmF,EAASE,KAAKC,UAEjCnC,EAAYpH,GACZH,OAAOC,SAAW,aAErB0J,OAAM,SAACC,GACJxC,IACAG,EAAY/G,0BE9EjB,SAASqJ,KACoB,OAAnC3C,aAAaC,IAAI,gBACjBnH,OAAOC,SAAW,K,8BCMZ,OANI,6CAGb,OAHa,uCACd,WACK,OAAOuF,GAAIM,IAAI,eACnB,EAHa,I,0BCenB,SAASgE,KACL,OACI,sBACI/B,IAAI,iCACJE,ITmCuB,mBSlCvBE,MAAO,CACH4B,MAAO,OACP7B,OAAQ,QACR8B,UAAW,WAM3B,SAASC,GAAiB,GAAwC,IAAtCnK,EAAI,EAAJA,KAAMoK,EAAgB,EAAhBA,iBAAkBC,EAAS,EAATA,UAChD,OACI,sBAAKtC,UAAU,yBAAwB,SACnC,uBAAKA,UAAU,SAAQ,UACnB,+BACI,eAAC,UAAM,CAAC/H,KAAMA,EAAM+H,UAAU,SAASuC,KAAK,aAEhD,uBAAKvC,UAAU,QAAO,UAClB,sBAAKM,MAAO,CAAEC,SAAU,QAASC,WAAY,WAAY,SACpD6B,IAEL,sBAAK/B,MAAO,CAAEC,SAAU,QAASC,WAAY,QAAS,SACjDgC,KAAOF,GAAWG,OAAO,kBAQnC,SAASC,KAAgB,IAAD,EACHrE,mBAAS,IAAG,oBAArCsE,EAAQ,KAAEC,EAAW,OAEAvE,mBAAS,CACjCwE,uBAAwB,GACxBC,qBAAsB,GACtBC,yBAA0B,GAC1BC,2BAA4B,GAC5BC,gBAAiB,IACnB,oBANKC,EAAM,KAAEC,EAAS,KA6BxB,OArBA/D,qBAAU,WAWNgE,GAAcC,YACT5B,MAAK,SAACC,GACHyB,EAAU,gBAAKzB,EAASE,OACxBvC,aAAasC,QAAQ,SAAUrF,KAAKC,UAAUmF,EAASE,UAE1DE,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,MAVtBa,EAAYtG,KAAKkH,MAAMnE,aAAaoE,QAAQ,kBAH7C,IAkBC,iCACI,sBAAKzD,UAAU,SAAQ,SACnB,sBAAKA,UAAU,QAAO,SAClB,eAACiC,GAAI,QAGb,uBAAKjC,UAAU,SAAQ,UACnB,sBAAKA,UAAU,yBAAwB,SACnC,gCTnCH,+BSoCoB,IACb,uCAAO2C,EAASe,OAAM,YAAIf,EAASgB,uBAG3C,uBAAK3D,UAAU,yBAAwB,UACnC,8BACI,eAAC,SAAK,CACFW,MAAK,kBAAauC,EAAOD,gBAAe,qCACxCV,KAAK,SACL3C,SACIsD,EAAOD,iBAAmB,EACpB,SACA,cAIjBC,EAAOD,iBAAmB,GACvB,eAAC,SAAK,CACFtC,MTjDP,qDSkDOf,SAAS,UACTI,UAAU,iBAK1B,uBAAKA,UAAU,gBAAe,UAC1B,eAACoC,GAAgB,CACbnK,KAAK,aACLoK,iBAAkBzK,EAClB0K,UAAWY,EAAOL,yBAEtB,eAACT,GAAgB,CACbnK,KAAK,cACLoK,iBAAkBxK,EAClByK,UAAWY,EAAOJ,0BAG1B,sBAAK9C,UAAU,gBAAe,SAC1B,eAACoC,GAAgB,CACbnK,KAAK,gBACLoK,iBAAkBvK,EAClBwK,UAAWY,EAAOF,kCAvHtCR,KAAOoB,OAAO,M,sBCPC,SAASC,KACpB,IAeMC,EACF,sBACI1D,IAAK/H,EACL6H,IAAKC,GACLE,OAAO,KACPL,UAAU,SACVkB,QAAS,WAAQ/I,OAAOC,SAAW,aAIrC2L,EACF,eAAC,UAAM,CACH/D,UAAU,mBACVkB,QA5Bc,WAClB8C,yBAAc,CACVC,QVsDkB,4CUrDlBC,OVsDE,QUrDFjM,KAAM,6BACNkM,gBAAgB,mBAChBC,gBAAiB,+BACjBC,OAAQ,WACJhF,aAAaI,QACbtH,OAAOC,SAAU,KAErBkM,OAAQ,gBAkBRtM,MVmEU,QUlEVC,KAAK,mBAIb,OACI,sBAAK+H,UAAU,eAAc,SACzB,sBAAKA,UAAU,QAAO,SAClB,sBAAKA,UAAU,OAAM,SACjB,eAAC,WAAO,CAACuE,MAAOxM,EAAc+L,MAAOA,EAAOC,IAAKA,UC1CtD,SAASS,KAKpB,OAJApF,qBAAU,WAEN4C,OACD,IAEC,uCACI,eAAC6B,GAAO,IACR,sBAAK7D,UAAU,kBAAiB,SAC5B,sBAAKA,UAAU,sBAAqB,SAChC,eAAC0C,GAAY,W,+FCKlB,OAlBK,6CAed,OAfc,oCACf,WACK,OAAO/E,GAAIM,IAAI,cACnB,uBAED,SAAUF,GACL,OAAOJ,GAAIK,KAAK,cAAeD,KACnC,uBAED,SAAUA,GACL,OAAOJ,GAAIK,KAAK,cAAeD,KACnC,uBAED,WACK,OAAOJ,GAAIQ,OAAO,gBACtB,EAfc,ICALZ,QAAMC,OAAO,CACxBC,QAAS,wBACTC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,OCMxB,OAVM,6CAOhB,OAPgB,yCACjB,SAAYK,GACR,OAAOJ,GAAIK,KAAK,YAAaD,KAChC,uBAED,SAAUA,GACN,OAAOJ,GAAIK,KAAK,SAAUD,OAC7B,EAPgB,ICMN,OANO,6CAGjB,OAHiB,uCAClB,SAAUxF,GACN,OAAOoF,GAAIK,KAAK,YAAD,OAAazF,QAC/B,EAHiB,ICFTkM,GAAiB,UC2Cf,SAASC,KAAkB,IAAD,EACDrG,oBAAS,GAAM,oBAA5CsG,EAAU,KAAEC,EAAa,OACJvG,mBAAS,IAAG,oBAAjC6E,EAAM,KAAEC,EAAS,OACoB9E,mBAAS,IAAG,oBAAjDwG,EAAc,KAAEC,EAAiB,OACUzG,mBAAS,IAAG,oBAAvD0G,EAAiB,KAAEC,EAAoB,OACV3G,mBAAS,IAAG,oBAAzC4G,EAAU,KAAEC,EAAa,OACF7G,oBAAS,GAAM,oBAAtC8G,EAAO,KAAEC,EAAU,OACU/G,oBAAS,GAAM,oBAA5CgH,EAAU,KAAEC,EAAa,OACgBjH,mBAAS,IAAG,oBAArDkH,EAAgB,KAAEC,EAAmB,OACFnH,mBAAS,IAAG,oBAA/CoH,EAAa,KAAEC,EAAgB,KAChCC,EAAQxG,iBAAO,MACfyG,GAAMzG,iBAAO,MACb0G,GAAM1G,iBAAO,MACb2G,GAAM3G,iBAAO,MAEnBC,qBAAU,WACNiE,OACD,IAEH,IAAMA,GAAY,WACdF,EAAU7G,KAAKkH,MAAMnE,aAAaoE,QAAQ,aA8B9C,IAAMsC,GAAO,yCAAG,+BAAAC,EAAA,sEACKC,KAAa,KAAD,EAM5B,OANGC,EAAI,OACJC,EAAU,CACVC,YAAab,EACbc,SAAUZ,EACVa,MAAOJ,EACPK,WAAYlB,GACd,EAAD,OACKmB,GAAgBC,YAAYN,GAC7B1E,MAAK,SAACiF,GACHC,GAASD,EAAK9E,MACdlC,GAAYhF,MAEfoH,OAAM,SAACC,GACJ6C,GAAc,GACdlF,GAAY/E,GACZ2I,QAAQsD,IAAI7E,MACb,KAAD,EACN6C,GAAc,GACdQ,GAAW,GAAO,2CACrB,kBApBY,mCAsBPuB,GAAW,SAAC/E,IACO,IAAjBA,EAAK,GAAGA,MACRzJ,OAAO0O,eAAiB,iBAAM,iCAC9B/B,EAAkBlD,EAAK,GAAGA,MAC1BlC,GAAY,CACRnH,KAAM,OACNC,MAAOqC,EACPpC,YAAa6C,MAGjBoE,GAAY,CACRnH,KAAM,OACNC,MAAOqC,EACPpC,YAAa4C,MAGA,IAAjBuG,EAAK,GAAGA,MACRzJ,OAAO0O,eAAiB,iBAAM,iCAC9B7B,EAAqBpD,EAAK,GAAGA,MAC7BlC,GAAY,CACRnH,KAAM,OACNC,MAAOsC,EACPrC,YAAa6C,MAGjBoE,GAAY,CACRnH,KAAM,OACNC,MAAOsC,EACPrC,YAAa4C,MAGA,IAAjBuG,EAAK,GAAGA,MACRzJ,OAAO0O,eAAiB,iBAAM,iCAC9B3B,EAActD,EAAK,GAAGA,MACtBlC,GAAY,CACRnH,KAAM,OACNC,MAAOuC,EACPtC,YAAa6C,MAGjBoE,GAAY,CACRnH,KAAM,OACNC,MAAOuC,EACPtC,YAAa4C,MAKnB4K,GAAa,WACf,OAAOa,GAAeC,SACjBtF,MAAK,SAACiF,GAAI,OAAKA,EAAK9E,QACpBE,OAAM,SAACC,GAAG,OAAKuB,QAAQC,MAAMxB,OAsBhCrC,GAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCkN,EAAMnG,QAAQG,KAAK,CACfC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRsH,QAAQ,KAQViH,GAAqB,SAACC,GACxB,OACI,eAAC,WAAQ,UACL,oBACIC,KAAMD,EAAQ,yBACdlG,OAAO,SACPoG,IAAI,WAAU,SAEbF,EAAQ,8BAMzB,SAASG,KACL,OACI,uBAAKpH,UAAU,eAAc,UACzB,8BAAKnF,IACL,gBAAC,aAAS,CACNoF,IAAK2F,GACLyB,aAAc/M,EACdgN,WAAS,EACTC,KAAM,EACN5G,MAAOkE,EAAe,UAEtB,eAAC,UAAM,CACH2C,MAAM,uBACNtD,OAAO,uBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,mBACNtD,OAAO,mBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,oCACNtD,OAAO,oCACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,wBACNtD,OAAO,wBACPwD,KAAMV,GACNS,UAAQ,IAEZ,eAAC,UAAM,CAACD,MAAM,aAAatD,OAAO,aAAauD,UAAQ,UAMvE,SAASE,KACL,OACI,uBAAK3H,UAAU,eAAc,UACzB,8BAAKlF,IACL,gBAAC,aAAS,CACNmF,IAAK4F,GACLwB,aAAc/M,EACdgN,WAAS,EACTC,KAAM,EACNK,YAAU,EACVjH,MAAOoE,EAAkB,UAEzB,eAAC,UAAM,CACHyC,MAAM,6CACNtD,OAAO,6CACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,4BACNtD,OAAO,4BACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,oBACNtD,OAAO,oBACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,yBACNtD,OAAO,yBACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,2BACNtD,OAAO,2BACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,wBACNtD,OAAO,wBACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,YACNtD,OAAO,YACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,eACNtD,OAAO,eACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,UACNtD,OAAO,UACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,SACNtD,OAAO,SACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,UAO5B,SAASK,KACL,OACI,uBAAK9H,UAAU,eAAc,UACzB,8BAAKjF,IACL,gBAAC,aAAS,CACNkF,IAAK6F,GACLuB,aAAc/M,EACdgN,WAAS,EACTC,KAAM,EACN5G,MAAOsE,EAAW,UAElB,eAAC,UAAM,CACHuC,MAAM,0BACNtD,OAAO,0BACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,iBACNtD,OAAO,iBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,uBACNtD,OAAO,uBACPuD,UAAQ,IAEZ,eAAC,UAAM,CAACD,MAAM,SAAStD,OAAO,SAASuD,UAAQ,UAM/D,OACI,uCACI,eAAC,cAAU,CACPlD,MAAO,CAAC,CAAEvM,MAAOuC,IACjBwN,KAAM,CAAE9P,KAAM,gBAElB,eAAC,SAAK,CAACgI,IAAK0F,IACZ,uBAAK3F,UAAU,SAAQ,UACnB,uBAAKA,UAAU,cAAa,UACxB,8BAAKzF,IACL,iCACK3C,EACA4K,KAAOU,EAAOL,wBAAwBJ,OAAO,cAGtD,sBAAKzC,UAAU,8BAA6B,SACxC,eAAC,UAAM,CACHhI,MAAOqC,EACPpC,KAAK,eACL+H,UAAU,wBACVM,MAAO,CAAE0H,gBAAiB,oBAC1B9G,QA7TO,WACvBoE,GAAc,GACdI,EAAiBvE,GAAY8G,iBAAiB,IAAIC,OAClD1C,EACIrE,GAAYzE,eAAewG,EAAOL,yBAElCK,EAAOD,gBAAkB,EACzB2B,GAAc,GAEdlF,GAAYjF,WAwTZ,uBAAKuF,UAAU,mBAAkB,UAC7B,uBAAKA,UAAU,QAAO,UAClB,uBAAKA,UAAU,sCAAqC,UAChD,eAAC,UAAM,CACHzH,KAAK,SACLyH,UAAU,SACV/H,KAAK,iBACLD,MAAOoC,EACPkG,MAAO,CAAE0H,gBAAiB,mBAC1B9G,QA5NR,WACZ0E,GAAIpG,QAAQ2I,YACZtC,GAAIrG,QAAQ2I,YACZrC,GAAItG,QAAQ2I,eA2NI,eAAC,UAAM,CACH5P,KAAK,SACLN,KAAK,cACLD,MAAOkC,EACP8F,UAAU,wBACVkB,QA7NV,WACV4D,EAAkB,IAClBE,EAAqB,IACrBE,EAAc,OA4NE,eAAC,UAAM,CACH3M,KAAK,SACLN,KAAK,iBACLD,MAAOmC,EACP6F,UAAU,gBACVkB,QArNF,WAClByE,EAAMnG,QAAQC,cAuNF,eAAC2H,GAAoB,OAEzB,sBAAKpH,UAAU,QAAO,SAClB,eAAC2H,GAAoB,MAEzB,sBAAK3H,UAAU,QAAO,SAClB,eAAC8H,GAAmB,SAI5B,eAAC,UAAM,CACHM,YAAY,EACZC,QAAS1D,EACT2D,WAAW,EACXC,UAAU,EACVC,OAAQ,aAAS,SAEjB,sBAAKxI,UAAU,SAAQ,SACnB,sBAAKA,UAAU,QAAO,SACjBmF,EACG,qCACI,uBAAKnF,UAAU,2BAA0B,UACrC,8BAAKjG,EAAc,KACnB,+BAAMiB,IACN,eAAC,eAAW,CACRyN,KAAK,gBACLC,MAAOjE,GACPnE,MAAO,CAAED,OAAQ,cAK7B,uCACI,8BAAKpF,IACL,6BAAIC,KACJ,uBAAK8E,UAAU,gBAAe,UAC1B,uBAAKA,UAAU,UAAS,UACpB,wBACIS,QAAQ,iBACRT,UAAU,YAAW,SAEpB7E,KAEL,eAAC,YAAQ,CACL+C,GAAG,iBACHyK,WAAW,WACXC,KAAK,aACLjI,MAAO4E,EACPsD,gBAAc,EACdC,eAAa,EACbC,UAAU,YACVC,YAAazD,EACb0D,SAAU5D,EACVxE,SAAU,SAACC,GACP,IAAI6H,EACAxH,GAAY8G,iBACRnH,EAAEC,OAAOJ,OAEjB6E,EAAoBmD,SAIhC,uBAAK3I,UAAU,UAAS,UACpB,wBACIS,QAAQ,eACRT,UAAU,YAAW,SAEpB5E,KAEL,eAAC,YAAQ,CACL8C,GAAG,eACHyK,WAAW,WACXC,KAAK,aACLjI,MAAO8E,EACPoD,gBAAc,EACdC,eAAa,EACbC,UAAU,YACVC,YAAavD,EACbwD,SAAU5D,EACVxE,SAAU,SAACC,GACP,IAAI6H,EACAxH,GAAY8G,iBACRnH,EAAEC,OAAOJ,OAEjB+E,EAAiBiD,SAK7B,uBAAK3I,UAAU,oBAAmB,UAC9B,eAAC,YAAQ,CACLkJ,QAAQ,aACRC,QAAS9D,EACTxE,SAAU,SAACC,GAAC,OACRwE,EAAcxE,EAAEqI,YAGxB,wBAAO1I,QAAQ,aAAY,0DAMnC,uBAAKT,UAAU,4BAA2B,UACtC,eAAC,UAAM,CACHzH,KAAK,SACLyH,UAAU,yBACVhI,MAAM,WACNkJ,QAAS,WACL0D,GAAc,MAGtB,eAAC,UAAM,CACHrM,KAAK,SACLyH,UAAU,0BACVhI,MAAM,SACNiR,SAvWzB9H,GAAYiI,qBACf7D,EACAE,GAsW4BvE,QAnchB,WAChBkE,GAAW,GAMXiE,GAAiBC,UAAU,KACtB7H,MAAK,SAACC,OACNI,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,MAPtBgE,uBC7EO,SAASwD,KAKpB,OAJAnK,qBAAU,WAEN4C,OACD,IAEC,uCACI,eAAC6B,GAAO,IACR,sBAAK7D,UAAU,kBAAiB,SAC5B,sBAAKA,UAAU,sBAAqB,SAChC,eAAC0E,GAAc,WC0BpB,SAAS8E,KAAiB,IAAD,EACAnL,oBAAS,GAAM,oBAA5CsG,EAAU,KAAEC,EAAa,OACJvG,mBAAS,IAAG,oBAAjC6E,EAAM,KAAEC,EAAS,OACI9E,mBAAS,IAAG,oBAAjCoL,EAAM,KAAEC,EAAS,OACwBrL,mBAAS,IAAG,oBAArDkH,EAAgB,KAAEC,EAAmB,OACFnH,mBAAS,IAAG,oBAA/CoH,EAAa,KAAEC,EAAgB,OACFrH,oBAAS,GAAM,oBAA5CgH,EAAU,KAAEC,EAAa,OACFjH,oBAAS,GAAM,oBAAtC8G,EAAO,KAAEC,EAAU,KACpBO,EAAQxG,iBAAO,MACfyG,EAAMzG,iBAAO,MAEnBC,qBAAU,WACNiE,MACD,IAEH,IAAMA,EAAY,WACdF,EAAU7G,KAAKkH,MAAMnE,aAAaoE,QAAQ,aA8B9C,IAAMsC,EAAO,yCAAG,+BAAAC,EAAA,sEACKC,IAAa,KAAD,EAM5B,OANGC,EAAI,OACJC,EAAU,CACVC,YAAab,EACbc,SAAUZ,EACVa,MAAOJ,EACPK,WAAYlB,GACd,EAAD,OACKmB,GAAgBmD,UAAUxD,GAC3B1E,MAAK,SAACiF,GACHC,EAASD,EAAK9E,MACdlC,EAAYhF,MAEfoH,OAAM,SAACC,GACJ6C,GAAc,GACdlF,EAAY/E,GACZ2I,QAAQsD,IAAI7E,MACb,KAAD,EACN6C,GAAc,GACdQ,GAAW,GAAO,2CACrB,kBApBY,mCAsBPuB,EAAW,SAAC/E,IACI,IAAdA,EAAKA,MACL8H,EAAU9H,EAAKA,MACflC,EAAY,CACRnH,KAAM,OACNC,MAAOoC,EACPnC,YAAa6C,KAEjBnD,OAAO0O,eAAiB,iBAAM,kCAE9BnH,EAAY,CACRnH,KAAM,OACNC,MAAOoC,EACPnC,YAAa4C,MAKnB4K,EAAa,WACf,OAAOa,GAAeC,SACjBtF,MAAK,SAACiF,GAAI,OAAKA,EAAK9E,QACpBE,OAAM,SAACC,GAAG,OAAKuB,QAAQC,MAAMxB,OAoChC6H,EACF,uBAAK5J,UAAU,sCAAqC,UAChD,eAAC,UAAM,CACHzH,KAAK,SACLN,KAAK,iBACL+H,UAAU,SACVhI,MAAOoC,EACPkG,MAAO,CAAE0H,gBAAiB,mBAC1B9G,QAlCI,WACZ0E,EAAIpG,QAAQ2I,eAoCR,eAAC,UAAM,CACH5P,KAAK,SACLN,KAAK,cACLD,MAAOkC,EACP8F,UAAU,uBACVkB,QAtCE,WACVwI,EAAU,OAuCN,eAAC,UAAM,CACHnR,KAAK,SACLN,KAAK,iBACLD,MAAOmC,EACP6F,UAAU,gBACVkB,QAzCU,WAClByE,EAAMnG,QAAQC,cA6CZC,EAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCkN,EAAMnG,QAAQG,KAAK,CACfC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRsH,QAAQ,KAIhB,OACI,uCACI,eAAC,cAAU,CACPwE,MAAO,CAAC,CAAEvM,MAAOwC,IACjBuN,KAAM,CAAE9P,KAAM,gBAElB,eAAC,SAAK,CAACgI,IAAK0F,IACZ,uBAAK3F,UAAU,SAAQ,UACnB,uBAAKA,UAAU,cAAa,UACxB,8BAAKxF,IACL,iCACK3C,EACA2K,KAAOU,EAAOJ,sBAAsBL,OAAO,cAGpD,sBAAKzC,UAAU,8BAA6B,SACxC,eAAC,UAAM,CACHhI,MAAOqC,EACPpC,KAAK,eACL+H,UAAU,wBACVM,MAAO,CAAE0H,gBAAiB,oBAC1B9G,QApKO,WACvBoE,GAAc,GACdI,EAAiBvE,GAAY8G,iBAAiB,IAAIC,OAClD1C,EACIrE,GAAYzE,eAAewG,EAAOJ,uBAElCI,EAAOD,gBAAkB,EACzB2B,GAAc,GAEdlF,EAAYjF,WA+JZ,sBAAKuF,UAAU,mBAAkB,SAC7B,uBAAKA,UAAU,QAAO,UAClB,8BAAKpF,IACL,gBAAC,aAAS,CACN+F,MAAO8I,EACPxJ,IAAK2F,EACL1B,OAAQ0F,EACRvC,aAAc/M,EACdgN,WAAS,EACTM,YAAU,EACVL,KAAM,EAAE,UAER,eAAC,UAAM,CACHC,MAAM,aACNtD,OAAO,aACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,4BACNtD,OAAO,4BACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,mBACNtD,OAAO,mBACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,uBACNtD,OAAO,uBACP2D,YAAa,CAAE3F,MAAO,QACtBuF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,wBACNtD,OAAO,wBACP2D,YAAa,CAAE3F,MAAO,QACtBwF,KApHG,SAACT,GACxB,OACI,eAAC,WAAQ,UACL,oBACIC,KAAMD,EAAQ,yBACdlG,OAAO,SACPoG,IAAI,WAAU,SAEbF,EAAQ,8BA6GDQ,UAAQ,YAMxB,eAAC,UAAM,CACHW,YAAY,EACZC,QAAS1D,EACT2D,WAAW,EACXC,UAAU,EACVC,OAAQ,aAAS,SAEjB,sBAAKxI,UAAU,SAAQ,SACnB,sBAAKA,UAAU,QAAO,SACjBmF,EACG,qCACI,uBAAKnF,UAAU,2BAA0B,UACrC,8BAAKjG,EAAc,KACnB,+BAAMiB,IACN,eAAC,eAAW,CACRyN,KAAK,gBACLC,MAAOjE,GACPnE,MAAO,CAAED,OAAQ,cAK7B,uCACI,8BAAKpF,IACL,6BAAIC,KACJ,uBAAK8E,UAAU,gBAAe,UAC1B,uBAAKA,UAAU,UAAS,UACpB,wBACIS,QAAQ,iBACRT,UAAU,YAAW,SAEpB7E,KAEL,eAAC,YAAQ,CACL+C,GAAG,iBACHyK,WAAW,WACXC,KAAK,aACLjI,MAAO4E,EACPsD,gBAAc,EACdC,eAAa,EACbC,UAAU,YACVC,YAAazD,EACb0D,SAAU5D,EACVxE,SAAU,SAACC,GACP,IAAI6H,EACAxH,GAAY8G,iBACRnH,EAAEC,OAAOJ,OAEjB6E,EAAoBmD,SAIhC,uBAAK3I,UAAU,UAAS,UACpB,wBACIS,QAAQ,eACRT,UAAU,YAAW,SAEpB5E,KAEL,eAAC,YAAQ,CACL8C,GAAG,eACHyK,WAAW,WACXC,KAAK,aACLjI,MAAO8E,EACPoD,gBAAc,EACdC,eAAa,EACbC,UAAU,YACVC,YAAavD,EACbwD,SAAU5D,EACVxE,SAAU,SAACC,GACP,IAAI6H,EACAxH,GAAY8G,iBACRnH,EAAEC,OAAOJ,OAEjB+E,EAAiBiD,SAI7B,uBAAK3I,UAAU,oBAAmB,UAC9B,eAAC,YAAQ,CACLkJ,QAAQ,aACRC,QAAS9D,EACTxE,SAAU,SAACC,GAAC,OACRwE,EAAcxE,EAAEqI,YAGxB,wBAAO1I,QAAQ,aAAY,0DAMnC,uBAAKT,UAAU,4BAA2B,UACtC,eAAC,UAAM,CACHzH,KAAK,SACLyH,UAAU,yBACVhI,MAAM,WACNkJ,QAAS,WACL0D,GAAc,MAGtB,eAAC,UAAM,CACHrM,KAAK,SACLyH,UAAU,0BACVhI,MAAM,SACNiR,SAtPzB9H,GAAYiI,qBACf7D,EACAE,GAqP4BvE,QApThB,WAChBkE,GAAW,GAMXiE,GAAiBC,UAAU,KACtB7H,MAAK,SAACC,OACNI,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,MAPtBgE,sBCvEO,SAAS8D,KAKpB,OAJAzK,qBAAU,WAEN4C,OACD,IAEC,uCACI,eAAC6B,GAAO,IACR,sBAAK7D,UAAU,kBAAiB,SAC5B,sBAAKA,UAAU,sBAAqB,SAChC,eAACwJ,GAAa,WH0BlChH,KAAOoB,OAAO,MEFdpB,KAAOoB,OAAO,M,aEfC,SAASkG,KAAmB,IAAD,EACVzL,mBAAS,IAAG,oBAAjC6E,EAAM,KAAEC,EAAS,OACgB9E,mBAAS,IAAG,oBAA7C0L,EAAY,KAAEC,EAAe,OACoB3L,mBAAS,IAAG,oBAA7D4L,EAAoB,KAAEC,EAAuB,OACZ7L,mBAAS,CAC7C,CAAEmJ,MAAO,GAAItD,OAAQ,cACvB,oBAFKiG,EAAY,KAAEC,EAAe,KAG9BzE,EAAQxG,iBAAO,MAErBC,qBAAU,WACNiE,MACD,IAEH,IAAMA,EAAY,WACdF,EAAU7G,KAAKkH,MAAMnE,aAAaoE,QAAQ,aAGxC4G,EAAW,yCAAG,WAAOvJ,GAAC,wEAED,OADvBwJ,IACMC,EAAOzJ,EAAE0J,MAAM,GAAG,EAAD,OACjB,wDAAe/I,MAAK,SAACgJ,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC9J,GACb,IAAM+J,EAAKJ,EAAKK,KAAKhK,EAAEC,OAAOgK,OAAQ,CAAExS,KAAM,UACxCyS,EAASH,EAAGI,WAAW,GACvBC,EAAKL,EAAGM,OAAOH,GACfpJ,EAAO6I,EAAKW,MAAMC,cAAcH,EAAI,CAAEhH,OAAQ,IAC9CoH,EAAO1J,EAAK,GAClBA,EAAK2J,QACL,IAAIC,EAAgBF,EAAKG,KAAI,SAACC,GAAG,MAAM,CACnClE,MAAOmE,EAAaD,GACpBxH,OAAQyH,EAAaD,OAErBE,EAAgBhK,EAAK6J,KAAI,SAACI,GAC1B,OAAOP,EAAKQ,QAAO,SAAC/N,EAAKgO,EAAGpQ,GAGxB,OADAoC,EADU4N,EAAaI,IACZF,EAAElQ,GACNoC,IACR,OAEPqM,EAAgBoB,GAChBxB,EAAgB4B,IAEpBlB,EAAOsB,kBAAkBzB,MAC1B,KAAD,EACF0B,IAAsB,2CACzB,gBA7BgB,sCA+BXN,EAAe,SAACO,GAClB,IAAIC,EAAID,EAAE9P,WAAW,IAAK,KAE1B,OADQ+P,EAAErQ,OAAO,GAAGsQ,cAAgBD,EAAEE,MAAM,IAI1C5M,EAAQ,WACVuK,EAAgB,IAChBE,EAAwB,IACxBE,EAAgB,CAAC,CAAE5C,MAAO,GAAItD,OAAQ,eAGpC+H,EAAsB,WACxBtG,EAAMnG,QAAQC,SAGZ6K,EAAqB,WACvB3E,EAAMnG,QAAQG,KAAK,CACfC,SAAU,OACVG,QAAQ,EACRuM,QACI,sBAAKtM,UAAU,uBAAuBM,MAAO,CAAEiM,KAAM,KAAM,SACvD,uBAAKvM,UAAU,gBAAe,UAC1B,oBACIA,UAAU,wBACVM,MAAO,CAAEC,SAAU,SAEvB,8BAAKxG,EAAc,KACnB,6BAAIA,EAAc,aAetC,IAAMyS,EAAmB,yCAAG,+BAAAxG,EAAA,sDAG4B,OAFpDsE,IACImC,EAAK1C,EAAa2C,OAAO,EAAG3C,EAAanO,OAAS,GAClD+Q,EAAK5C,EAAa2C,OAAO,EAAG3C,EAAanO,QAAQ,EAAD,OAE9CkL,GAAewC,UAAUmD,GAC1BhL,MAAK,SAACC,GACCA,EAASE,MAETlC,EAAYxG,MAGnB4I,OAAM,SAACC,GACJkK,IACA3I,QAAQC,MAAMxB,MAEf,KAAD,kBAEA+E,GAAe8F,UAAUD,GAC1BlL,MAAK,SAACC,GACHuK,IACIvK,EAASE,MA5BrByH,GAAiBC,UAAU,KACtB7H,MAAK,SAACC,OACNI,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,MA2BVtC,IACAC,EAAY1F,IAEZ0F,EAAYxG,MAGnB4I,OAAM,SAACC,GACJkK,IACA3I,QAAQC,MAAMxB,GACdrC,EAAYxG,MAEb,KAAD,sCACT,kBAnCwB,mCAqCnBwG,EAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCkN,EAAMnG,QAAQG,KAAK,CACfC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRoU,KAAM,OAId,OACI,uCACI,eAAC,cAAU,CACPtI,MAAO,CAAC,CAAEvM,MAAOiC,IACjB8N,KAAM,CAAE9P,KAAM,gBAElB,eAAC,SAAK,CAACgI,IAAK0F,IACZ,sBAAK3F,UAAU,SAAQ,SACnB,uBAAKA,UAAU,cAAa,UACxB,8BAAK/F,IACL,iCACKnC,EACA0K,KAAOU,EAAOF,4BAA4BP,OACvC,WAGR,uBAAKzC,UAAU,8BAA6B,UACxC,eAAC,cAAU,CACP8M,cAAe,CACX9U,MAAO,uBACPC,KAAM,mBACN+H,UAAW,sCAEfyI,KAAK,QACLhN,KAAK,SACLsR,MAAI,EACJC,IAAI,4DACJ3I,OAAO,8FACPrE,UAAU,SACViN,SAAU5C,IAGd,eAAC,UAAM,CACH9R,KAAK,SACLP,MAAOkC,EACPjC,KAAK,cACLiJ,QAASzB,EACTO,UAAU,0BACViJ,SAAkC,IAAxBc,EAAanO,SAE3B,eAAC,UAAM,CACHrD,KAAK,SACLP,MAAO8B,EACP7B,KAAK,aACL+H,UAAU,0BACViJ,SAAkC,IAAxBc,EAAanO,OACvBsF,QAASsL,YAMzB,eAAC,aAAS,CACN7L,MAAOoJ,EACP1C,arBsBK,4BqBrBLC,WAAS,EACTC,KAAM,EACNK,YAAU,EACVsF,UAAWjD,EAAqB,SAE/BE,EAAasB,KAAI,SAACC,EAAKyB,GAAK,OACzB,eAAC,UAAM,CAEH3F,MAAOkE,EAAIlE,MACXtD,OAAQwH,EAAIxH,OACZ5D,MAAO,CAAE4B,MAAO,SAHXiL,WC1Nd,SAASC,KAKnB,OAJHhO,qBAAU,WAER4C,OACD,IAEO,uCACI,eAAC6B,GAAO,IACR,sBAAK7D,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,sBAAqB,SAChC,eAAC8J,GAAe,WDOpCtH,KAAOoB,OAAO,M,aEcC,SAASyJ,KACpB,MACwDhP,oBAAS,GAAK,oBAA/DiP,EAAoB,KAAEC,EAAuB,OACIlP,oBAAS,GAAK,oBAA/DmP,EAAoB,KAAEC,EAAuB,KAC9C9H,EAAQxG,iBAAO,MAErBC,qBAAU,WAKNwD,EAAYtG,KAAKkH,MAAMnE,aAAaoE,QAAQ,kBAH7C,IA8CH,MACgCpF,mBAAS,CACrCqF,OAAQ,GACRC,eAAgB,GAChB+J,gBAAiB,GACjBC,kBAAmB,GACnBtM,OAAQ,GACRuM,YAAY,IACd,oBAPKjL,EAAQ,KAAEC,EAAW,KAS5B,EACwCvE,mBAAS,CAC7CwP,sBAAkB,OAClBC,qBAAiB,OACjBC,4BAAwB,SAC1B,oBAJKC,EAAY,KAAEC,EAAe,KAsE9BvO,EAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCkN,EAAMnG,QAAQG,KAAK,CACfC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRoU,KAAM,OAId,OACI,uBAAK7M,UAAU,SAAQ,UACnB,eAAC,SAAK,CAACC,IAAK0F,IACZ,uBAAK3F,UAAU,cAAa,UACxB,8BvBFW,sBuBGX,uBAAKA,UAAU,UAAS,UACpB,uBAAKA,UAAU,UAAS,UACpB,wBAAOS,QAAQ,SAAQ,SAAEtH,IACzB,eAAC,aAAS,CACN+E,GAAG,SACHzC,KAAK,SACLlD,KAAK,OACL0Q,SAAUqE,EACV3M,MAAOgC,EAASe,OAChB7C,SAAU,SAACC,GACP8B,EAAY,6BACLD,GAAQ,IACXe,OAAQ5C,EAAEC,OAAOJ,UAGzBX,WAAY2C,EAASe,QAAU,eAEjCf,EAASe,QACP,wBACIxF,GAAG,cACH8B,UAAU,oBAAmB,SAE5B5G,OAIb,uBAAK4G,UAAU,UAAS,UACpB,wBAAOS,QAAQ,iBAAgB,SAC1BpH,IAEL,eAAC,aAAS,CACN6E,GAAG,iBACHzC,KAAK,iBACLlD,KAAK,OACL0Q,SAAUqE,EACV3M,MAAOgC,EAASgB,eAChB9C,SAAU,SAACC,GACP8B,EAAY,6BACLD,GAAQ,IACXgB,eAAgB7C,EAAEC,OAAOJ,UAGjCX,WAAY2C,EAASgB,gBAAkB,eAEzChB,EAASgB,gBACP,wBACIzF,GAAG,sBACH8B,UAAU,oBAAmB,SAE5B1G,OAIb,uBAAK0G,UAAU,UAAS,UACpB,wBAAOS,QAAQ,kBAAiB,SAC3BlH,IAEL,eAAC,aAAS,CACN2E,GAAG,kBACHzC,KAAK,kBACLlD,KAAK,OACL0Q,SAAUqE,EACV3M,MAAOgC,EAAS+K,gBAChB7M,SAAU,SAACC,GACP8B,EAAY,6BACLD,GAAQ,IACX+K,gBAAiB5M,EAAEC,OAAOJ,eAK1C,uBAAKX,UAAU,UAAS,UACpB,wBAAOS,QAAQ,oBAAmB,SAC7BjH,IAEL,eAAC,YAAQ,CACL0E,GAAG,oBACHzC,KAAK,oBACLoN,gBAAc,EACdC,eAAa,EACboF,UAAQ,EACRnF,UAAU,YACVJ,WAAW,WACXK,YACIrG,EAASgL,kBAAkBxR,MAAM,KAAK,GAE1C8M,SAAUqE,EACV3M,MAAOgC,EAASgL,kBAChB9M,SAAU,SAACC,GACP,IAAIiK,EAAS5J,GAAYgN,qBACrBrN,EAAEC,OAAOJ,OAEbiC,EAAY,6BACLD,GAAQ,IACXgL,kBAAmB5C,SAI7BpI,EAASgL,mBACP,wBACIzP,GAAG,yBACH8B,UAAU,oBAAmB,SAE5BvG,OAIb,uBAAKuG,UAAU,UAAS,UACpB,wBAAOS,QAAQ,SAAQ,SAAE/H,IACzB,eAAC,aAAS,CACNwF,GAAG,SACHzC,KAAK,SACLlD,KAAK,SACL0Q,SAAUqE,EACV3M,MAAOgC,EAAStB,OAChBR,SAAU,SAACC,GACP8B,EAAY,6BACLD,GAAQ,IACXtB,OAAQP,EAAEC,OAAOJ,UAGzBX,WAAY2C,EAAStB,QAAU,eAEjCsB,EAAStB,QACP,wBACInD,GAAG,cACH8B,UAAU,oBAAmB,SAE5BtG,UAKjB,uBAAKsG,UAAU,gBAAe,UAC1B,eAAC,UAAM,CACHhI,MAAO2B,EACPqG,UAAU,uBACVkB,QAAS,WACLqM,GAAyBD,MAGjC,eAAC,UAAM,CACHtV,MvBpIQ,4BuBqIRgI,UAAU,0BACViJ,SAAUqE,EACVpM,QA9NM,WAAO,IA/BdkN,EAiCX1K,EAKAf,EALAe,OACAC,EAIAhB,EAJAgB,eACA+J,EAGA/K,EAHA+K,gBACAC,EAEAhL,EAFAgL,kBACAtM,EACAsB,EADAtB,OAGAF,GAAYkN,iBACR3K,EACAC,EACA+J,EACAC,EACAtM,IA7CO+M,EAgDDzL,EA/CdpB,GAAe+M,UAAUF,GACpB3M,MAAK,SAACC,GACHkB,EAAYlB,EAASE,MACrBvC,aAAasC,QAAQ,aAAcrF,KAAKC,UAAUoG,IAClDjD,EAAY9G,MAEfkJ,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,EAAYxG,OAyChBwG,EAAY7G,YA+MZ,uBAAKmH,UAAU,cAAa,UACxB,0DACA,uBAAKA,UAAU,UAAS,UACpB,uBAAKA,UAAU,UAAS,UACpB,wBAAOS,QAAQ,sBAAkB,SvB7IzB,0BuBgJR,eAAC,YAAQ,CACLvC,GAAG,sBACHzC,KAAK,sBACLuF,YAAU,EACVC,UAAU,EACVL,UAAU,KACVqI,SAAUuE,EACV7M,MAAOqN,EAAaH,sBACpBhN,SAAU,SAACC,GACPmN,EAAgB,6BACTD,GAAY,IACfH,sBAAkB/M,EAAEC,OAAOJ,aAIrCqN,EAAaH,uBACX,wBACI3P,GAAG,2BACH8B,UAAU,oBAAmB,SvBjK9B,sDuBuKX,uBAAKA,UAAU,UAAS,UACpB,wBAAOS,QAAQ,qBAAiB,SvBvK9B,yBuB0KF,eAAC,YAAQ,CACLvC,GAAG,qBACHzC,KAAK,qBACLuF,YAAU,EACVC,UAAU,EACVL,UAAU,KACVqI,SAAUuE,EACV7M,MAAOqN,EAAaF,qBACpBjN,SAAU,SAACC,GACPmN,EAAgB,6BACTD,GAAY,IACfF,qBAAiBhN,EAAEC,OAAOJ,aAIpCqN,EAAaF,sBACX,wBACI5P,GAAG,0BACH8B,UAAU,oBAAmB,SvB3LpC,qDuBiML,uBAAKA,UAAU,UAAS,UACpB,wBAAOS,QAAQ,4BAAwB,SvBjM/B,iCuBoMR,eAAC,YAAQ,CACLvC,GAAG,4BACHzC,KAAK,4BACLuF,YAAU,EACVC,UAAU,EACVL,UAAU,KACVqI,SAAUuE,EACV7M,MAAOqN,EAAaD,4BACpBlN,SAAU,SAACC,GACPmN,EAAgB,6BACTD,GAAY,IACfD,4BAAwBjN,EAAEC,OAAOJ,aAI3CqN,EAAaD,6BACX,wBACI7P,GAAG,iCACH8B,UAAU,oBAAmB,SvBrN9B,wDuB4Nf,uBAAKA,UAAU,gBAAe,UAC1B,eAAC,UAAM,CACHhI,MAAO2B,EACPqG,UAAU,uBACVkB,QAAS,WAhRzBuM,GAAyBD,GAErBS,EADAT,EACgB,CACZK,sBAAkB,GAClBC,qBAAiB,GACjBC,4BAAwB,IAGZ,CACZF,sBAAkB,OAClBC,qBAAiB,OACjBC,4BAAwB,YAyQpB,eAAC,UAAM,CACH/V,MvB3OA,2BuB4OAgI,UAAU,0BACViJ,SAAUuE,EACVtM,QA9SU,WAAO,IACzB2M,EACJG,EADIH,sBAAkBC,EACtBE,EADsBF,qBAAiBC,EACvCC,EADuCD,4BAGvC5M,GAAYoN,wBACRV,EACAC,EACAC,IAGAD,IAAoBC,EA5FhC,SAAwB,GAIpB,IAHAF,EAAgB,EAAhBA,sBACAC,EAAe,EAAfA,qBACAC,EAAsB,EAAtBA,4BAEAxM,GAAeiN,eACX7L,EAAStB,OACTwM,EACAC,EACAC,GAECtM,MAAK,SAACC,GACCA,EAASE,MACTlC,EAAY3G,GACZsG,aAAaI,QACbtH,OAAOC,SAAW,MAElBc,EAAuBT,YvB4JnB,oDuB3JJiH,EAAYxG,OAGnB4I,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,EAAYxG,MAsEZsV,CAAeR,GAKnBtO,EAAY1G,e,sBCnGT,SAASyV,KACpB,IAAIC,EAAY,CACZhL,OAAQ,GACRC,eAAgB,GAChB+J,gBAAiB,GACjBC,kBAAmB,GACnBtM,OAAQ,GACRuM,YAAY,GACd,EAEwBvP,mBAAS,IAAG,oBAA/BsQ,EAAK,KAAEC,EAAQ,OACcvQ,oBAAS,GAAM,oBAA5CwQ,EAAU,KAAEC,EAAa,OACgBzQ,oBAAS,GAAM,oBAAxD0Q,EAAgB,KAAEC,EAAmB,OACF3Q,mBAAS,MAAK,oBAAjD4Q,EAAa,KAAEC,EAAgB,OACE7Q,mBAAS,IAAG,oBAA7C8Q,EAAY,KAAEC,EAAe,OACZ/Q,mBAASqQ,GAAU,oBAApCN,EAAI,KAAEiB,EAAO,OACoBhR,oBAAS,GAAM,oBAAhDiR,EAAY,KAAEC,EAAe,OACElR,oBAAS,GAAM,oBAA9CmR,EAAW,KAAEC,EAAc,OACcpR,mBAAS,IAAG,oBAArDqR,GAAgB,KAAEC,GAAmB,KACtChK,GAAQxG,iBAAO,MACfyQ,GAAKzQ,iBAAO,MAMlB,SAAS4H,KACLxF,GAAewF,SACVtF,MAAK,SAACC,GACHkN,EAASlN,EAASE,SAErBE,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,GAAYxG,MAXxBkG,qBAAU,WACN2H,OACD,IAsEH,IAAM8I,GAAU,WACZR,EAAQX,GACRI,GAAc,GACdS,GAAgB,IAGdO,GAAa,WACfhB,GAAc,IAGZiB,GAAuB,WACzBf,GAAoB,IAGlBgB,GAAkB,WAAH,OAASP,GAAgBD,IAiDxCrH,GAAY,WACdyH,GAAGpQ,QAAQ2I,aAGT8H,GAAgB,SAAC7B,GAnFvB,IAA2B7S,IAoFL6S,EAAK/M,OAnFvBE,GAAe0O,cAAc1U,GACxBkG,MAAK,SAACC,GACCA,EAASE,MACT+N,GAAoBjO,EAASE,MAC7BoO,KACAtQ,GAAYzG,IAEZyG,GAAYxG,MAGnB4I,OAAM,SAACC,GACJrC,GAAYxG,MAyEpByM,GAAMnG,QAAQC,SA0CZC,GAAc,SAAH,GAAsC,IAAhCnH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAChCkN,GAAMnG,QAAQG,KAAK,CACfC,SAAUrH,EACVsH,QAASrH,EACTsH,OAAQrH,EACRoU,KAAM,OAkDRqD,GACF,gBAAC,IAAMC,SAAQ,WACX,eAAC,UAAM,CACHnY,MxBrLM,WwBsLNC,KAAK,cACL+H,UAAU,gBACVkB,QAAS4O,KAEb,eAAC,UAAM,CACH9X,MAAO8B,EACP7B,KAAK,cACL+H,UAAU,gBACVkB,QAlKK,WAAO,IAEhBwC,EAKA0K,EALA1K,OACAC,EAIAyK,EAJAzK,eACA+J,EAGAU,EAHAV,gBACAC,EAEAS,EAFAT,kBACAtM,EACA+M,EADA/M,OAGAF,GAAYkN,iBACR3K,EACAC,EACA+J,EACAC,EACAtM,IAGAiO,IA1FZ,SAAmBlB,GACf7M,GAAe+H,UAAU8E,GACpB3M,MAAK,SAACC,GACHiO,GAAoBjO,EAASE,MAC7BmF,KACArH,GAAY9G,MAEfkJ,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,GAAYxG,MAkFZoQ,CAAU8E,GACV4B,MA/EZ,SAAmB5B,GACf7M,GAAe+M,UAAUF,GACpB3M,MAAK,SAACC,GACHqF,KACArH,GAAY9G,MAEfkJ,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,GAAYxG,MAyEZoV,CAAUF,GAEdmB,GAAgB,IAEhB7P,GAAY7G,GAEhBiW,GAAc,GACdO,EAAQX,SA2IN0B,GACF,gBAAC,IAAMD,SAAQ,WACX,eAAC,UAAM,CACHnY,MAAO6B,EACP5B,KAAK,cACL+H,UAAU,gBACVkB,QAAS6O,KAEb,eAAC,UAAM,CACH/X,MAAO4B,EACP3B,KAAK,cACL+H,UAAU,gBACVkB,QA1IO,WAzFnB,IAAmB3F,IA0FL6S,EAAK/M,OAzFfE,GAAe8O,UAAU9U,GACpBkG,MAAK,SAACC,GACCA,EAASE,MACTmF,KACArH,GAAY5G,IAEZ4G,GAAYxG,MAGnB4I,OAAM,SAACC,GACJuB,QAAQC,MAAMxB,GACdrC,GAAYxG,MA+EpB8V,GAAoB,GACpBK,EAAQX,SAuKNxK,GACF,sBAAKlE,UAAU,eAAc,SACzB,wBAAMA,UAAU,oBAAmB,UAC/B,oBAAGA,UAAU,iBACb,eAAC,aAAS,CACNzH,KAAK,SACLoI,MAAOwO,EACPmB,QAAS,SAACxP,GAAC,OAAKsO,EAAgBtO,EAAEC,OAAOJ,QACzCqI,YxBvKJ,mBwB6KZ,OACI,uBAAKhJ,UAAU,SAAQ,UACnB,eAAC,SAAK,CAACC,IAAK0F,KACZ,uBAAK3F,UAAU,cAAa,UACxB,8BxBhLG,sBwBiLH,uBAAKA,UAAU,OAAM,UACjB,eAAC,WAAO,CACJA,UAAU,SACVuQ,KAjDQ,WACxB,OACI,eAAC,IAAMJ,SAAQ,UACX,eAAC,UAAM,CACHnY,MxB1IG,gBwB2IHC,KAAK,aACL+H,UAAU,0BACVkB,QAAS2O,QA2CLW,MArCS,WACzB,OACI,eAAC,IAAML,SAAQ,UACX,eAAC,UAAM,CACHnY,MxBtJJ,kBwBuJIC,KAAK,iBACL+H,UAAU,WACVM,MAAO,CAAE0H,gBAAiB,mBAC1B9G,QAASiH,UA+BT,gBAAC,aAAS,CACNlI,IAAK2P,GACLjP,MAAOgO,EACPzB,UAAW+B,EACXwB,kBAAmB,SAAC3P,GAAC,OAAKoO,EAAiBpO,EAAEH,QAC7C+P,QAAQ,SACRpJ,WAAS,EACTC,KAAM,EACNoJ,kBAAkB,uGAClBC,0BxB9LhB,wDwB+LgBzB,aAAcA,EACdjL,OAAQA,GACRmD,aAAa,4BAAwB,UAErC,eAAC,UAAM,CAACG,MAAM,SAAStD,OAAO,SAASuD,UAAQ,IAC/C,eAAC,UAAM,CACHD,MAAM,iBACNtD,OAAO,kBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,kBACNtD,OAAO,mBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,oBACNtD,OAAO,sBACPwD,KA1HM,SAACmJ,GAC3B,OACI,eAAC,IAAMV,SAAQ,UACX,+BAAM3N,KAAOqO,EAAQlD,mBAAmBlL,OAAO,WAwHnCgF,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,SACNtD,OAAO,wBACPuD,UAAQ,IAEZ,eAAC,UAAM,CACHD,MAAM,aACNtD,OAAO,sBACPwD,KArJE,SAACmJ,GACvB,OACI,eAAC,IAAMV,SAAQ,UACVU,EAAQjD,WACL,eAAC,SAAK,CACFjN,MAAO/G,EACPgG,SAAS,UACTI,UAAU,WAGd,eAAC,SAAK,CAACW,MAAO9G,EAAOmG,UAAU,SAASJ,SAAS,gBA8I7C,eAAC,UAAM,CAACsE,OAAO,WAAWwD,KA9KnB,SAACmJ,GACxB,OACI,gBAAC,IAAMV,SAAQ,WACX,eAAC,UAAM,CACHlY,KAAK,eACL+H,UAAU,wCACVkB,QAAS,kBA/ER,SAACkN,GACdiB,EAAQ,gBAAKjB,IACbU,GAAc,GA6EagC,CAASD,MAE5B,eAAC,UAAM,CACH5Y,KAAK,cACL+H,UAAU,0CACVkB,QAAS,kBA/EC,SAACkN,GACvBiB,EAAQjB,GACRY,GAAoB,GA6EO+B,CAAkBF,MAErC,eAAC,UAAM,CACH5Y,KAAK,eACL+H,UAAU,oCACVkB,QAAS,kBAhEQ,SAAC2P,GAC9BlL,GAAMnG,QAAQG,KAAK,CACfC,SAAU,OACVG,QAAQ,EACRuM,QACI,uBAAKtM,UAAU,uBAAuBM,MAAO,CAAEiM,KAAM,KAAM,UACvD,uBAAKvM,UAAU,gBAAe,UAC1B,oBACIA,UAAU,6BACVM,MAAO,CAAEC,SAAU,UAEvB,8BxBvBM,sDwBwBN,6BxBtBhB,2FwBwBY,uBAAKP,UAAU,iBAAgB,UAC3B,sBAAKA,UAAU,QAAO,SAClB,eAAC,UAAM,CACHzH,KAAK,SACLP,MAAO4B,EACPoG,UAAU,mBACVkB,QAAS,kBAAM+O,GAAcY,QAGrC,sBAAK7Q,UAAU,QAAO,SAClB,eAAC,UAAM,CACHzH,KAAK,SACLP,MAAO6B,EACPmG,UAAU,kBACVkB,QAAS,WACLyE,GAAMnG,QAAQC,qBAmCfuR,CAAyBH,eAiKxC,eAAC,UAAM,CACHxI,QAASwG,EACTvO,MAAO,CAAE4B,MAAO,SAChBgC,OxBpOH,sBwBqOG+M,OAAK,EACLjR,UAAU,UACVkR,OAAQhB,GACR1H,OAAQsH,GAAW,SAEnB,uBAAK9P,UAAU,UAAS,UACpB,uBAAKA,UAAU,UAAS,UACpB,wBAAOS,QAAQ,SAAQ,SAAEtH,IACzB,eAAC,aAAS,CACN+E,GAAG,SACHzC,KAAK,SACLlD,KAAK,OACLoI,MAAOyN,EAAK1K,OACZ7C,SAAU,SAACC,GACPuO,EAAQ,6BACDjB,GAAI,IACP1K,OAAQ5C,EAAEC,OAAOJ,UAGzBX,WAAYoO,EAAK1K,QAAU,eAE7B0K,EAAK1K,QACH,wBACIxF,GAAG,cACH8B,UAAU,oBAAmB,SAE5B5G,OAIb,uBAAK4G,UAAU,UAAS,UACpB,wBAAOS,QAAQ,iBAAgB,SAC1BpH,IAEL,eAAC,aAAS,CACN6E,GAAG,iBACHzC,KAAK,iBACLlD,KAAK,OACLoI,MAAOyN,EAAKzK,eACZ9C,SAAU,SAACC,GACPuO,EAAQ,6BACDjB,GAAI,IACPzK,eAAgB7C,EAAEC,OAAOJ,UAGjCX,WACKoO,EAAKzK,gBAAkB,eAG9ByK,EAAKzK,gBACH,wBACIzF,GAAG,sBACH8B,UAAU,oBAAmB,SAE5B1G,OAIb,uBAAK0G,UAAU,UAAS,UACpB,wBAAOS,QAAQ,kBAAiB,SAC3BlH,IAEL,eAAC,aAAS,CACN2E,GAAG,kBACHzC,KAAK,kBACLlD,KAAK,OACLoI,MAAOyN,EAAKV,gBACZ7M,SAAU,SAACC,GACPuO,EAAQ,6BACDjB,GAAI,IACPV,gBAAiB5M,EAAEC,OAAOJ,eAK1C,uBAAKX,UAAU,UAAS,UACpB,wBAAOS,QAAQ,oBAAmB,SAC7BjH,IAEL,eAAC,YAAQ,CACL0E,GAAG,oBACHzC,KAAK,oBACLoN,gBAAc,EACdC,eAAa,EACbC,UAAU,YACVmF,UAAQ,EACRlF,YACIoF,EAAKT,kBAAkBxR,MAAM,KAAK,GAEtCwM,WAAW,UACXhI,MAAOyN,EAAKT,kBACZ9M,SAAU,SAACC,GACP,IAAIiK,EACA5J,GAAYgN,qBACRrN,EAAEC,OAAOJ,OAEjB0O,EAAQ,6BACDjB,GAAI,IACPT,kBAAmB5C,SAI7BqD,EAAKT,mBACH,wBACIzP,GAAG,yBACH8B,UAAU,oBAAmB,SAE5BvG,OAIb,uBAAKuG,UAAU,UAAS,UACpB,wBAAOS,QAAQ,SAAQ,SAAE/H,IACzB,eAAC,aAAS,CACNwF,GAAG,SACHzC,KAAK,SACLlD,KAAK,QACLoI,MAAOyN,EAAK/M,OACZR,SAAU,SAACC,GACPuO,EAAQ,6BACDjB,GAAI,IACP/M,OAAQP,EAAEC,OAAOJ,UAGzBX,WAAYoO,EAAK/M,QAAU,eAE7B+M,EAAK/M,QACH,wBACInD,GAAG,cACH8B,UAAU,oBAAmB,SAE5BtG,OAIb,uBAAKsG,UAAU,wBAAuB,UAClC,wBAAOS,QAAQ,aAAY,SxB5WlC,yBwB+WO,wBACA,eAAC,eAAW,CACRvC,GAAG,aACHzC,KAAK,aACL0N,QAASiF,EAAKR,WACd/M,SAAU,SAACC,GAAC,OACRuO,EAAQ,6BACDjB,GAAI,IACPR,YAAaQ,EAAKR,yBAQ1C,eAAC,UAAM,CACHvF,QAAS0G,EACTzO,MAAO,CAAE4B,MAAO,SAChBgC,OxBjYC,wBwBkYD+M,OAAK,EACLC,OAAQd,GACR5H,OAAQuH,GAAqB,SAE7B,sBAAK/P,UAAU,uBAAsB,SxBpYrD,gEwByYY,gBAAC,UAAM,CACHqI,QAASmH,EACTlP,MAAO,CAAE4B,MAAO,SAChBgC,OAAQ,sBACRoE,WAAW,EACXE,OAAQwH,GACRkB,OACI,eAAC,UAAM,CACHlZ,MAAM,aACNgI,UAAU,mBACVkB,QAAS8O,KAEhB,UAED,oDACqB,IACjB,0CAAUN,GAAiBhM,OAAM,YAAIgM,GAAiB/L,eAAc,YAAI+L,GAAiBhC,sBAE7F,wDACyB,IACrB,0CAAUlL,KAAOkN,GAAiB/B,mBAAmBlL,OAAO,aAEhE,4CACY,0CAAUiN,GAAiBrO,aAEvC,yDACuB,IACnB,0CAAUqO,GAAiBpO,cAC3B,6BACI,2GCtnBjB,SAAS6P,KAAmB,IAAD,EACN9S,mBAAS,CACrCuP,YAAY,IACd,oBAFKjL,EAAQ,KAAEC,EAAW,KAY5B,OARAxD,qBAAU,WAKNwD,EAAYtG,KAAKkH,MAAMnE,aAAaoE,QAAQ,kBAH7C,IAOC,uCACI,eAAC,cAAU,CACPc,MAAO,CAAC,CAAEvM,MzBiMJ,WyBhMN+P,KAAM,CAAE9P,KAAM,gBAElB,sBAAK+H,UAAU,SAAQ,SACnB,sBAAKA,UAAU,QAAO,SAClB,gBAAC,WAAO,WACJ,eAAC,YAAQ,CACLkE,OzB2LH,mByB1LGkN,SAAS,mBAAkB,SAE3B,eAAC/D,GAAY,MAEhB1K,EAASiL,WACN,eAAC,YAAQ,CACL1J,OzBqLV,oByBpLUkN,SAAS,qBAAoB,SAE7B,eAAC3C,GAAS,MAGd,sBAAKzO,UAAU,sBC3C5B,SAASqR,KAKnB,OAJDjS,qBAAU,WAEN4C,OACD,IAEG,uCACE,eAAC6B,GAAO,IACR,sBAAK7D,UAAU,kBAAiB,SAC5B,sBAAKA,UAAU,sBAAqB,SAChC,eAACmR,GAAe,WCJrB,SAASG,KACpB,OACI,sBAAKtR,UAAU,6CAA4C,SACvD,sBAAKA,UAAU,UAAS,SACpB,uBAAKA,UAAU,gBAAe,UAC1B,sBACIE,IAAKC,GACLC,IAAK/H,EACLgI,OAAO,UAEX,sBAAKC,MAAO,CAAEC,SAAU,MAAOmI,MAAO,WAAY,S3BwHhD,Q2BrHF,sBAAKpI,MAAO,CAAEC,SAAU,MAAOmI,MAAO,WAAY,S3BsHhD,4B2BnHF,sBAAKpI,MAAO,CAAEC,SAAU,QAASmI,MAAO,WAAY,S3BqHhE,+E4B7HO,SAAS6I,KACpB,OACI,eAAC,KAAM,UACH,gBAAC,KAAM,WACH,eAAC,KAAK,CAACC,KAAK,IAAIC,OAAK,EAACC,UAAWtT,KACjC,eAAC,KAAK,CAACoT,KAAK,UAAUE,UAAWlN,KACjC,eAAC,KAAK,CAACgN,KAAK,YAAYE,UAAWnI,KACnC,eAAC,KAAK,CAACiI,KAAK,UAAUE,UAAW7H,KACjC,eAAC,KAAK,CAAC2H,KAAK,eAAeE,UAAWC,KACtC,eAAC,KAAK,CAACH,KAAK,UAAUE,UAAWL,KACjC,eAAC,KAAK,CAACK,UAAWJ,UJmBlC9O,KAAOoB,OAAO,MIhCdgO,oBAAU,K5BdmB,CACzBC,eAAgB,EAChBC,SAAU,CACN,UACA,QACA,SACA,eACA,SACA,UACA,aAEJC,cAAe,CAAC,MAAO,MAAO,MAAO,SAAO,MAAO,MAAO,UAC1DC,YAAa,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7CC,WAAY,CACR,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,gBAAiB,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MAAO,MACP1S,MAAO,QACP4E,OAAQ,KACRC,OAAQ,KACR8N,OAAQ,QACRC,OAAQ,QACRC,OAAQ,WACRC,eAAgB,wBAChBC,KAAM,WACNC,OAAQ,SACRC,OAAQ,W4BpCZ9O,iBAAO,MChBP,IAYe+O,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpR,MAAK,YAAkD,IAA/CqR,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,eAAC,IAAMC,WAAU,UACf,eAAC9B,GAAG,MAEN+B,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90802652.chunk.js","sourcesContent":["// ? Locale\r\nexport const localLocation = {\r\n    firstDayOfWeek: 1,\r\n    dayNames: [\r\n        \"domingo\",\r\n        \"lunes\",\r\n        \"martes\",\r\n        \"miércoles\",\r\n        \"jueves\",\r\n        \"viernes\",\r\n        \"sábado\",\r\n    ],\r\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\r\n    dayNamesMin: [\"D\", \"L\", \"M\", \"Mi\", \"J\", \"V\", \"S\"],\r\n    monthNames: [\r\n        \"enero\",\r\n        \"febrero\",\r\n        \"marzo\",\r\n        \"abril\",\r\n        \"mayo\",\r\n        \"junio\",\r\n        \"julio\",\r\n        \"agosto\",\r\n        \"septiembre\",\r\n        \"octubre\",\r\n        \"noviembre\",\r\n        \"diciembre\",\r\n    ],\r\n    monthNamesShort: [\r\n        \"ene\",\r\n        \"feb\",\r\n        \"mar\",\r\n        \"abr\",\r\n        \"may\",\r\n        \"jun\",\r\n        \"jul\",\r\n        \"ago\",\r\n        \"sep\",\r\n        \"oct\",\r\n        \"nov\",\r\n        \"dic\",\r\n    ],\r\n    today: \"Hoy\",\r\n    clear: \"Claro\",\r\n    accept: \"Si\",\r\n    reject: \"No\",\r\n    choose: \"Elija\",\r\n    upload: \"Subir\",\r\n    cancel: \"Cancelar\",\r\n    passwordPrompt: \"Ingrese contraseña\",\r\n    weak: \"Débil\",\r\n    medium: \"Normal\",\r\n    strong: \"Fuerte\",\r\n};\r\n\r\n// ? HomeTemplate.jsx\r\nexport const backgroundWallpaper = \"Fondo de portada\",\r\n    txtWelcome = \"Hola, bienvenido(a) de nuevo\",\r\n    txtLastQueryPatent = \"Última búsqueda de patentes: \",\r\n    txtLastQueryBrand = \"Última búsqueda de marcas: \",\r\n    txtLastQueryEjemplares = \"Última búsqueda de ejemplares extraordinarios: \",\r\n    txtLastUpdateClients = \"Última actualización en expedientes: \",\r\n    txtBadgeClients =\"Ingresar expedientes para poder realizar consultas\";\r\n\r\n// ? MenuTop.jsx\r\nexport const txtConfirmExit = \"¿Estás seguro de salir del sistema?\",\r\n    txtExit = \"Salir\",\r\n    itemsMenuTop = [\r\n        {\r\n            label: \"Inicio\",\r\n            icon: \"pi pi-fw pi-home\",\r\n            command: () => {\r\n                window.location = \"/inicio\";\r\n            },\r\n        },\r\n        {\r\n            label: \"Patentes\",\r\n            icon: \"pi pi-fw pi-file\",\r\n            command: () => {\r\n                window.location = \"/patentes\";\r\n            },\r\n        },\r\n        {\r\n            label: \"Marcas\",\r\n            icon: \"pi pi-fw pi-globe\",\r\n            command: () => {\r\n                window.location = \"/marcas\";\r\n            },\r\n        },\r\n        {\r\n            label: \"Expedientes\",\r\n            icon: \"pi pi-fw pi-id-card\",\r\n            command: () => {\r\n                window.location = \"/expedientes\";\r\n            },\r\n        },\r\n        {\r\n            label: \"Perfil\",\r\n            icon: \"pi pi-fw pi-user\",\r\n            command: () => {\r\n                window.location = \"/perfil\";\r\n            },\r\n        },\r\n    ],\r\n    txtAltLogoImg = \"Logo Novopatent\",\r\n    txtLogoutButton = \"Salir\";\r\n\r\n// ? Login.jsx\r\nexport const txtCodeMustBe = \"El código es de 8 caracteres\",\r\n    txtEmailValid = \"El email no debe estar vacío y debe ser válido\",\r\n    txtPasswordValid = \"La contraseña no debe estar vacía\",\r\n    txtCodeValid = \"El código no debe estar vacío o ser menor a 8 caracteres\",\r\n    txtMessageSucces = {\r\n        type: \"success\",\r\n        title: \"El código es correcto\",\r\n        description: \"Redirigiendo...\",\r\n    },\r\n    txtMessageError = {\r\n        type: \"error\",\r\n        title: \"El código es incorrecto\",\r\n        description: \"Por favor verifíquelo nuevamente\",\r\n    },\r\n    txtLogin = \"Inicio de sesión\",\r\n    txtFillFields = \"Favor de llenar todos los campos\",\r\n    txtEmailLabel = \"Correo electrónico:\",\r\n    txtPasswordLabel = \"Contraseña:\",\r\n    txtPleaseWait = \"Por favor espere...\",\r\n    txtLoginButton = \"Iniciar sesión\",\r\n    txtCodeVerification =\r\n        \"Ingrese el código de verificación que ha sido enviado a su correo electrónico\",\r\n    txtCodeVerificationLabel = \"Código de verificación\",\r\n    txtCancelButton = \"Cancelar\",\r\n    txtVerifyButton = \"Verificar\",\r\n    txtMessageLoginError = {\r\n        type: \"error\",\r\n        title: \"Correo electrónico y/o contraseña incorrectos\",\r\n        description: \"Por favor verifíquelos nuevamente\",\r\n    };\r\n\r\n// ? ErrorPage.jsx\r\nexport const txt404 = \"404\",\r\n    txtPageNotFound = \"Página no encontrada\",\r\n    txtPageError =\r\n        \"La página que estás buscando no existe o ha ocurrido un error\";\r\n\r\n// ? ProfileTemplate.jsx\r\nexport const txtMessageUserSuccess = {\r\n        type: \"success\",\r\n        title: \"Usuario guardado correctamente\",\r\n        description: \"Los datos del usuario se han actualizado\",\r\n    },\r\n    txtMessageUserError = {\r\n        type: \"error\",\r\n        title: \"Campos no válidos\",\r\n        description:\r\n            \"Algunos campos tienen caracteres especiales o están vacíos\",\r\n    },\r\n    txtMessageUserDelete = {\r\n        type: \"success\",\r\n        title: \"Usuario eliminado correctamente\",\r\n        description: \"Los datos del usuario se han actualizado\",\r\n    },\r\n    txtMessageUserPasswordSuccess = {\r\n        type: \"success\",\r\n        title: \"Contraseña guardada correctamente\",\r\n        description: \"La contraseña del usuario se han actualizado\",\r\n    },\r\n    txtMessageUserPasswordError = {\r\n        type: \"error\",\r\n        title: \"Las contraseñas no coinciden o están vacías\",\r\n        description: \"Verificar los campos de las contraseñas\",\r\n    },\r\n    txtMessageUserPasswordReset = {\r\n        type: \"success\",\r\n        title: \"Contraseña restablecida correctamente\",\r\n        description: \"Se ha cambiado la contraseña\",\r\n    },\r\n    txtMessageErrorGeneral = {\r\n        type: \"error\",\r\n        title: \"No se ejecutó la operación\",\r\n        description: \"Intentar de nuevo\",\r\n    },\r\n    txtTitlePersonalData = \"Tu información\",\r\n    txtNameLabel = \"Nombre:\",\r\n    txtNameHelp = \" El nombre no debe estar vacío y debe ser válido\",\r\n    txtFistSurnameLabel = \"Primer apellido:\",\r\n    txtFistSurnameHelp =\r\n        \" El primer apellido no debe estar vacío y debe ser válido\",\r\n    txtSecondSurnameLabel = \"Segundo apellido:\",\r\n    txtDateOfBirthLabel = \"Fecha de nacimiento:\",\r\n    txtDateOfBirthHelp =\r\n        \"La fecha de nacimiento no debe estar vacía y debe ser válida\",\r\n    txtEmailHelp =\r\n        \"El correo electrónico no debe estar vacío y debe ser válido\",\r\n    txtDesactiveActiveFieldsLabel = \"Habilitar/Deshabilitar campos\",\r\n    txtUpdateInformationLabel = \"Actualizar información\",\r\n    txtUpdatePassword = \"Actualizar contraseña\",\r\n    txtPasswordCurrentlyLabel = \"Contraseña actual:\",\r\n    txtPasswordCurrentlyHelp = \"La contraseña actual no debe estar vacía\",\r\n    txtNewPasswordLabel = \"Nueva contraseña:\",\r\n    txtNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\r\n    txtRepeatNewPasswordLabel = \"Repetir nueva contraseña:\",\r\n    txtRepeatNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\r\n    txtRestartPasswordTitle = \"¿Restablecer la contraseña de este usuario?\",\r\n    txtRestartPasswordContent =\r\n        \" Se le enviará un correo electrónico a esa persona con la nueva contraseña\",\r\n    txtYES = \"Si\",\r\n    txtNO = \"No\",\r\n    txtSaveButton = \"Guardar\",\r\n    txtNewUserButton = \"Nuevo usuario\",\r\n    txtExport = \"Exportar en CSV\",\r\n    txtSearch = \"Buscar...\",\r\n    txtTitleCrud = \"Tabla de usuarios\",\r\n    txtFooterTableLabel =\r\n        \"Mostrando {first} a {last} de {totalRecords} usuarios\",\r\n    txtUserDetails = \"Detalles de usuario\",\r\n    txtSuperAdminLabel = \"Super administrador:\",\r\n    txtDeleteUserTitle = \"¿Eliminar usuario?\",\r\n    txtDeleteUserContent =\r\n        \"El usuario se eliminará permanente de la aplicación\",\r\n    txtTitleProfile = \"Perfil\",\r\n    txtTabPersonalData = \"Datos personales\",\r\n    txtTabUserTable = \"Tabla de usuarios\",\r\n    txtCheckPasswords = \"Verifica que la contraseña actual sea correcta\"\r\n\r\n//  ? ClientsTemplate.js\r\nexport const txtSmsLoading = [\r\n        \"Cargando\",\r\n        \"Espere a que los datos estén listos\",\r\n    ],\r\n    txtMessageClientsSaved = {\r\n        type: \"success\",\r\n        title: \"Expedientes guardados\",\r\n        description: \"Se han actualizado correctamente\",\r\n    },\r\n    txtTitleClients = \"Expedientes\",\r\n    txtClearButton = \"Limpiar datos\",\r\n    txtNoDataLabel = \"Sin ningún dato subido\",\r\n    txtClearMessages = \"Limpiar mensajes\";\r\n\r\n// ? SpecimensTemplate.jsx\r\n// ? PatentTemplate.jsx\r\n// ? BrandTemplate.jsx\r\nexport const txtExportButton = \"Exportar resultados\",\r\n    txtStartSearchButton = \"Iniciar con la búsqueda\",\r\n    txtNoData = \"No hay datos\",\r\n    txtTitleExtraordinaryExamples = \"Ejemplares extraordinarios\",\r\n    txtTitlePatents = \"Patentes\",\r\n    txtTitleBrands = \"Marcas\",\r\n    txtMessageNoClients = {\r\n        type: \"error\",\r\n        title: \"No hay expedientes registrados\",\r\n        description: \"Registra algunos para realizar búsquedas\",\r\n    },\r\n    txtMessageSearchSuccess = {\r\n        type: \"success\",\r\n        title: \"Búsqueda realizada con éxito\",\r\n        description: \"Revisa si hubo coincidencias con los registros\",\r\n    },\r\n    txtMessageSearchError = {\r\n        type: \"error\",\r\n        title: \"Ocurrió un error de conexión\",\r\n        description: \"Vuelve a intentarlo de nuevo\",\r\n    },\r\n    txtSubtitleBrand = \"Notificaciones de marcas\",\r\n    txtSubitlePatent1 = \"Notificaciones de patentes\",\r\n    txtSubitlePatent2 = \"Patentes, registros de modelos de utilidad y diseños industriales\",\r\n    txtSubitlePatent3 = \"Requisitos de forma y fondo, y abandonos notificados\",\r\n    txtLodaing = \"Realizando las búsquedas necesarias\",\r\n    txtStartSearch = \"Iniciar búsqueda\",\r\n    txtInstructionsSearch =\r\n        \"Puedes colocar alguna fecha en especifico o ignorar y continuar con la búsqueda regular\",\r\n    txtDateStartLabel = \"Fecha inicio:\",\r\n    txtDateEndLabel = \"Fecha fin:\",\r\n    txtNoDataSearch = \"No se encontraron coincidencias\",\r\n    txtDataSearch = \"Se encontraron coincidencias\"\r\n","/* eslint-disable no-useless-escape */\r\nconst CHARS =\r\n    \"áéíóúÁÉÍÓÚabcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ \";\r\nclass Validations {\r\n    validateEmail(email) {\r\n        const re =\r\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    validateNames(name) {\r\n        let flag = true;\r\n        if (name !== \"\") {\r\n            for (let i = 0; i < name.length; i++) {\r\n                if (CHARS.indexOf(name.charAt(i)) === -1) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    validateSecondSurname(surname) {\r\n        if (surname === \"\") {\r\n            return true;\r\n        } else {\r\n            return this.validateNames(surname);\r\n        }\r\n    }\r\n\r\n    convertAPIDate(date) {\r\n        let tempDate = date.split(\"T\")[0];\r\n        return tempDate.replaceAll(\"-\", \"/\");\r\n    }\r\n\r\n    convertInputDate(date) {\r\n        let tempDate = JSON.stringify(date);\r\n        let cutDate = tempDate.substring(1, tempDate.length - 1);\r\n        return this.convertAPIDate(cutDate);\r\n    }\r\n\r\n    convertOnlyInputDate(date) {\r\n        let tempDate = JSON.stringify(date);\r\n        return tempDate.substring(1, tempDate.length - 1);\r\n    }\r\n\r\n    validateDateStartEnd(dateStart, dateEnd) {\r\n        if (\r\n            dateStart.length === 10 &&\r\n            dateEnd.length === 10 &&\r\n            dateStart.split(\"/\").length === 3 &&\r\n            dateEnd.split(\"/\").length === 3\r\n        ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validateFormUser(name, first, second, dateBirth, email) {\r\n        if (\r\n            this.validateNames(name) &&\r\n            this.validateNames(first) &&\r\n            this.validateSecondSurname(second) &&\r\n            dateBirth !== \"\" &&\r\n            this.validateEmail(email)\r\n        )\r\n            return true;\r\n        else return false;\r\n    }\r\n\r\n    validatePassworsNoEmpty(curently, newPas, repeat){\r\n        return curently !== \"\" && newPas !== \"\" && repeat !== \"\"\r\n    }\r\n\r\n    validateSameEmail(userEmail, userEmailInfo){\r\n        return userEmail === userEmailInfo;\r\n    }\r\n}\r\n\r\nexport default new Validations();\r\n","export default __webpack_public_path__ + \"static/media/logonovopatent.015ff878.jpg\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://sivymoapi.herokuapp.com/novopatent-api\",\r\n    // baseURL: \"http://localhost:8080/novopatent-api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n});\r\n","import api from \"./api\";\r\n\r\nclass UsuarioService {\r\n    resetPassword(email) {\r\n        return api.put(`/reset-password/${email}`);\r\n    }\r\n\r\n    changePassword(email, oldPassword, newPassword) {\r\n        return api.put(\r\n            `/change-password/${email}/${oldPassword}/${newPassword}`\r\n        );\r\n    }\r\n\r\n    login(obj) {\r\n        return api.post(\"/login\", obj);\r\n    }\r\n\r\n    getAll() {\r\n        return api.get(\"/users\");\r\n    }\r\n\r\n    getOne(id) {\r\n        return api.get(`/users/${id}`);\r\n    }\r\n\r\n    insertOne(obj) {\r\n        return api.post(\"/users\", obj);\r\n    }\r\n\r\n    updateOne(obj) {\r\n        return api.put(\"/users\", obj);\r\n    }\r\n\r\n    removeOne(email) {\r\n        return api.delete(`/users/${email}`);\r\n    }\r\n}\r\n\r\nexport default new UsuarioService();\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../../assets/css/MyCustom.css\";\r\nimport Validations from \"../../utils/Validations\";\r\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Password } from \"primereact/password\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport {\r\n    txtAltLogoImg,\r\n    txtEmailValid,\r\n    txtPasswordValid,\r\n    txtLogin,\r\n    txtFillFields,\r\n    txtEmailLabel,\r\n    txtPasswordLabel,\r\n    txtLoginButton,\r\n    txtMessageLoginError,\r\n    txtMessageSucces,\r\n} from \"../../utils/Strings\";\r\nimport useLogin from \"../CustomHooks/useLogin\";\r\nimport UsuarioService from \"../../service/UsuarioService\";\r\n\r\nexport default function Login() {\r\n    const [emailInput, setEmailInput] = useState(\"\");\r\n    const [passwordInput, setPasswordInput] = useState(\"\");\r\n    const [emailErrorSms, setEmailErrorSms] = useState(\"\");\r\n    const [passwordErrorSms, setPasswordErrorSms] = useState(\"\");\r\n    const [emailUIError, setEmailUIError] = useState(\"p-d-block\");\r\n    const [passwordUIError, setPasswordUIError] = useState(\"p-d-block\");\r\n    const toastMessages = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useLogin();\r\n    }, []);\r\n\r\n    const login = () => {\r\n        if (emailInput.length <= 0 || !Validations.validateEmail(emailInput)) {\r\n            setEmailErrorSms(txtEmailValid);\r\n            setEmailUIError(\"p-invalid p-d-block\");\r\n        } else {\r\n            setEmailErrorSms(\"\");\r\n            setEmailUIError(\"p-d-block\");\r\n        }\r\n        if (passwordInput.length <= 0) {\r\n            setPasswordErrorSms(txtPasswordValid);\r\n            setPasswordUIError(\"p-invalid p-d-block\");\r\n        } else {\r\n            setPasswordErrorSms(\"\");\r\n            setPasswordUIError(\"p-d-block\");\r\n        }\r\n        if (\r\n            emailInput.length > 0 &&\r\n            passwordInput.length > 0 &&\r\n            Validations.validateEmail(emailInput)\r\n        ) {\r\n            let userLogin = {\r\n                correo: emailInput,\r\n                contrasena: passwordInput,\r\n            };\r\n            showMessage({\r\n                type: \"info\",\r\n                title: \"Cargando...\",\r\n                description: \"Por favor espere\",\r\n            });\r\n            UsuarioService.login(userLogin)\r\n                .then((response) => {\r\n                    clearMessages();\r\n                    localStorage.setItem(\r\n                        \"userActive\",\r\n                        JSON.stringify(response.data.usuario)\r\n                    );\r\n                    showMessage(txtMessageSucces);\r\n                    window.location = \"/inicio\";\r\n                })\r\n                .catch((err) => {\r\n                    clearMessages();\r\n                    showMessage(txtMessageLoginError);\r\n                });\r\n        }\r\n    };\r\n\r\n    const clearMessages = () => {\r\n        toastMessages.current.clear();\r\n    };\r\n\r\n    const showMessage = ({ type, title, description }) => {\r\n        toastMessages.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            sticky: true,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagelogin\">\r\n            <Toast ref={toastMessages} />\r\n            <div className=\"p-d-flex p-jc-center\">\r\n                <div className=\"p-col-12 p-md-6 p-lg-4 p-mt-6 card p-shadow-11\">\r\n                    <div className=\"p-col p-p-0 p-text-center\">\r\n                        <img\r\n                            src={logonovopatent}\r\n                            alt={txtAltLogoImg}\r\n                            height=\"70px\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-col\">\r\n                        <div\r\n                            className=\"p-text-center\"\r\n                            style={{ fontSize: \"2em\", fontWeight: \"500\" }}\r\n                        >\r\n                            {txtLogin}\r\n                        </div>\r\n                        <div className=\"p-text-center\">{txtFillFields}</div>\r\n\r\n                        <div className=\"p-mx-6 p-my-4\">\r\n                            <div className=\"p-fluid\">\r\n                                <div className=\"p-field\">\r\n                                    <label\r\n                                        htmlFor=\"emailInput\"\r\n                                        className=\"p-d-block\"\r\n                                    >\r\n                                        {txtEmailLabel}\r\n                                    </label>\r\n                                    <InputText\r\n                                        className={emailUIError}\r\n                                        id=\"emailInput\"\r\n                                        aria-describedby=\"emailInput-help\"\r\n                                        value={emailInput}\r\n                                        maxLength=\"50\"\r\n                                        onChange={(e) => {\r\n                                            setEmailInput(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                    <small\r\n                                        id=\"emailInput-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {emailErrorSms}\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid\">\r\n                                <div className=\"p-field\">\r\n                                    <label\r\n                                        htmlFor=\"passwordInput\"\r\n                                        className=\"p-d-block\"\r\n                                    >\r\n                                        {txtPasswordLabel}\r\n                                    </label>\r\n                                    <Password\r\n                                        id=\"passwordInput\"\r\n                                        toggleMask\r\n                                        className={passwordUIError}\r\n                                        feedback={false}\r\n                                        maxLength=\"50\"\r\n                                        value={passwordInput}\r\n                                        onChange={(e) => {\r\n                                            setPasswordInput(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                    <small\r\n                                        id=\"passwordInput-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {passwordErrorSms}\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-text-center\">\r\n                                <Button\r\n                                    label={txtLoginButton}\r\n                                    icon=\"pi pi-sign-in\"\r\n                                    className=\"p-button-success\"\r\n                                    onClick={login}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export default function useLogin() {\r\n    if (localStorage.key(\"userActive\") !== null) {\r\n        window.location = \"/inicio\";\r\n    }\r\n}\r\n","export default function useActive() {\r\n     if (localStorage.key(\"userActive\") === null) {\r\n         window.location = \"/\";\r\n     }\r\n }","import api from './api'\r\n\r\nclass ResumeService{\r\n     getResume(){\r\n          return api.get(\"/resume\")\r\n     }\r\n}\r\n\r\nexport default new ResumeService();","import React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/MyCustom.css\";\r\nimport { Badge } from \"primereact/badge\";\r\nimport { Avatar } from \"primereact/avatar\";\r\nimport {\r\n    backgroundWallpaper,\r\n    txtWelcome,\r\n    txtLastQueryPatent,\r\n    txtLastQueryBrand,\r\n    txtLastUpdateClients,\r\n    txtBadgeClients,\r\n} from \"../../utils/Strings\";\r\nimport ResumeService from \"../../service/ResumeService\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nfunction Logo() {\r\n    return (\r\n        <img\r\n            src=\"https://picsum.photos/1080/720\"\r\n            alt={backgroundWallpaper}\r\n            style={{\r\n                width: \"100%\",\r\n                height: \"300px\",\r\n                objectFit: \"cover\",\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nfunction LastDateCategory({ icon, last_search_info, last_date }) {\r\n    return (\r\n        <div className=\"p-col-12 p-md-6 p-xl-6\">\r\n            <div className=\"p-grid\">\r\n                <div>\r\n                    <Avatar icon={icon} className=\"p-mr-2\" size=\"xlarge\" />\r\n                </div>\r\n                <div className=\"p-col\">\r\n                    <div style={{ fontSize: \"1.2em\", fontWeight: \"lighter\" }}>\r\n                        {last_search_info}\r\n                    </div>\r\n                    <div style={{ fontSize: \"1.2em\", fontWeight: \"bold\" }}>\r\n                        {moment(last_date).format(\"LLLL\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function HomeTemplate() {\r\n    const [userInfo, setUserInfo] = useState({});\r\n\r\n    const [resume, setResume] = useState({\r\n        ultimaBusquedaPatentes: \"\",\r\n        ultimaBusquedaMarcas: \"\",\r\n        ultimaBusquedaEjemplares: \"\",\r\n        ultimaModificacionClientes: \"\",\r\n        clientesTotales: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getResume();\r\n        getPersonalInformation();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function getPersonalInformation() {\r\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\r\n    }\r\n\r\n    function getResume() {\r\n        ResumeService.getResume()\r\n            .then((response) => {\r\n                setResume({ ...response.data });\r\n                localStorage.setItem(\"resume\", JSON.stringify(response.data));\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col\">\r\n                    <Logo />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col-12 p-md-6 p-xl-6\">\r\n                    <h1>\r\n                        {txtWelcome}{\" \"}\r\n                        <i>{`${userInfo.nombre} ${userInfo.primerApellido}`}</i>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-xl-6\">\r\n                    <h1>\r\n                        <Badge\r\n                            value={`Existen ${resume.clientesTotales} expedientes guardados en la nube`}\r\n                            size=\"xlarge\"\r\n                            severity={\r\n                                resume.clientesTotales <= 0\r\n                                    ? \"danger\"\r\n                                    : \"success\"\r\n                            }\r\n                        />\r\n                    </h1>\r\n                    {resume.clientesTotales <= 0 && (\r\n                        <Badge\r\n                            value={txtBadgeClients}\r\n                            severity=\"warning\"\r\n                            className=\"p-mr-2\"\r\n                        ></Badge>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-mt-2\">\r\n                <LastDateCategory\r\n                    icon=\"pi pi-file\"\r\n                    last_search_info={txtLastQueryPatent}\r\n                    last_date={resume.ultimaBusquedaPatentes}\r\n                />\r\n                <LastDateCategory\r\n                    icon=\"pi pi-globe\"\r\n                    last_search_info={txtLastQueryBrand}\r\n                    last_date={resume.ultimaBusquedaMarcas}\r\n                />\r\n            </div>\r\n            <div className=\"p-grid p-mt-2\">\r\n                <LastDateCategory\r\n                    icon=\"pi pi-id-card\"\r\n                    last_search_info={txtLastUpdateClients}\r\n                    last_date={resume.ultimaModificacionClientes}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\r\nimport { Menubar } from \"primereact/menubar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { confirmDialog } from \"primereact/confirmdialog\";\r\nimport { txtConfirmExit, txtExit, txtAltLogoImg, txtLogoutButton } from \"../../utils/Strings\";\r\nimport {itemsMenuTop} from '../../utils/Strings'\r\n\r\nexport default function MenuTop() {\r\n    const confirmLogout = () => {\r\n        confirmDialog({\r\n            message: txtConfirmExit,\r\n            header: txtExit,\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            acceptClassName:\"p-button-success\",\r\n            rejectClassName: \"p-button-plain p-button-text\",\r\n            accept: () => {\r\n                localStorage.clear();\r\n                window.location= \"/\"\r\n            },\r\n            reject: () => {},\r\n        });\r\n    };\r\n\r\n    const start = (\r\n        <img\r\n            alt={txtAltLogoImg}\r\n            src={logonovopatent}\r\n            height=\"50\"\r\n            className=\"p-mr-2\"\r\n            onClick={() => { window.location = \"/inicio\"}}\r\n        />\r\n    );\r\n\r\n    const end = (\r\n        <Button\r\n            className=\"p-button-success\"\r\n            onClick={confirmLogout}\r\n            label={txtLogoutButton}\r\n            icon=\"pi pi-sign-out\"\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className=\"p-grid p-m-1\">\r\n            <div className=\"p-col\">\r\n                <div className=\"card\">\r\n                    <Menubar model={itemsMenuTop} start={start} end={end} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport useActive from '../CustomHooks/useActive'\r\nimport HomeTemplate from \"../templates/HomeTemplate\";\r\nimport MenuTop from \"../organisms/MenuTop\";\r\n\r\nexport default function HomePage() {\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useActive()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MenuTop />\r\n            <div className=\"p-grid p-d-flex\">\r\n                <div className=\"p-col-10 p-offset-1\">\r\n                    <HomeTemplate />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import api from \"./api\";\r\n\r\nclass ClienteService {\r\n     getAll(){\r\n          return api.get(\"/clients\");\r\n     }\r\n\r\n     insertOne(obj){\r\n          return api.post(\"/clientsOne\", obj);\r\n     }\r\n\r\n     insertTwo(obj){\r\n          return api.post(\"/clientsTwo\", obj);\r\n     }\r\n\r\n     removeAll(){\r\n          return api.delete(\"/clients\")\r\n     }\r\n}\r\n\r\nexport default new ClienteService();\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8081\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n});\r\n","import api from \"./apiScraping\";\r\n\r\nclass ScrapingService {\r\n    getPatentes(obj) {\r\n        return api.post(\"/patentes\", obj);\r\n    }\r\n\r\n    getMarcas(obj) {\r\n        return api.post(\"marcas\", obj);\r\n    }\r\n}\r\n\r\nexport default new ScrapingService();","import api from \"./api\";\r\n\r\nclass HistorialService {\r\n    insertOne(type) {\r\n        return api.post(`/history/${type}`);\r\n    }\r\n}\r\n\r\nexport default new HistorialService();\r\n","export const dark_sea_green = \"#81BA8E\",\r\n    brunswick_green = \"#1B4631\",\r\n    amazon =\"#467256\"\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { BreadCrumb } from \"primereact/breadcrumb\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport ClienteService from \"../../service/ClienteService\";\r\nimport ScrapingService from \"../../service/ScrapingService\";\r\nimport HistorialService from \"../../service/HistorialService\";\r\nimport {\r\n    txtNoData,\r\n    txtTitlePatents,\r\n    txtStartSearchButton,\r\n    txtExportButton,\r\n    txtClearButton,\r\n    txtMessageNoClients,\r\n    txtMessageSearchSuccess,\r\n    txtMessageSearchError,\r\n    txtSubitlePatent1,\r\n    txtSubitlePatent2,\r\n    txtSubitlePatent3,\r\n    txtLastQueryPatent,\r\n    txtSmsLoading,\r\n    txtLodaing,\r\n    txtStartSearch,\r\n    txtInstructionsSearch,\r\n    txtDateStartLabel,\r\n    txtDateEndLabel,\r\n    txtNoDataSearch,\r\n    txtDataSearch,\r\n    txtClearMessages\r\n} from \"../../utils/Strings\";\r\nimport { dark_sea_green } from \"../../utils/Colors\";\r\nimport Validations from \"../../utils/Validations\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nexport default function PatentTemplate() {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [resume, setResume] = useState({});\r\n    const [notificaciones, setNotificaciones] = useState([]);\r\n    const [patentesRegistros, setPatentesRegistros] = useState([]);\r\n    const [requisitos, setRequisitos] = useState([]);\r\n    const [history, setHistory] = useState(false);\r\n    const [filesReady, setFilesReady] = useState(false);\r\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\r\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\r\n    const toast = useRef(null);\r\n    const dt1 = useRef(null);\r\n    const dt2 = useRef(null);\r\n    const dt3 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getResume();\r\n    }, []);\r\n\r\n    const getResume = () => {\r\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\r\n    };\r\n\r\n    const confirmStartSearch = () => {\r\n        setFilesReady(false);\r\n        setInputFechaFin(Validations.convertInputDate(new Date()));\r\n        setInputFechaInicio(\r\n            Validations.convertAPIDate(resume.ultimaBusquedaPatentes)\r\n        );\r\n        if (resume.clientesTotales > 0) {\r\n            setShowDialog(true);\r\n        } else {\r\n            showMessage(txtMessageNoClients);\r\n        }\r\n    };\r\n\r\n    const startSearch = () => {\r\n        setHistory(true);\r\n        saveHistory();\r\n        setData();\r\n    };\r\n\r\n    function saveHistory() {\r\n        HistorialService.insertOne(\"1\")\r\n            .then((response) => {})\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    const setData = async () => {\r\n        let info = await getClients();\r\n        let objSend = {\r\n            fechaInicio: inputFechaInicio,\r\n            fechaFin: inputFechaFin,\r\n            datos: info,\r\n            descargado: filesReady,\r\n        };\r\n        await ScrapingService.getPatentes(objSend)\r\n            .then((resp) => {\r\n                viewData(resp.data);\r\n                showMessage(txtMessageSearchSuccess);\r\n            })\r\n            .catch((err) => {\r\n                setShowDialog(false);\r\n                showMessage(txtMessageSearchError);\r\n                console.log(err);\r\n            });\r\n        setShowDialog(false);\r\n        setHistory(false);\r\n    };\r\n\r\n    const viewData = (data) => {\r\n        if (data[0].data !== false) {\r\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\r\n            setNotificaciones(data[0].data);\r\n            showMessage({\r\n                type: \"info\",\r\n                title: txtSubitlePatent1,\r\n                description: txtDataSearch,\r\n            });\r\n        } else {\r\n            showMessage({\r\n                type: \"warn\",\r\n                title: txtSubitlePatent1,\r\n                description: txtNoDataSearch,\r\n            });\r\n        }\r\n        if (data[1].data !== false) {\r\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\r\n            setPatentesRegistros(data[1].data);\r\n            showMessage({\r\n                type: \"info\",\r\n                title: txtSubitlePatent2,\r\n                description: txtDataSearch,\r\n            });\r\n        } else {\r\n            showMessage({\r\n                type: \"warn\",\r\n                title: txtSubitlePatent2,\r\n                description: txtNoDataSearch,\r\n            });\r\n        }\r\n        if (data[2].data !== false) {\r\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\r\n            setRequisitos(data[2].data);\r\n            showMessage({\r\n                type: \"info\",\r\n                title: txtSubitlePatent3,\r\n                description: txtDataSearch,\r\n            });\r\n        } else {\r\n            showMessage({\r\n                type: \"warn\",\r\n                title: txtSubitlePatent3,\r\n                description: txtNoDataSearch,\r\n            });\r\n        }\r\n    };\r\n\r\n    const getClients = () => {\r\n        return ClienteService.getAll()\r\n            .then((resp) => resp.data)\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    const datesValidation = () => {\r\n        return Validations.validateDateStartEnd(\r\n            inputFechaInicio,\r\n            inputFechaFin\r\n        );\r\n    };\r\n\r\n    const exports = () => {\r\n        dt1.current.exportCSV();\r\n        dt2.current.exportCSV();\r\n        dt3.current.exportCSV();\r\n    };\r\n\r\n    const clear = () => {\r\n        setNotificaciones([]);\r\n        setPatentesRegistros([]);\r\n        setRequisitos([]);\r\n    };\r\n\r\n    const showMessage = ({ type, title, description }) => {\r\n        toast.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            sticky: true,\r\n        });\r\n    };\r\n\r\n    const clearMessages = () =>{\r\n        toast.current.clear();\r\n    }\r\n\r\n    const enlaceBodyTemplate = (rowdata) => {\r\n        return (\r\n            <Fragment>\r\n                <a\r\n                    href={rowdata[\"Enlace electrónico\"]}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    {rowdata[\"Enlace electrónico\"]}\r\n                </a>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    function NotificacionPatentes() {\r\n        return (\r\n            <div className=\"p-grid p-col\">\r\n                <h2>{txtSubitlePatent1}</h2>\r\n                <DataTable\r\n                    ref={dt1}\r\n                    emptyMessage={txtNoData}\r\n                    paginator\r\n                    rows={7}\r\n                    value={notificaciones}\r\n                >\r\n                    <Column\r\n                        field=\"Número del Oficio\"\r\n                        header=\"Número del Oficio\"\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Fecha del Oficio\"\r\n                        header=\"Fecha del Oficio\"\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Descripción general del asunto\"\r\n                        header=\"Descripción general del asunto\"\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Enlace electrónico\"\r\n                        header=\"Enlace electrónico\"\r\n                        body={enlaceBodyTemplate}\r\n                        sortable\r\n                    />\r\n                    <Column field=\"Expediente\" header=\"Expediente\" sortable />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function PatentesIndustriales() {\r\n        return (\r\n            <div className=\"p-grid p-col\">\r\n                <h2>{txtSubitlePatent2}</h2>\r\n                <DataTable\r\n                    ref={dt2}\r\n                    emptyMessage={txtNoData}\r\n                    paginator\r\n                    rows={7}\r\n                    scrollable\r\n                    value={patentesRegistros}\r\n                >\r\n                    <Column\r\n                        field=\"Oficina, No de Patente y Tipo de documento\"\r\n                        header=\"Oficina, No de Patente y Tipo de documento\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Número de concesión\"\r\n                        header=\"Número de concesión\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Tipo de documento\"\r\n                        header=\"Tipo de documento\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Número de solicitud\"\r\n                        header=\"Número de solicitud\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Fecha de presentación\"\r\n                        header=\"Fecha de presentación\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Fecha de concesión\"\r\n                        header=\"Fecha de concesión\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Título\"\r\n                        header=\"Título\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Inventor(es)\"\r\n                        header=\"Inventor(es)\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Titular\"\r\n                        header=\"Titular\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Agente\"\r\n                        header=\"Agente\"\r\n                        headerStyle={{ width: \"17vh\" }}\r\n                        sortable\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function PatentesNotificados() {\r\n        return (\r\n            <div className=\"p-grid p-col\">\r\n                <h2>{txtSubitlePatent3}</h2>\r\n                <DataTable\r\n                    ref={dt3}\r\n                    emptyMessage={txtNoData}\r\n                    paginator\r\n                    rows={7}\r\n                    value={requisitos}\r\n                >\r\n                    <Column\r\n                        field=\"Número de expediente\"\r\n                        header=\"Número de expediente\"\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Solicitante(s)\"\r\n                        header=\"Solicitante(s)\"\r\n                        sortable\r\n                    />\r\n                    <Column\r\n                        field=\"Número del Oficio\"\r\n                        header=\"Número del Oficio\"\r\n                        sortable\r\n                    />\r\n                    <Column field=\"Agente\" header=\"Agente\" sortable />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb\r\n                model={[{ label: txtTitlePatents }]}\r\n                home={{ icon: \"pi pi-home\" }}\r\n            />\r\n            <Toast ref={toast} />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col p-p-3\">\r\n                    <h1>{txtTitlePatents}</h1>\r\n                    <div>\r\n                        {txtLastQueryPatent}\r\n                        {moment(resume.ultimaBusquedaPatentes).format(\"LLLL\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-d-flex p-ai-center p-py-2\">\r\n                    <Button\r\n                        label={txtStartSearchButton}\r\n                        icon=\"pi pi-search\"\r\n                        className=\"p-button-lg p-ml-auto\"\r\n                        style={{ backgroundColor: \"var(--green-600)\" }}\r\n                        onClick={confirmStartSearch}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-dir-col\">\r\n                <div className=\"p-col\">\r\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"p-mr-2\"\r\n                            icon=\"pi pi-download\"\r\n                            label={txtExportButton}\r\n                            style={{ backgroundColor: \"var(--teal-600)\" }}\r\n                            onClick={exports}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            icon=\"pi pi-times\"\r\n                            label={txtClearButton}\r\n                            className=\"p-button-info  p-mr-2\"\r\n                            onClick={clear}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            icon=\"pi pi-comments\"\r\n                            label={txtClearMessages}\r\n                            className=\"p-button-info\"\r\n                            onClick={clearMessages}\r\n                        />\r\n                    </div>\r\n                    <NotificacionPatentes />\r\n                </div>\r\n                <div className=\"p-col\">\r\n                    <PatentesIndustriales />\r\n                </div>\r\n                <div className=\"p-col\">\r\n                    <PatentesNotificados />\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                showHeader={false}\r\n                visible={showDialog}\r\n                draggable={false}\r\n                closable={false}\r\n                onHide={() => {}}\r\n            >\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col\">\r\n                        {history ? (\r\n                            <>\r\n                                <div className=\"p-col p-col-align-center\">\r\n                                    <h1>{txtSmsLoading[0]}</h1>\r\n                                    <div>{txtLodaing}</div>\r\n                                    <ProgressBar\r\n                                        mode=\"indeterminate\"\r\n                                        color={dark_sea_green}\r\n                                        style={{ height: \"6px\" }}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <h1>{txtStartSearch}</h1>\r\n                                <p>{txtInstructionsSearch}</p>\r\n                                <div className=\"p-text-center\">\r\n                                    <div className=\"p-field\">\r\n                                        <label\r\n                                            htmlFor=\"dateStartInput\"\r\n                                            className=\"p-d-block\"\r\n                                        >\r\n                                            {txtDateStartLabel}\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"dateStartInput\"\r\n                                            dateFormat=\"yy/mm/dd\"\r\n                                            mask=\"9999/99/99\"\r\n                                            value={inputFechaInicio}\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"2010:2030\"\r\n                                            placeholder={inputFechaInicio}\r\n                                            disabled={filesReady}\r\n                                            onChange={(e) => {\r\n                                                let dateFormat =\r\n                                                    Validations.convertInputDate(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                setInputFechaInicio(dateFormat);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"p-field\">\r\n                                        <label\r\n                                            htmlFor=\"dateEndInput\"\r\n                                            className=\"p-d-block\"\r\n                                        >\r\n                                            {txtDateEndLabel}\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"dateEndInput\"\r\n                                            dateFormat=\"yy/mm/dd\"\r\n                                            mask=\"9999/99/99\"\r\n                                            value={inputFechaFin}\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"2010:2030\"\r\n                                            placeholder={inputFechaFin}\r\n                                            disabled={filesReady}\r\n                                            onChange={(e) => {\r\n                                                let dateFormat =\r\n                                                    Validations.convertInputDate(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                setInputFechaFin(dateFormat);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\" p-field-checkbox\">\r\n                                        <Checkbox\r\n                                            inputId=\"filesReady\"\r\n                                            checked={filesReady}\r\n                                            onChange={(e) =>\r\n                                                setFilesReady(e.checked)\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"filesReady\">\r\n                                            Ya cuento con los archivos\r\n                                            descargados\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-ai-center p-text-center\">\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"p-mr-2 p-button-danger\"\r\n                                        label=\"Cancelar\"\r\n                                        onClick={() => {\r\n                                            setShowDialog(false);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"p-mr-2 p-button-success\"\r\n                                        label=\"Buscar\"\r\n                                        disabled={datesValidation()}\r\n                                        onClick={startSearch}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport useActive from '../CustomHooks/useActive'\r\nimport PatentTemplate from \"../templates/PatentTemplate\";\r\nimport MenuTop from \"../organisms/MenuTop\";\r\n\r\nexport default function PatentPage() {\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useActive()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MenuTop />\r\n            <div className=\"p-grid p-d-flex\">\r\n                <div className=\"p-col-10 p-offset-1\">\r\n                    <PatentTemplate />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { BreadCrumb } from \"primereact/breadcrumb\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport ClienteService from \"../../service/ClienteService\";\r\nimport ScrapingService from \"../../service/ScrapingService\";\r\nimport HistorialService from \"../../service/HistorialService\";\r\nimport {\r\n    txtExportButton,\r\n    txtStartSearchButton,\r\n    txtNoData,\r\n    txtTitleBrands,\r\n    txtClearButton,\r\n    txtMessageNoClients,\r\n    txtMessageSearchSuccess,\r\n    txtMessageSearchError,\r\n    txtLastQueryBrand,\r\n    txtSubtitleBrand,\r\n    txtSmsLoading,\r\n    txtStartSearch,\r\n    txtLodaing,\r\n    txtInstructionsSearch,\r\n    txtDateStartLabel,\r\n    txtDateEndLabel,\r\n    txtNoDataSearch,\r\n    txtDataSearch,\r\n    txtClearMessages,\r\n} from \"../../utils/Strings\";\r\nimport { dark_sea_green } from \"../../utils/Colors\";\r\nimport Validations from \"../../utils/Validations\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nexport default function BrandTemplate() {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [resume, setResume] = useState({});\r\n    const [marcas, setMarcas] = useState([]);\r\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\r\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\r\n    const [filesReady, setFilesReady] = useState(false);\r\n    const [history, setHistory] = useState(false);\r\n    const toast = useRef(null);\r\n    const dt1 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getResume();\r\n    }, []);\r\n\r\n    const getResume = () => {\r\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\r\n    };\r\n\r\n    const confirmStartSearch = () => {\r\n        setFilesReady(false);\r\n        setInputFechaFin(Validations.convertInputDate(new Date()));\r\n        setInputFechaInicio(\r\n            Validations.convertAPIDate(resume.ultimaBusquedaMarcas)\r\n        );\r\n        if (resume.clientesTotales > 0) {\r\n            setShowDialog(true);\r\n        } else {\r\n            showMessage(txtMessageNoClients);\r\n        }\r\n    };\r\n\r\n    const startSearch = () => {\r\n        setHistory(true);\r\n        saveHistory();\r\n        setData();\r\n    };\r\n\r\n    function saveHistory() {\r\n        HistorialService.insertOne(\"2\")\r\n            .then((response) => {})\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    const setData = async () => {\r\n        let info = await getClients();\r\n        let objSend = {\r\n            fechaInicio: inputFechaInicio,\r\n            fechaFin: inputFechaFin,\r\n            datos: info,\r\n            descargado: filesReady,\r\n        };\r\n        await ScrapingService.getMarcas(objSend)\r\n            .then((resp) => {\r\n                viewData(resp.data);\r\n                showMessage(txtMessageSearchSuccess);\r\n            })\r\n            .catch((err) => {\r\n                setShowDialog(false);\r\n                showMessage(txtMessageSearchError);\r\n                console.log(err);\r\n            });\r\n        setShowDialog(false);\r\n        setHistory(false);\r\n    };\r\n\r\n    const viewData = (data) => {\r\n        if (data.data !== false) {\r\n            setMarcas(data.data);\r\n            showMessage({\r\n                type: \"info\",\r\n                title: txtSubtitleBrand,\r\n                description: txtDataSearch,\r\n            });\r\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\r\n        } else {\r\n            showMessage({\r\n                type: \"warn\",\r\n                title: txtSubtitleBrand,\r\n                description: txtNoDataSearch,\r\n            });\r\n        }\r\n    };\r\n\r\n    const getClients = () => {\r\n        return ClienteService.getAll()\r\n            .then((resp) => resp.data)\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    const datesValidation = () => {\r\n        return Validations.validateDateStartEnd(\r\n            inputFechaInicio,\r\n            inputFechaFin\r\n        );\r\n    };\r\n\r\n    const exports = () => {\r\n        dt1.current.exportCSV();\r\n    };\r\n\r\n    const clear = () => {\r\n        setMarcas([]);\r\n    };\r\n\r\n    const clearMessages = () => {\r\n        toast.current.clear();\r\n    };\r\n\r\n    const enlaceBodyTemplate = (rowdata) => {\r\n        return (\r\n            <Fragment>\r\n                <a\r\n                    href={rowdata[\"Enlace electrónico\"]}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    {rowdata[\"Enlace electrónico\"]}\r\n                </a>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    const headerExport = (\r\n        <div className=\"p-d-flex p-ai-center export-buttons\">\r\n            <Button\r\n                type=\"button\"\r\n                icon=\"pi pi-download\"\r\n                className=\"p-mr-2\"\r\n                label={txtExportButton}\r\n                style={{ backgroundColor: \"var(--teal-600)\" }}\r\n                onClick={exports}\r\n            />\r\n\r\n            <Button\r\n                type=\"button\"\r\n                icon=\"pi pi-times\"\r\n                label={txtClearButton}\r\n                className=\"p-button-info p-mr-2\"\r\n                onClick={clear}\r\n            />\r\n            <Button\r\n                type=\"button\"\r\n                icon=\"pi pi-comments\"\r\n                label={txtClearMessages}\r\n                className=\"p-button-info\"\r\n                onClick={clearMessages}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const showMessage = ({ type, title, description }) => {\r\n        toast.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            sticky: true,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb\r\n                model={[{ label: txtTitleBrands }]}\r\n                home={{ icon: \"pi pi-home\" }}\r\n            />\r\n            <Toast ref={toast} />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col p-p-3\">\r\n                    <h1>{txtTitleBrands}</h1>\r\n                    <div>\r\n                        {txtLastQueryBrand}\r\n                        {moment(resume.ultimaBusquedaMarcas).format(\"LLLL\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-d-flex p-ai-center p-py-2\">\r\n                    <Button\r\n                        label={txtStartSearchButton}\r\n                        icon=\"pi pi-search\"\r\n                        className=\"p-button-lg p-ml-auto\"\r\n                        style={{ backgroundColor: \"var(--green-600)\" }}\r\n                        onClick={confirmStartSearch}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-dir-col\">\r\n                <div className=\"p-col\">\r\n                    <h2>{txtSubtitleBrand}</h2>\r\n                    <DataTable\r\n                        value={marcas}\r\n                        ref={dt1}\r\n                        header={headerExport}\r\n                        emptyMessage={txtNoData}\r\n                        paginator\r\n                        scrollable\r\n                        rows={7}\r\n                    >\r\n                        <Column\r\n                            field=\"Expediente\"\r\n                            header=\"Expediente\"\r\n                            headerStyle={{ width: \"20vh\" }}\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"Descripción del oficio\"\r\n                            header=\"Descripción del oficio\"\r\n                            headerStyle={{ width: \"20vh\" }}\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"Fecha del oficio\"\r\n                            header=\"Fecha del oficio\"\r\n                            headerStyle={{ width: \"20vh\" }}\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"Número del oficio\"\r\n                            header=\"Número del oficio\"\r\n                            headerStyle={{ width: \"20vh\" }}\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"Enlace electrónico\"\r\n                            header=\"Enlace electrónico\"\r\n                            headerStyle={{ width: \"20vh\" }}\r\n                            body={enlaceBodyTemplate}\r\n                            sortable\r\n                        />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                showHeader={false}\r\n                visible={showDialog}\r\n                draggable={false}\r\n                closable={false}\r\n                onHide={() => {}}\r\n            >\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col\">\r\n                        {history ? (\r\n                            <>\r\n                                <div className=\"p-col p-col-align-center\">\r\n                                    <h1>{txtSmsLoading[0]}</h1>\r\n                                    <div>{txtLodaing}</div>\r\n                                    <ProgressBar\r\n                                        mode=\"indeterminate\"\r\n                                        color={dark_sea_green}\r\n                                        style={{ height: \"6px\" }}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <h1>{txtStartSearch}</h1>\r\n                                <p>{txtInstructionsSearch}</p>\r\n                                <div className=\"p-text-center\">\r\n                                    <div className=\"p-field\">\r\n                                        <label\r\n                                            htmlFor=\"dateStartInput\"\r\n                                            className=\"p-d-block\"\r\n                                        >\r\n                                            {txtDateStartLabel}\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"dateStartInput\"\r\n                                            dateFormat=\"yy/mm/dd\"\r\n                                            mask=\"9999/99/99\"\r\n                                            value={inputFechaInicio}\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"2010:2030\"\r\n                                            placeholder={inputFechaInicio}\r\n                                            disabled={filesReady}\r\n                                            onChange={(e) => {\r\n                                                let dateFormat =\r\n                                                    Validations.convertInputDate(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                setInputFechaInicio(dateFormat);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"p-field\">\r\n                                        <label\r\n                                            htmlFor=\"dateEndInput\"\r\n                                            className=\"p-d-block\"\r\n                                        >\r\n                                            {txtDateEndLabel}\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"dateEndInput\"\r\n                                            dateFormat=\"yy/mm/dd\"\r\n                                            mask=\"9999/99/99\"\r\n                                            value={inputFechaFin}\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"2010:2030\"\r\n                                            placeholder={inputFechaFin}\r\n                                            disabled={filesReady}\r\n                                            onChange={(e) => {\r\n                                                let dateFormat =\r\n                                                    Validations.convertInputDate(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                setInputFechaFin(dateFormat);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\" p-field-checkbox\">\r\n                                        <Checkbox\r\n                                            inputId=\"filesReady\"\r\n                                            checked={filesReady}\r\n                                            onChange={(e) =>\r\n                                                setFilesReady(e.checked)\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"filesReady\">\r\n                                            Ya cuento con los archivos\r\n                                            descargados\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-ai-center p-text-center\">\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"p-mr-2 p-button-danger\"\r\n                                        label=\"Cancelar\"\r\n                                        onClick={() => {\r\n                                            setShowDialog(false);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"p-mr-2 p-button-success\"\r\n                                        label=\"Buscar\"\r\n                                        disabled={datesValidation()}\r\n                                        onClick={startSearch}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport useActive from '../CustomHooks/useActive'\r\nimport BrandTemplate from \"../templates/BrandTemplate\";\r\nimport MenuTop from \"../organisms/MenuTop\";\r\n\r\nexport default function BrandPage() {\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useActive()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MenuTop />\r\n            <div className=\"p-grid p-d-flex\">\r\n                <div className=\"p-col-10 p-offset-1\">\r\n                    <BrandTemplate />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Button } from \"primereact/button\";\r\nimport { FileUpload } from \"primereact/fileupload\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport ClienteService from \"../../service/ClienteService\";\r\nimport HistorialService from \"../../service/HistorialService\";\r\nimport { BreadCrumb } from \"primereact/breadcrumb\";\r\nimport {\r\n    txtSmsLoading,\r\n    txtMessageErrorGeneral,\r\n    txtMessageClientsSaved,\r\n    txtTitleClients,\r\n    txtSaveButton,\r\n    txtClearButton,\r\n    txtNoDataLabel,\r\n    txtLastUpdateClients,\r\n} from \"../../utils/Strings\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default function ClientsTemplate() {\r\n    const [resume, setResume] = useState({});\r\n    const [importedData, setImportedData] = useState([]);\r\n    const [selectedImportedData, setSelectedImportedData] = useState([]);\r\n    const [importedCols, setImportedCols] = useState([\r\n        { field: \"\", header: \"Columnas\" },\r\n    ]);\r\n    const toast = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getResume();\r\n    }, []);\r\n\r\n    const getResume = () => {\r\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\r\n    };\r\n\r\n    const importExcel = async (e) => {\r\n        showMessageloading();\r\n        const file = e.files[0];\r\n        await import(\"xlsx\").then((xlsx) => {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                const wb = xlsx.read(e.target.result, { type: \"array\" });\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n                const data = xlsx.utils.sheet_to_json(ws, { header: 1 });\r\n                const cols = data[0];\r\n                data.shift();\r\n                let _importedCols = cols.map((col) => ({\r\n                    field: toCapitalize(col),\r\n                    header: toCapitalize(col),\r\n                }));\r\n                let _importedData = data.map((d) => {\r\n                    return cols.reduce((obj, c, i) => {\r\n                        let key = toCapitalize(c);\r\n                        obj[key] = d[i];\r\n                        return obj;\r\n                    }, {});\r\n                });\r\n                setImportedCols(_importedCols);\r\n                setImportedData(_importedData);\r\n            };\r\n            reader.readAsArrayBuffer(file);\r\n        });\r\n        clearMessageLoading();\r\n    };\r\n\r\n    const toCapitalize = (s) => {\r\n        let r = s.replaceAll(\" \", \"_\");\r\n        let c = r.charAt(0).toLowerCase() + r.slice(1);\r\n        return c;\r\n    };\r\n\r\n    const clear = () => {\r\n        setImportedData([]);\r\n        setSelectedImportedData([]);\r\n        setImportedCols([{ field: \"\", header: \"Columnas\" }]);\r\n    };\r\n\r\n    const clearMessageLoading = () => {\r\n        toast.current.clear();\r\n    };\r\n\r\n    const showMessageloading = () => {\r\n        toast.current.show({\r\n            severity: \"info\",\r\n            sticky: true,\r\n            content: (\r\n                <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\r\n                    <div className=\"p-text-center\">\r\n                        <i\r\n                            className=\"pi pi-spin pi-spinner\"\r\n                            style={{ fontSize: \"3em\" }}\r\n                        ></i>\r\n                        <h4>{txtSmsLoading[0]}</h4>\r\n                        <p>{txtSmsLoading[1]}</p>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        });\r\n    };\r\n\r\n    function saveHistory() {\r\n        HistorialService.insertOne(\"4\")\r\n            .then((response) => {})\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    const saveAllImportedData = async () => {\r\n        showMessageloading();\r\n        let m1 = importedData.splice(0, importedData.length / 2);\r\n        let m2 = importedData.splice(0, importedData.length);\r\n\r\n        await ClienteService.insertOne(m1)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                } else {\r\n                    showMessage(txtMessageErrorGeneral);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                clearMessageLoading();\r\n                console.error(err);\r\n                return;\r\n            });\r\n\r\n        await ClienteService.insertTwo(m2)\r\n            .then((response) => {\r\n                clearMessageLoading();\r\n                if (response.data) {\r\n                    saveHistory();\r\n                    clear();\r\n                    showMessage(txtMessageClientsSaved);\r\n                } else {\r\n                    showMessage(txtMessageErrorGeneral);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                clearMessageLoading();\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n                return;\r\n            });\r\n    };\r\n\r\n    const showMessage = ({ type, title, description }) => {\r\n        toast.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            life: 3000,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb\r\n                model={[{ label: txtTitleClients }]}\r\n                home={{ icon: \"pi pi-home\" }}\r\n            />\r\n            <Toast ref={toast} />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col p-p-3\">\r\n                    <h1>{txtTitleClients}</h1>\r\n                    <div>\r\n                        {txtLastUpdateClients}\r\n                        {moment(resume.ultimaModificacionClientes).format(\r\n                            \"LLLL\"\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-d-flex p-ai-center p-py-2\">\r\n                        <FileUpload\r\n                            chooseOptions={{\r\n                                label: \"Importar desde Excel\",\r\n                                icon: \"pi pi-file-excel\",\r\n                                className: \"p-button-success p-button-outlined\",\r\n                            }}\r\n                            mode=\"basic\"\r\n                            name=\"demo[]\"\r\n                            auto\r\n                            url=\"https://sivymoapi.herokuapp.com/novopatent-api/uploadFake\"\r\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                            className=\"p-mr-2\"\r\n                            onUpload={importExcel}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            label={txtClearButton}\r\n                            icon=\"pi pi-times\"\r\n                            onClick={clear}\r\n                            className=\"p-button-info p-ml-auto\"\r\n                            disabled={importedData.length === 0 ? true : false}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            label={txtSaveButton}\r\n                            icon=\"pi pi-save\"\r\n                            className=\"p-button-success p-ml-2\"\r\n                            disabled={importedData.length === 0 ? true : false}\r\n                            onClick={saveAllImportedData}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <DataTable\r\n                value={importedData}\r\n                emptyMessage={txtNoDataLabel}\r\n                paginator\r\n                rows={7}\r\n                scrollable\r\n                selection={selectedImportedData}\r\n            >\r\n                {importedCols.map((col, index) => (\r\n                    <Column\r\n                        key={index}\r\n                        field={col.field}\r\n                        header={col.header}\r\n                        style={{ width: \"15em\" }}\r\n                    />\r\n                ))}\r\n            </DataTable>\r\n        </>\r\n    );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport useActive from '../CustomHooks/useActive'\r\nimport MenuTop from \"../organisms/MenuTop\";\r\nimport ClientsTemplate from '../templates/ClientsTemplate'\r\n\r\nexport default function ClientsPage() {\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useActive()\r\n}, [])\r\n     return (\r\n          <>\r\n              <MenuTop/>\r\n              <div className=\"p-grid p-d-flex\">\r\n                <div className=\"p-col-10 p-offset-1\">\r\n                    <ClientsTemplate />\r\n                </div>\r\n            </div>\r\n          </>\r\n     )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Password } from \"primereact/password\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport Validations from \"../../utils/Validations\";\r\nimport {\r\n    txtMessageUserSuccess,\r\n    txtMessageUserError,\r\n    txtMessageUserPasswordSuccess,\r\n    txtMessageUserPasswordError,\r\n    txtTitlePersonalData,\r\n    txtNameLabel,\r\n    txtNameHelp,\r\n    txtFistSurnameLabel,\r\n    txtFistSurnameHelp,\r\n    txtSecondSurnameLabel,\r\n    txtDateOfBirthLabel,\r\n    txtDateOfBirthHelp,\r\n    txtEmailLabel,\r\n    txtEmailHelp,\r\n    txtDesactiveActiveFieldsLabel,\r\n    txtUpdateInformationLabel,\r\n    txtPasswordCurrentlyLabel,\r\n    txtPasswordCurrentlyHelp,\r\n    txtNewPasswordLabel,\r\n    txtNewPasswordHelp,\r\n    txtRepeatNewPasswordLabel,\r\n    txtRepeatNewPasswordHelp,\r\n    txtUpdatePassword,\r\n    txtMessageErrorGeneral,\r\n    txtCheckPasswords,\r\n} from \"../../utils/Strings\";\r\nimport UsuarioService from \"../../service/UsuarioService\";\r\n\r\nexport default function PersonalData() {\r\n    // ? Controla la habilitación y deshabilitación de todos los campos\r\n    const [activePersonalFields, setActivePersonalFields] = useState(true);\r\n    const [activePasswordFields, setActivePasswordFields] = useState(true);\r\n    const toast = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getPersonalInformation();\r\n    }, []);\r\n\r\n    function getPersonalInformation() {\r\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\r\n    }\r\n\r\n    function changePassword({\r\n        contraseñaActual,\r\n        nuevaContraseña,\r\n        repetirNuevaContraseña,\r\n    }) {\r\n        UsuarioService.changePassword(\r\n            userInfo.correo,\r\n            contraseñaActual,\r\n            nuevaContraseña,\r\n            repetirNuevaContraseña\r\n        )\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    showMessage(txtMessageUserPasswordSuccess);\r\n                    localStorage.clear();\r\n                    window.location = \"/\";\r\n                } else {\r\n                    txtMessageErrorGeneral.description = txtCheckPasswords;\r\n                    showMessage(txtMessageErrorGeneral);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    function updateOne(user) {\r\n        UsuarioService.updateOne(user)\r\n            .then((response) => {\r\n                setUserInfo(response.data);\r\n                localStorage.setItem(\"userActive\", JSON.stringify(userInfo));\r\n                showMessage(txtMessageUserSuccess);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    //? Aquí se guarda la información de la persona que está operando el sistema\r\n    const [userInfo, setUserInfo] = useState({\r\n        nombre: \"\",\r\n        primerApellido: \"\",\r\n        segundoApellido: \"\",\r\n        fechaDeNacimiento: \"\",\r\n        correo: \"\",\r\n        superAdmin: false,\r\n    });\r\n\r\n    // ? Aquí se guarda la información del cambio de contraseña\r\n    const [userPassword, setUserPassword] = useState({\r\n        contraseñaActual: \"****\",\r\n        nuevaContraseña: \"****\",\r\n        repetirNuevaContraseña: \"****\",\r\n    });\r\n\r\n    //? Valida los valores de userInfo y cambiar datos\r\n    const checkFormInfoUser = () => {\r\n        const {\r\n            nombre,\r\n            primerApellido,\r\n            segundoApellido,\r\n            fechaDeNacimiento,\r\n            correo,\r\n        } = userInfo;\r\n        if (\r\n            Validations.validateFormUser(\r\n                nombre,\r\n                primerApellido,\r\n                segundoApellido,\r\n                fechaDeNacimiento,\r\n                correo\r\n            )\r\n        ) {\r\n            updateOne(userInfo);\r\n        } else {\r\n            showMessage(txtMessageUserError);\r\n        }\r\n    };\r\n\r\n    //? Valida los valores de userPassword  y cambiar datos\r\n    const checkFormPasswordUser = () => {\r\n        const { contraseñaActual, nuevaContraseña, repetirNuevaContraseña } =\r\n            userPassword;\r\n        if (\r\n            Validations.validatePassworsNoEmpty(\r\n                contraseñaActual,\r\n                nuevaContraseña,\r\n                repetirNuevaContraseña\r\n            )\r\n        ) {\r\n            if (nuevaContraseña === repetirNuevaContraseña) {\r\n                changePassword(userPassword);\r\n            } else {\r\n                showMessage(txtMessageUserPasswordError);\r\n            }\r\n        } else {\r\n            showMessage(txtMessageUserPasswordError);\r\n        }\r\n    };\r\n\r\n    //? Cambiar el contenido de los input (Solo es diseño)\r\n    const handleContentPasswordUser = () => {\r\n        setActivePasswordFields(!activePasswordFields);\r\n        if (activePasswordFields) {\r\n            setUserPassword({\r\n                contraseñaActual: \"\",\r\n                nuevaContraseña: \"\",\r\n                repetirNuevaContraseña: \"\",\r\n            });\r\n        } else {\r\n            setUserPassword({\r\n                contraseñaActual: \"****\",\r\n                nuevaContraseña: \"****\",\r\n                repetirNuevaContraseña: \"****\",\r\n            });\r\n        }\r\n    };\r\n\r\n    //? Muestra los mensajes de los Toast\r\n    const showMessage = ({ type, title, description }) => {\r\n        toast.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            life: 3000,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <Toast ref={toast} />\r\n            <div className=\"p-col p-p-3\">\r\n                <h2>{txtTitlePersonalData}</h2>\r\n                <div className=\"p-fluid\">\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"nombre\">{txtNameLabel}</label>\r\n                        <InputText\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            type=\"text\"\r\n                            disabled={activePersonalFields}\r\n                            value={userInfo.nombre}\r\n                            onChange={(e) => {\r\n                                setUserInfo({\r\n                                    ...userInfo,\r\n                                    nombre: e.target.value,\r\n                                });\r\n                            }}\r\n                            className={!userInfo.nombre && \"p-invalid\"}\r\n                        />\r\n                        {!userInfo.nombre && (\r\n                            <small\r\n                                id=\"nombre-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtNameHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"primerApellido\">\r\n                            {txtFistSurnameLabel}\r\n                        </label>\r\n                        <InputText\r\n                            id=\"primerApellido\"\r\n                            name=\"primerApellido\"\r\n                            type=\"text\"\r\n                            disabled={activePersonalFields}\r\n                            value={userInfo.primerApellido}\r\n                            onChange={(e) => {\r\n                                setUserInfo({\r\n                                    ...userInfo,\r\n                                    primerApellido: e.target.value,\r\n                                });\r\n                            }}\r\n                            className={!userInfo.primerApellido && \"p-invalid\"}\r\n                        />\r\n                        {!userInfo.primerApellido && (\r\n                            <small\r\n                                id=\"primerApellido-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtFistSurnameHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"segundoApellido\">\r\n                            {txtSecondSurnameLabel}\r\n                        </label>\r\n                        <InputText\r\n                            id=\"segundoApellido\"\r\n                            name=\"segundoApellido\"\r\n                            type=\"text\"\r\n                            disabled={activePersonalFields}\r\n                            value={userInfo.segundoApellido}\r\n                            onChange={(e) => {\r\n                                setUserInfo({\r\n                                    ...userInfo,\r\n                                    segundoApellido: e.target.value,\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"fechaDeNacimiento\">\r\n                            {txtDateOfBirthLabel}\r\n                        </label>\r\n                        <Calendar\r\n                            id=\"fechaDeNacimiento\"\r\n                            name=\"fechaDeNacimiento\"\r\n                            monthNavigator\r\n                            yearNavigator\r\n                            showIcon\r\n                            yearRange=\"1950:2010\"\r\n                            dateFormat=\"yy-mm-dd\"\r\n                            placeholder={\r\n                                userInfo.fechaDeNacimiento.split(\"T\")[0]\r\n                            }\r\n                            disabled={activePersonalFields}\r\n                            value={userInfo.fechaDeNacimiento}\r\n                            onChange={(e) => {\r\n                                let result = Validations.convertOnlyInputDate(\r\n                                    e.target.value\r\n                                );\r\n                                setUserInfo({\r\n                                    ...userInfo,\r\n                                    fechaDeNacimiento: result,\r\n                                });\r\n                            }}\r\n                        />\r\n                        {!userInfo.fechaDeNacimiento && (\r\n                            <small\r\n                                id=\"fechaDeNacimiento-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtDateOfBirthHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"correo\">{txtEmailLabel}</label>\r\n                        <InputText\r\n                            id=\"correo\"\r\n                            name=\"correo\"\r\n                            type=\"correo\"\r\n                            disabled={activePersonalFields}\r\n                            value={userInfo.correo}\r\n                            onChange={(e) => {\r\n                                setUserInfo({\r\n                                    ...userInfo,\r\n                                    correo: e.target.value,\r\n                                });\r\n                            }}\r\n                            className={!userInfo.correo && \"p-invalid\"}\r\n                        />\r\n                        {!userInfo.correo && (\r\n                            <small\r\n                                id=\"correo-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtEmailHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-text-center\">\r\n                    <Button\r\n                        label={txtDesactiveActiveFieldsLabel}\r\n                        className=\"p-button-link p-mr-2\"\r\n                        onClick={() => {\r\n                            setActivePersonalFields(!activePersonalFields);\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        label={txtUpdateInformationLabel}\r\n                        className=\"p-button-success p-ml-2\"\r\n                        disabled={activePersonalFields}\r\n                        onClick={checkFormInfoUser}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-col p-p-3\">\r\n                <h2>Cambio de contraseña</h2>\r\n                <div className=\"p-fluid\">\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"contraseñaActual\">\r\n                            {txtPasswordCurrentlyLabel}\r\n                        </label>\r\n                        <Password\r\n                            id=\"contraseñaActual\"\r\n                            name=\"contraseñaActual\"\r\n                            toggleMask\r\n                            feedback={false}\r\n                            maxLength=\"50\"\r\n                            disabled={activePasswordFields}\r\n                            value={userPassword.contraseñaActual}\r\n                            onChange={(e) => {\r\n                                setUserPassword({\r\n                                    ...userPassword,\r\n                                    contraseñaActual: e.target.value,\r\n                                });\r\n                            }}\r\n                        />\r\n                        {!userPassword.contraseñaActual && (\r\n                            <small\r\n                                id=\"contraseñaActual-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtPasswordCurrentlyHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"nuevaContraseña\">\r\n                            {txtNewPasswordLabel}\r\n                        </label>\r\n                        <Password\r\n                            id=\"nuevaContraseña\"\r\n                            name=\"nuevaContraseña\"\r\n                            toggleMask\r\n                            feedback={true}\r\n                            maxLength=\"50\"\r\n                            disabled={activePasswordFields}\r\n                            value={userPassword.nuevaContraseña}\r\n                            onChange={(e) => {\r\n                                setUserPassword({\r\n                                    ...userPassword,\r\n                                    nuevaContraseña: e.target.value,\r\n                                });\r\n                            }}\r\n                        />\r\n                        {!userPassword.nuevaContraseña && (\r\n                            <small\r\n                                id=\"nuevaContraseña-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtNewPasswordHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"repetirNuevaContraseña\">\r\n                            {txtRepeatNewPasswordLabel}\r\n                        </label>\r\n                        <Password\r\n                            id=\"repetirNuevaContraseña\"\r\n                            name=\"repetirNuevaContraseña\"\r\n                            toggleMask\r\n                            feedback={true}\r\n                            maxLength=\"50\"\r\n                            disabled={activePasswordFields}\r\n                            value={userPassword.repetirNuevaContraseña}\r\n                            onChange={(e) => {\r\n                                setUserPassword({\r\n                                    ...userPassword,\r\n                                    repetirNuevaContraseña: e.target.value,\r\n                                });\r\n                            }}\r\n                        />\r\n                        {!userPassword.repetirNuevaContraseña && (\r\n                            <small\r\n                                id=\"repetirNuevaContraseña-help\"\r\n                                className=\"p-error p-d-block\"\r\n                            >\r\n                                {txtRepeatNewPasswordHelp}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-text-center\">\r\n                    <Button\r\n                        label={txtDesactiveActiveFieldsLabel}\r\n                        className=\"p-button-link p-mr-2\"\r\n                        onClick={() => {\r\n                            handleContentPasswordUser();\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        label={txtUpdatePassword}\r\n                        className=\"p-button-success p-ml-2\"\r\n                        disabled={activePasswordFields}\r\n                        onClick={checkFormPasswordUser}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Toolbar } from \"primereact/toolbar\";\r\nimport { InputSwitch } from \"primereact/inputswitch\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Badge } from \"primereact/badge\";\r\nimport Validations from \"../../utils/Validations\";\r\nimport {\r\n    txtMessageUserSuccess,\r\n    txtMessageUserError,\r\n    txtNameLabel,\r\n    txtNameHelp,\r\n    txtFistSurnameLabel,\r\n    txtFistSurnameHelp,\r\n    txtSecondSurnameLabel,\r\n    txtDateOfBirthLabel,\r\n    txtDateOfBirthHelp,\r\n    txtEmailLabel,\r\n    txtEmailHelp,\r\n    txtMessageUserDelete,\r\n    txtRestartPasswordTitle,\r\n    txtRestartPasswordContent,\r\n    txtYES,\r\n    txtNO,\r\n    txtCancelButton,\r\n    txtSaveButton,\r\n    txtNewUserButton,\r\n    txtExport,\r\n    txtSearch,\r\n    txtTitleCrud,\r\n    txtFooterTableLabel,\r\n    txtUserDetails,\r\n    txtSuperAdminLabel,\r\n    txtDeleteUserTitle,\r\n    txtDeleteUserContent,\r\n    txtMessageUserPasswordReset,\r\n    txtMessageErrorGeneral,\r\n} from \"../../utils/Strings\";\r\nimport UsuarioService from \"../../service/UsuarioService\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nexport default function CrudUsers() {\r\n    let emptyUser = {\r\n        nombre: \"\",\r\n        primerApellido: \"\",\r\n        segundoApellido: \"\",\r\n        fechaDeNacimiento: \"\",\r\n        correo: \"\",\r\n        superAdmin: false,\r\n    };\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [userDialog, setUserDialog] = useState(false);\r\n    const [deleteUserDialog, setDeleteUserDialog] = useState(false);\r\n    const [selectedUsers, setSelectedUsers] = useState(null);\r\n    const [globalFilter, setGlobalFilter] = useState(\"\");\r\n    const [user, setUser] = useState(emptyUser);\r\n    const [saveOrUpdate, setSaveOrUpdate] = useState(false);\r\n    const [detailsUser, setDetailsUser] = useState(false);\r\n    const [detailUserChange, setDetailUserChange] = useState({});\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getAll();\r\n    }, []);\r\n\r\n    function getAll() {\r\n        UsuarioService.getAll()\r\n            .then((response) => {\r\n                setUsers(response.data);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    function insertOne(user) {\r\n        UsuarioService.insertOne(user)\r\n            .then((response) => {\r\n                setDetailUserChange(response.data);\r\n                getAll();\r\n                showMessage(txtMessageUserSuccess);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    function updateOne(user) {\r\n        UsuarioService.updateOne(user)\r\n            .then((response) => {\r\n                getAll();\r\n                showMessage(txtMessageUserSuccess);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    function removeOne(email) {\r\n        UsuarioService.removeOne(email)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    getAll();\r\n                    showMessage(txtMessageUserDelete);\r\n                } else {\r\n                    showMessage(txtMessageErrorGeneral);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    function resetPasswordUser(email) {\r\n        UsuarioService.resetPassword(email)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    setDetailUserChange(response.data);\r\n                    hideDetailsUser();\r\n                    showMessage(txtMessageUserPasswordReset);\r\n                } else {\r\n                    showMessage(txtMessageErrorGeneral);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                showMessage(txtMessageErrorGeneral);\r\n            });\r\n    }\r\n\r\n    const openNew = () => {\r\n        setUser(emptyUser);\r\n        setUserDialog(true);\r\n        setSaveOrUpdate(true);\r\n    };\r\n\r\n    const hideDialog = () => {\r\n        setUserDialog(false);\r\n    };\r\n\r\n    const hideDeleteUserDialog = () => {\r\n        setDeleteUserDialog(false);\r\n    };\r\n\r\n    const hideDetailsUser = () => setDetailsUser(!detailsUser);\r\n\r\n    const saveUser = () => {\r\n        const {\r\n            nombre,\r\n            primerApellido,\r\n            segundoApellido,\r\n            fechaDeNacimiento,\r\n            correo,\r\n        } = user;\r\n        if (\r\n            Validations.validateFormUser(\r\n                nombre,\r\n                primerApellido,\r\n                segundoApellido,\r\n                fechaDeNacimiento,\r\n                correo\r\n            )\r\n        ) {\r\n            if (saveOrUpdate) {\r\n                insertOne(user);\r\n                hideDetailsUser();\r\n            } else {\r\n                updateOne(user);\r\n            }\r\n            setSaveOrUpdate(false);\r\n        } else {\r\n            showMessage(txtMessageUserError);\r\n        }\r\n        setUserDialog(false);\r\n        setUser(emptyUser);\r\n    };\r\n\r\n    const editUser = (user) => {\r\n        setUser({ ...user });\r\n        setUserDialog(true);\r\n    };\r\n\r\n    const confirmDeleteUser = (user) => {\r\n        setUser(user);\r\n        setDeleteUserDialog(true);\r\n    };\r\n\r\n    const deleteUser = () => {\r\n        removeOne(user.correo);\r\n        setDeleteUserDialog(false);\r\n        setUser(emptyUser);\r\n    };\r\n\r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    };\r\n\r\n    const resetPassword = (user) => {\r\n        resetPasswordUser(user.correo);\r\n        toast.current.clear();\r\n    };\r\n\r\n    const showConfirmResetPassword = (rowData) => {\r\n        toast.current.show({\r\n            severity: \"warn\",\r\n            sticky: true,\r\n            content: (\r\n                <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\r\n                    <div className=\"p-text-center\">\r\n                        <i\r\n                            className=\"pi pi-exclamation-triangle\"\r\n                            style={{ fontSize: \"3rem\" }}\r\n                        ></i>\r\n                        <h4>{txtRestartPasswordTitle}</h4>\r\n                        <p>{txtRestartPasswordContent}</p>\r\n                    </div>\r\n                    <div className=\"p-grid p-fluid\">\r\n                        <div className=\"p-col\">\r\n                            <Button\r\n                                type=\"button\"\r\n                                label={txtYES}\r\n                                className=\"p-button-success\"\r\n                                onClick={() => resetPassword(rowData)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-col\">\r\n                            <Button\r\n                                type=\"button\"\r\n                                label={txtNO}\r\n                                className=\"p-button-danger\"\r\n                                onClick={() => {\r\n                                    toast.current.clear();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        });\r\n    };\r\n\r\n    const showMessage = ({ type, title, description }) => {\r\n        toast.current.show({\r\n            severity: type,\r\n            summary: title,\r\n            detail: description,\r\n            life: 3000,\r\n        });\r\n    };\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-rounded p-button-info p-mr-2\"\r\n                    onClick={() => editUser(rowData)}\r\n                />\r\n                <Button\r\n                    icon=\"pi pi-trash\"\r\n                    className=\"p-button-rounded p-button-danger p-mr-2\"\r\n                    onClick={() => confirmDeleteUser(rowData)}\r\n                />\r\n                <Button\r\n                    icon=\"pi pi-replay\"\r\n                    className=\"p-button-rounded p-button-warning\"\r\n                    onClick={() => showConfirmResetPassword(rowData)}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const adminBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                {rowData.superAdmin ? (\r\n                    <Badge\r\n                        value={txtYES}\r\n                        severity=\"success\"\r\n                        className=\"p-mr-2\"\r\n                    />\r\n                ) : (\r\n                    <Badge value={txtNO} className=\"p-mr-2\" severity=\"danger\" />\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const dateBirthBodyTemplane = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <div>{moment(rowData.fechaDeNacimiento).format(\"LL\")}</div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const userDialogFooter = (\r\n        <React.Fragment>\r\n            <Button\r\n                label={txtCancelButton}\r\n                icon=\"pi pi-times\"\r\n                className=\"p-button-text\"\r\n                onClick={hideDialog}\r\n            />\r\n            <Button\r\n                label={txtSaveButton}\r\n                icon=\"pi pi-check\"\r\n                className=\"p-button-text\"\r\n                onClick={saveUser}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    const deleteUserDialogFooter = (\r\n        <React.Fragment>\r\n            <Button\r\n                label={txtNO}\r\n                icon=\"pi pi-times\"\r\n                className=\"p-button-text\"\r\n                onClick={hideDeleteUserDialog}\r\n            />\r\n            <Button\r\n                label={txtYES}\r\n                icon=\"pi pi-check\"\r\n                className=\"p-button-text\"\r\n                onClick={deleteUser}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    label={txtNewUserButton}\r\n                    icon=\"pi pi-plus\"\r\n                    className=\"p-button-success p-mr-2\"\r\n                    onClick={openNew}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    label={txtExport}\r\n                    icon=\"pi pi-download\"\r\n                    className=\"p-button\"\r\n                    style={{ backgroundColor: \"var(--teal-600)\" }}\r\n                    onClick={exportCSV}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText\r\n                    type=\"search\"\r\n                    value={globalFilter}\r\n                    onInput={(e) => setGlobalFilter(e.target.value)}\r\n                    placeholder={txtSearch}\r\n                />\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <Toast ref={toast} />\r\n            <div className=\"p-col p-p-3\">\r\n                <h2>{txtTitleCrud}</h2>\r\n                <div className=\"card\">\r\n                    <Toolbar\r\n                        className=\"p-mb-4\"\r\n                        left={leftToolbarTemplate}\r\n                        right={rightToolbarTemplate}\r\n                    />\r\n                    <DataTable\r\n                        ref={dt}\r\n                        value={users}\r\n                        selection={selectedUsers}\r\n                        onSelectionChange={(e) => setSelectedUsers(e.value)}\r\n                        dataKey=\"correo\"\r\n                        paginator\r\n                        rows={7}\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate={txtFooterTableLabel}\r\n                        globalFilter={globalFilter}\r\n                        header={header}\r\n                        emptyMessage=\"Sin ningun usuario aún\"\r\n                    >\r\n                        <Column field=\"nombre\" header=\"Nombre\" sortable />\r\n                        <Column\r\n                            field=\"primerApellido\"\r\n                            header=\"Primer apellido\"\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"segundoApellido\"\r\n                            header=\"Segundo apellido\"\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"fechaDeNacimiento\"\r\n                            header=\"Fecha de nacimiento\"\r\n                            body={dateBirthBodyTemplane}\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"correo\"\r\n                            header=\"Correo electrónico\"\r\n                            sortable\r\n                        />\r\n                        <Column\r\n                            field=\"superAdmin\"\r\n                            header=\"Super administrador\"\r\n                            body={adminBodyTemplate}\r\n                        />\r\n\r\n                        <Column header=\"Acciones\" body={actionBodyTemplate} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={userDialog}\r\n                        style={{ width: \"450px\" }}\r\n                        header={txtUserDetails}\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={userDialogFooter}\r\n                        onHide={hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid\">\r\n                            <div className=\"p-field\">\r\n                                <label htmlFor=\"nombre\">{txtNameLabel}</label>\r\n                                <InputText\r\n                                    id=\"nombre\"\r\n                                    name=\"nombre\"\r\n                                    type=\"text\"\r\n                                    value={user.nombre}\r\n                                    onChange={(e) => {\r\n                                        setUser({\r\n                                            ...user,\r\n                                            nombre: e.target.value,\r\n                                        });\r\n                                    }}\r\n                                    className={!user.nombre && \"p-invalid\"}\r\n                                />\r\n                                {!user.nombre && (\r\n                                    <small\r\n                                        id=\"nombre-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {txtNameHelp}\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"p-field\">\r\n                                <label htmlFor=\"primerApellido\">\r\n                                    {txtFistSurnameLabel}\r\n                                </label>\r\n                                <InputText\r\n                                    id=\"primerApellido\"\r\n                                    name=\"primerApellido\"\r\n                                    type=\"text\"\r\n                                    value={user.primerApellido}\r\n                                    onChange={(e) => {\r\n                                        setUser({\r\n                                            ...user,\r\n                                            primerApellido: e.target.value,\r\n                                        });\r\n                                    }}\r\n                                    className={\r\n                                        !user.primerApellido && \"p-invalid\"\r\n                                    }\r\n                                />\r\n                                {!user.primerApellido && (\r\n                                    <small\r\n                                        id=\"primerApellido-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {txtFistSurnameHelp}\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"p-field\">\r\n                                <label htmlFor=\"segundoApellido\">\r\n                                    {txtSecondSurnameLabel}\r\n                                </label>\r\n                                <InputText\r\n                                    id=\"segundoApellido\"\r\n                                    name=\"segundoApellido\"\r\n                                    type=\"text\"\r\n                                    value={user.segundoApellido}\r\n                                    onChange={(e) => {\r\n                                        setUser({\r\n                                            ...user,\r\n                                            segundoApellido: e.target.value,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field\">\r\n                                <label htmlFor=\"fechaDeNacimiento\">\r\n                                    {txtDateOfBirthLabel}\r\n                                </label>\r\n                                <Calendar\r\n                                    id=\"fechaDeNacimiento\"\r\n                                    name=\"fechaDeNacimiento\"\r\n                                    monthNavigator\r\n                                    yearNavigator\r\n                                    yearRange=\"1950:2010\"\r\n                                    showIcon\r\n                                    placeholder={\r\n                                        user.fechaDeNacimiento.split(\"T\")[0]\r\n                                    }\r\n                                    dateFormat=\"yy-mm-d\"\r\n                                    value={user.fechaDeNacimiento}\r\n                                    onChange={(e) => {\r\n                                        let result =\r\n                                            Validations.convertOnlyInputDate(\r\n                                                e.target.value\r\n                                            );\r\n                                        setUser({\r\n                                            ...user,\r\n                                            fechaDeNacimiento: result,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                {!user.fechaDeNacimiento && (\r\n                                    <small\r\n                                        id=\"fechaDeNacimiento-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {txtDateOfBirthHelp}\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"p-field\">\r\n                                <label htmlFor=\"correo\">{txtEmailLabel}</label>\r\n                                <InputText\r\n                                    id=\"correo\"\r\n                                    name=\"correo\"\r\n                                    type=\"email\"\r\n                                    value={user.correo}\r\n                                    onChange={(e) => {\r\n                                        setUser({\r\n                                            ...user,\r\n                                            correo: e.target.value,\r\n                                        });\r\n                                    }}\r\n                                    className={!user.correo && \"p-invalid\"}\r\n                                />\r\n                                {!user.correo && (\r\n                                    <small\r\n                                        id=\"correo-help\"\r\n                                        className=\"p-error p-d-block\"\r\n                                    >\r\n                                        {txtEmailHelp}\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"p-field p-text-center\">\r\n                                <label htmlFor=\"superAdmin\">\r\n                                    {txtSuperAdminLabel}\r\n                                </label>\r\n                                <br />\r\n                                <InputSwitch\r\n                                    id=\"superAdmin\"\r\n                                    name=\"superAdmin\"\r\n                                    checked={user.superAdmin}\r\n                                    onChange={(e) =>\r\n                                        setUser({\r\n                                            ...user,\r\n                                            superAdmin: !user.superAdmin,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        visible={deleteUserDialog}\r\n                        style={{ width: \"450px\" }}\r\n                        header={txtDeleteUserTitle}\r\n                        modal\r\n                        footer={deleteUserDialogFooter}\r\n                        onHide={hideDeleteUserDialog}\r\n                    >\r\n                        <div className=\"confirmation-content\">\r\n                            {txtDeleteUserContent}\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        visible={detailsUser}\r\n                        style={{ width: \"450px\" }}\r\n                        header={\"Detalles de usuario\"}\r\n                        draggable={false}\r\n                        onHide={hideDetailsUser}\r\n                        footer={\r\n                            <Button\r\n                                label=\"¡Listo!\"\r\n                                className=\"p-button-success\"\r\n                                onClick={hideDetailsUser}\r\n                            />\r\n                        }\r\n                    >\r\n                        <div>\r\n                            Nombre completo:{\" \"}\r\n                            <span>{`${detailUserChange.nombre} ${detailUserChange.primerApellido} ${detailUserChange.segundoApellido}`}</span>\r\n                        </div>\r\n                        <div>\r\n                            Fecha de nacimiento:{\" \"}\r\n                            <span>{`${moment(detailUserChange.fechaDeNacimiento).format(\"LLL\") }`}</span>\r\n                        </div>\r\n                        <div>\r\n                            Correo: <span>{`${detailUserChange.correo}`}</span>\r\n                        </div>\r\n                        <div>\r\n                            Contraseña creada:{\" \"}\r\n                            <span>{`${detailUserChange.contrasena}`}</span>\r\n                            <p>\r\n                                <i>\r\n                                    Favor de guardar y cambiar la contraseña más\r\n                                    tarde\r\n                                </i>\r\n                            </p>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport { BreadCrumb } from \"primereact/breadcrumb\";\r\nimport PersonalData from \"../organisms/PersonalData\";\r\nimport CrudUsers from \"../organisms/CrudUsers\";\r\nimport {\r\n    txtTitleProfile,\r\n    txtTabPersonalData,\r\n    txtTabUserTable,\r\n} from \"../../utils/Strings\";\r\n\r\nexport default function ProfileTemplate() {\r\n    const [userInfo, setUserInfo] = useState({\r\n        superAdmin: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getPersonalInformation();\r\n    }, []);\r\n\r\n    function getPersonalInformation() {\r\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb\r\n                model={[{ label: txtTitleProfile }]}\r\n                home={{ icon: \"pi pi-home\" }}\r\n            />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-col\">\r\n                    <TabView>\r\n                        <TabPanel\r\n                            header={txtTabPersonalData}\r\n                            leftIcon=\"pi pi-fw pi-user\"\r\n                        >\r\n                            <PersonalData />\r\n                        </TabPanel>\r\n                        {userInfo.superAdmin ? (\r\n                            <TabPanel\r\n                                header={txtTabUserTable}\r\n                                leftIcon=\"pi pi-fw pi-pencil\"\r\n                            >\r\n                                <CrudUsers />\r\n                            </TabPanel>\r\n                        ) : (\r\n                            <div className=\"disable\"></div>\r\n                        )}\r\n                    </TabView>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport useActive from '../CustomHooks/useActive'\r\nimport ProfileTemplate from '../templates/ProfileTemplate';\r\nimport MenuTop from \"../organisms/MenuTop\";\r\nexport default function ProfilePage() {\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useActive()\r\n    }, [])\r\n     return (\r\n          <>\r\n            <MenuTop />\r\n            <div className=\"p-grid p-d-flex\">\r\n                <div className=\"p-col-10 p-offset-1\">\r\n                    <ProfileTemplate />\r\n                </div>\r\n            </div>\r\n        </>\r\n     )\r\n}\r\n","import React from \"react\";\r\nimport \"../../assets/css/MyCustom.css\";\r\nimport {\r\n    txtAltLogoImg,\r\n    txt404,\r\n    txtPageNotFound,\r\n    txtPageError,\r\n} from \"../../utils/Strings\";\r\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <div className=\"p-d-flex p-ai-center p-jc-center pageerror\">\r\n            <div className=\"p-col-6\">\r\n                <div className=\"p-text-center\">\r\n                    <img\r\n                        src={logonovopatent}\r\n                        alt={txtAltLogoImg}\r\n                        height=\"100px\"\r\n                    />\r\n                    <div style={{ fontSize: \"8em\", color: \"#454545\" }}>\r\n                        {txt404}\r\n                    </div>\r\n                    <div style={{ fontSize: \"3em\", color: \"#454545\" }}>\r\n                        {txtPageNotFound}\r\n                    </div>\r\n                    <div style={{ fontSize: \"1.5em\", color: \"#454545\" }}>\r\n                        {txtPageError}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"primereact/resources/themes/md-light-indigo/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport React from \"react\";\r\nimport { locale, addLocale } from \"primereact/api\";\r\nimport { localLocation } from \"./utils/Strings\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/pages/Login\";\r\nimport HomePage from \"./components/pages/HomePage\";\r\nimport PatentPage from \"./components/pages/PatentPage\";\r\nimport BrandPage from \"./components/pages/BrandPage\";\r\nimport InformationPage from \"./components/pages/ClientsPage\";\r\nimport ProfilePage from \"./components/pages/ProfilePage\";\r\nimport ErrorPage from \"./components/pages/ErrorPage\";\r\naddLocale(\"es\", localLocation);\r\nlocale(\"es\");\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <Route path=\"/inicio\" component={HomePage} />\r\n                <Route path=\"/patentes\" component={PatentPage} />\r\n                <Route path=\"/marcas\" component={BrandPage} />\r\n                <Route path=\"/expedientes\" component={InformationPage} />\r\n                <Route path=\"/perfil\" component={ProfilePage} />\r\n                <Route component={ErrorPage} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}