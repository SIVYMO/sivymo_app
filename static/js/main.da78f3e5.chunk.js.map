{"version":3,"sources":["utils/Strings.js","utils/Validations.js","assets/img/logonovopatent.jpg","service/API.js","service/Endpoints.js","service/UsuarioService.js","components/pages/Login.jsx","service/ResumeService.js","components/templates/HomeTemplate.jsx","components/organisms/MenuTop.jsx","components/pages/HomePage.jsx","service/ClienteService.js","service/APIScraping.js","service/ScrapingService.js","service/HistorialService.js","utils/Colors.js","components/templates/PatentTemplate.jsx","components/pages/PatentPage.jsx","components/templates/BrandTemplate.jsx","components/pages/BrandPage.jsx","components/templates/ClientsTemplate.jsx","components/pages/ClientsPage.jsx","components/organisms/PersonalData.jsx","components/organisms/CrudUsers.jsx","components/templates/ProfileTemplate.jsx","components/pages/ProfilePage.jsx","components/pages/ErrorPage.jsx","App.js","index.js"],"names":["backgroundWallpaper","txtWelcome","txtLastQueryPatent","txtLastQueryBrand","txtLastUpdateClients","txtConfirmExit","txtExit","txtAltLogoImg","txtLogoutButton","txtEmailValid","txtPasswordValid","txtMessageSucces","type","title","description","txtMessageLoading","txtLogin","txtFillFields","txtEmailLabel","txtPasswordLabel","txtLoginButton","txtCancelButton","txtMessageLoginError","txt404","txtPageNotFound","txtPageError","txtMessageUserSuccess","txtMessageUserError","txtMessageUserDelete","txtMessageUserPasswordSuccess","txtMessageUserPasswordError","txtMessageUserPasswordReset","txtMessageErrorGeneral","txtTitlePersonalData","txtNameLabel","txtNameHelp","txtFistSurnameLabel","txtFistSurnameHelp","txtSecondSurnameLabel","txtDateOfBirthLabel","txtDateOfBirthHelp","txtEmailHelp","txtDesactiveActiveFieldsLabel","txtUpdateInformationLabel","txtUpdatePassword","txtPasswordCurrentlyLabel","txtPasswordCurrentlyHelp","txtNewPasswordLabel","txtNewPasswordHelp","txtRepeatNewPasswordLabel","txtRepeatNewPasswordHelp","txtRestartPasswordTitle","txtRestartPasswordContent","txtYES","txtNO","txtSaveButton","txtNewUserButton","txtExport","txtSearch","txtTitleCrud","txtFooterTableLabel","txtUserDetails","txtSuperAdminLabel","txtDeleteUserTitle","txtDeleteUserContent","txtTitleProfile","txtTabPersonalData","txtTabUserTable","txtCheckPasswords","txtSmsLoading","txtMessageClientsSaved","txtTitleClients","txtClearButton","txtClearMessages","txtExportButton","txtStartSearchButton","txtNoData","txtTitlePatents","txtTitleBrands","txtMessageNoClients","txtMessageSearchSuccess","txtMessageSearchError","txtSubtitleBrand","txtSubitlePatent1","txtSubitlePatent2","txtSubitlePatent3","txtLodaing","txtStartSearch","txtInstructionsSearch","txtDateStartLabel","txtDateEndLabel","txtNoDataSearch","txtDataSearch","Validations","_classCallCheck","_createClass","key","value","email","test","name","flag","i","length","indexOf","charAt","surname","this","validateNames","date","split","replaceAll","tempDate","JSON","stringify","cutDate","substring","convertAPIDate","dateStart","dateEnd","first","second","dateBirth","validateSecondSurname","validateEmail","curently","newPas","repeat","userEmail","userEmailInfo","AXIOS","axios","create","baseURL","headers","UsuarioService","API","put","concat","oldPassword","newPassword","obj","post","get","id","delete","Login","history","useHistory","_useState","useState","_useState2","_slicedToArray","emailInput","setEmailInput","_useState3","_useState4","passwordInput","setPasswordInput","_useState5","_useState6","emailErrorSms","setEmailErrorSms","_useState7","_useState8","passwordErrorSms","setPasswordErrorSms","_useState9","_useState10","emailUIError","setEmailUIError","_useState11","_useState12","passwordUIError","setPasswordUIError","toastMessages","useRef","localStorage","getItem","push","clearMessages","current","clear","showMessage","_ref","show","severity","summary","detail","sticky","_jsx","className","children","_jsxs","Toast","ref","src","logonovopatent","alt","height","style","fontSize","fontWeight","htmlFor","InputText","maxLength","onChange","e","target","Password","toggleMask","feedback","Button","label","icon","onClick","userLogin","correo","contrasena","login","then","response","setItem","data","usuario","catch","err","console","error","ResumeService","HomeTemplate","userInfo","setUserInfo","ultimaBusquedaPatentes","ultimaBusquedaMarcas","ultimaModificacionClientes","clientesTotales","resume","setResume","useEffect","getResume","_objectSpread","parse","Cover","width","objectFit","Card","_ref2","text","moment","format","_Fragment","nombre","primerApellido","backgroundColor","locale","MenuTop","itemsMenuTop","command","start","end","confirmDialog","message","header","acceptClassName","rejectClassName","accept","Menubar","model","HomePage","ClienteService","ScrapingService","HistorialService","dark_sea_green","PatentTemplate","showDialog","setShowDialog","notificaciones","setNotificaciones","patentesRegistros","setPatentesRegistros","requisitos","setRequisitos","setHistory","_useState13","_useState14","filesReady","setFilesReady","_useState15","_useState16","inputFechaInicio","setInputFechaInicio","_useState17","_useState18","inputFechaFin","setInputFechaFin","toast","dt1","dt2","dt3","setData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","info","objSend","wrap","_context","prev","next","getClients","sent","fechaInicio","fechaFin","datos","descargado","getPatentes","resp","viewData","insertOne","log","stop","apply","arguments","window","onbeforeunload","getAll","enlaceBodyTemplate","rowdata","Fragment","href","rel","NotificacionPatentes","DataTable","emptyMessage","paginator","rows","Column","field","sortable","body","PatentesIndustriales","scrollable","headerStyle","PatentesNotificados","BreadCrumb","home","convertInputDate","Date","exportCSV","Dialog","showHeader","visible","draggable","closable","onHide","ProgressBar","mode","color","Calendar","touchUI","dateFormat","mask","monthNavigator","yearNavigator","yearRange","placeholder","disabled","Checkbox","inputId","checked","validateDateStartEnd","PatentPage","BrandTemplate","marcas","setMarcas","getMarcas","BrandPage","ClientsTemplate","allClients","setAllClients","clients","setClients","allClientsText","setAllClientsText","clientsText","setClientsText","clearAndFilterData","newData","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","item","_args","undefined","_asyncIterator","done","trim","t0","return","finish","abrupt","saveAllClients","_callee2","middleBig1","middleTiny1","middleTiny2","middleBig2","middleTiny3","middleTiny4","_context2","showMessageloading","splice","insertAll","res","Promise","all","clearMessageLoading","saveHistory","clearAllClients","saveClients","_ref3","_callee3","_context3","clearClients","content","flex","_ref4","life","InputTextarea","autoResize","ClientsPage","PersonalData","activePersonalFields","setActivePersonalFields","activePasswordFields","setActivePasswordFields","segundoApellido","fechaDeNacimiento","superAdmin","contraseñaActual","nuevaContraseña","repetirNuevaContraseña","userPassword","setUserPassword","showIcon","result","convertOnlyInputDate","user","validateFormUser","updateOne","validatePassworsNoEmpty","changePassword","CrudUsers","emptyUser","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","selectedUsers","setSelectedUsers","globalFilter","setGlobalFilter","setUser","saveOrUpdate","setSaveOrUpdate","detailsUser","setDetailsUser","detailUserChange","setDetailUserChange","dt","openNew","hideDialog","hideDeleteUserDialog","hideDetailsUser","resetPassword","userDialogFooter","React","deleteUserDialogFooter","removeOne","onInput","Toolbar","left","right","selection","onSelectionChange","dataKey","paginatorTemplate","currentPageReportTemplate","rowData","Badge","editUser","confirmDeleteUser","showConfirmResetPassword","modal","footer","InputSwitch","ProfileTemplate","TabView","TabPanel","leftIcon","ProfilePage","ErrorPage","App","Router","Switch","Route","path","exact","component","InformationPage","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","reject","choose","upload","cancel","passwordPrompt","weak","medium","strong","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da78f3e5.chunk.js","sourcesContent":["// ? Locale\nexport const localLocation = {\n    firstDayOfWeek: 1,\n    dayNames: [\n        \"domingo\",\n        \"lunes\",\n        \"martes\",\n        \"miércoles\",\n        \"jueves\",\n        \"viernes\",\n        \"sábado\",\n    ],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"Mi\", \"J\", \"V\", \"S\"],\n    monthNames: [\n        \"enero\",\n        \"febrero\",\n        \"marzo\",\n        \"abril\",\n        \"mayo\",\n        \"junio\",\n        \"julio\",\n        \"agosto\",\n        \"septiembre\",\n        \"octubre\",\n        \"noviembre\",\n        \"diciembre\",\n    ],\n    monthNamesShort: [\n        \"ene\",\n        \"feb\",\n        \"mar\",\n        \"abr\",\n        \"may\",\n        \"jun\",\n        \"jul\",\n        \"ago\",\n        \"sep\",\n        \"oct\",\n        \"nov\",\n        \"dic\",\n    ],\n    today: \"Hoy\",\n    clear: \"Claro\",\n    accept: \"Si\",\n    reject: \"No\",\n    choose: \"Elija\",\n    upload: \"Subir\",\n    cancel: \"Cancelar\",\n    passwordPrompt: \"Ingrese contraseña\",\n    weak: \"Débil\",\n    medium: \"Normal\",\n    strong: \"Fuerte\",\n};\n\n// ? HomeTemplate.jsx\nexport const backgroundWallpaper = \"Fondo de portada\",\n    txtWelcome = \"Hola, bienvenido(a) de nuevo\",\n    txtLastQueryPatent = \"Última búsqueda de patentes: \",\n    txtLastQueryBrand = \"Última búsqueda de marcas: \",\n    txtLastUpdateClients = \"Última actualización en expedientes: \",\n    txtBadgeClients =\"Ingresar expedientes para poder realizar consultas\";\n\n// ? MenuTop.jsx\nexport const txtConfirmExit = \"¿Estás seguro de salir del sistema?\",\n    txtExit = \"Salir\",\n    txtAltLogoImg = \"Logo Novopatent\",\n    txtLogoutButton = \"Salir\";\n\n// ? Login.jsx\nexport const txtEmailValid = \"El email no debe estar vacío y debe ser válido\",\n    txtPasswordValid = \"La contraseña no debe estar vacía\",\n    txtMessageSucces = {\n        type: \"success\",\n        title: \"El código es correcto\",\n        description: \"Redirigiendo...\",\n    },\n    txtMessageLoading = {\n        type: \"info\",\n        title: \"Cargando...\",\n        description: \"Por favor espere\",\n    },\n    txtLogin = \"Inicio de sesión\",\n    txtFillFields = \"Favor de llenar todos los campos\",\n    txtEmailLabel = \"Correo electrónico:\",\n    txtPasswordLabel = \"Contraseña:\",\n    txtPleaseWait = \"Por favor espere...\",\n    txtLoginButton = \"Iniciar sesión\",\n    txtCodeVerification =\n        \"Ingrese el código de verificación que ha sido enviado a su correo electrónico\",\n    txtCodeVerificationLabel = \"Código de verificación\",\n    txtCancelButton = \"Cancelar\",\n    txtVerifyButton = \"Verificar\",\n    txtMessageLoginError = {\n        type: \"error\",\n        title: \"Correo electrónico y/o contraseña incorrectos\",\n        description: \"Por favor verifíquelos nuevamente\",\n    };\n\n// ? ErrorPage.jsx\nexport const txt404 = \"404\",\n    txtPageNotFound = \"Página no encontrada\",\n    txtPageError =\n        \"La página que estás buscando no existe o ha ocurrido un error\";\n\n// ? ProfileTemplate.jsx\nexport const txtMessageUserSuccess = {\n        type: \"success\",\n        title: \"Usuario guardado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserError = {\n        type: \"error\",\n        title: \"Campos no válidos\",\n        description:\n            \"Algunos campos tienen caracteres especiales o están vacíos\",\n    },\n    txtMessageUserDelete = {\n        type: \"success\",\n        title: \"Usuario eliminado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordSuccess = {\n        type: \"success\",\n        title: \"Contraseña guardada correctamente\",\n        description: \"La contraseña del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordError = {\n        type: \"error\",\n        title: \"Las contraseñas no coinciden o están vacías\",\n        description: \"Verificar los campos de las contraseñas\",\n    },\n    txtMessageUserPasswordReset = {\n        type: \"success\",\n        title: \"Contraseña restablecida correctamente\",\n        description: \"Se ha cambiado la contraseña\",\n    },\n    txtMessageErrorGeneral = {\n        type: \"error\",\n        title: \"No se ejecutó la operación\",\n        description: \"Intente de nuevo\",\n    },\n    txtTitlePersonalData = \"Tu información\",\n    txtNameLabel = \"Nombre:\",\n    txtNameHelp = \" El nombre no debe estar vacío y debe ser válido\",\n    txtFistSurnameLabel = \"Primer apellido:\",\n    txtFistSurnameHelp =\n        \" El primer apellido no debe estar vacío y debe ser válido\",\n    txtSecondSurnameLabel = \"Segundo apellido:\",\n    txtDateOfBirthLabel = \"Fecha de nacimiento:\",\n    txtDateOfBirthHelp =\n        \"La fecha de nacimiento no debe estar vacía y debe ser válida\",\n    txtEmailHelp =\n        \"El correo electrónico no debe estar vacío y debe ser válido\",\n    txtDesactiveActiveFieldsLabel = \"Habilitar/Deshabilitar campos\",\n    txtUpdateInformationLabel = \"Actualizar información\",\n    txtUpdatePassword = \"Actualizar contraseña\",\n    txtPasswordCurrentlyLabel = \"Contraseña actual:\",\n    txtPasswordCurrentlyHelp = \"La contraseña actual no debe estar vacía\",\n    txtNewPasswordLabel = \"Nueva contraseña:\",\n    txtNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRepeatNewPasswordLabel = \"Repetir nueva contraseña:\",\n    txtRepeatNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRestartPasswordTitle = \"¿Restablecer la contraseña de este usuario?\",\n    txtRestartPasswordContent =\n        \" Se le enviará un correo electrónico a esa persona con la nueva contraseña\",\n    txtYES = \"Si\",\n    txtNO = \"No\",\n    txtSaveButton = \"Guardar\",\n    txtNewUserButton = \"Nuevo usuario\",\n    txtExport = \"Exportar en CSV\",\n    txtSearch = \"Buscar...\",\n    txtTitleCrud = \"Tabla de usuarios\",\n    txtFooterTableLabel =\n        \"Mostrando {first} a {last} de {totalRecords} usuarios\",\n    txtUserDetails = \"Detalles de usuario\",\n    txtSuperAdminLabel = \"Super administrador:\",\n    txtDeleteUserTitle = \"¿Eliminar usuario?\",\n    txtDeleteUserContent =\n        \"El usuario se eliminará permanente de la aplicación\",\n    txtTitleProfile = \"Perfil\",\n    txtTabPersonalData = \"Datos personales\",\n    txtTabUserTable = \"Tabla de usuarios\",\n    txtCheckPasswords = \"Verifica que la contraseña actual sea correcta\"\n\n//  ? ClientsTemplate.js\nexport const txtSmsLoading = [\n        \"Cargando\",\n        \"Espere a que los datos estén listos\",\n    ],\n    txtMessageClientsSaved = {\n        type: \"success\",\n        title: \"Expedientes guardados\",\n        description: \"Se han actualizado correctamente\",\n    },\n    txtTitleClients = \"Expedientes\",\n    txtClearButton = \"Limpiar datos\",\n    txtNoDataLabel = \"Sin ningún dato subido\",\n    txtClearMessages = \"Limpiar mensajes\";\n\n// ? SpecimensTemplate.jsx\n// ? PatentTemplate.jsx\n// ? BrandTemplate.jsx\nexport const txtExportButton = \"Exportar resultados\",\n    txtStartSearchButton = \"Iniciar con la búsqueda\",\n    txtNoData = \"No hay datos\",\n    txtTitleExtraordinaryExamples = \"Ejemplares extraordinarios\",\n    txtTitlePatents = \"Patentes\",\n    txtTitleBrands = \"Marcas\",\n    txtMessageNoClients = {\n        type: \"error\",\n        title: \"No hay expedientes registrados\",\n        description: \"Registra algunos para realizar búsquedas\",\n    },\n    txtMessageSearchSuccess = {\n        type: \"success\",\n        title: \"Búsqueda realizada con éxito\",\n        description: \"Revisa si hubo coincidencias con los registros\",\n    },\n    txtMessageSearchError = {\n        type: \"error\",\n        title: \"Ocurrió un error de conexión\",\n        description: \"Vuelve a intentarlo de nuevo\",\n    },\n    txtSubtitleBrand = \"Notificaciones de marcas\",\n    txtSubitlePatent1 = \"Notificaciones de patentes\",\n    txtSubitlePatent2 = \"Patentes, registros de modelos de utilidad y diseños industriales\",\n    txtSubitlePatent3 = \"Requisitos de forma y fondo, y abandonos notificados\",\n    txtLodaing = \"Realizando las búsquedas necesarias\",\n    txtStartSearch = \"Iniciar búsqueda\",\n    txtInstructionsSearch =\n        \"Puedes colocar alguna fecha en especifico o ignorar y continuar con la búsqueda regular\",\n    txtDateStartLabel = \"Fecha inicio:\",\n    txtDateEndLabel = \"Fecha fin:\",\n    txtNoDataSearch = \"No se encontraron coincidencias\",\n    txtDataSearch = \"Se encontraron coincidencias\"\n","/* eslint-disable no-useless-escape */\nconst CHARS =\n    \"áéíóúÁÉÍÓÚabcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ \";\n\nclass Validations {\n    validateEmail(email) {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    validateNames(name) {\n        let flag = true;\n        if (name !== \"\") {\n            for (let i = 0; i < name.length; i++) {\n                if (CHARS.indexOf(name.charAt(i)) === -1) {\n                    flag = false;\n                    break;\n                }\n            }\n        } else {\n            return false;\n        }\n        return flag;\n    }\n\n    validateSecondSurname(surname) {\n        if (surname === \"\") {\n            return true;\n        } else {\n            return this.validateNames(surname);\n        }\n    }\n\n    convertAPIDate(date) {\n        let tempDate = date.split(\"T\")[0];\n        return tempDate.replaceAll(\"-\", \"/\");\n    }\n\n    convertInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        let cutDate = tempDate.substring(1, tempDate.length - 1);\n        return this.convertAPIDate(cutDate);\n    }\n\n    convertOnlyInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        return tempDate.substring(1, tempDate.length - 1);\n    }\n\n    validateDateStartEnd(dateStart, dateEnd) {\n        return !(dateStart.length === 10 &&\n            dateEnd.length === 10 &&\n            dateStart.split(\"/\").length === 3 &&\n            dateEnd.split(\"/\").length === 3);\n\n    }\n\n    validateFormUser(name, first, second, dateBirth, email) {\n        return this.validateNames(name) &&\n            this.validateNames(first) &&\n            this.validateSecondSurname(second) &&\n            dateBirth !== \"\" &&\n            this.validateEmail(email);\n    }\n\n    validatePassworsNoEmpty(curently, newPas, repeat) {\n        return curently !== \"\" && newPas !== \"\" && repeat !== \"\"\n    }\n\n    validateSameEmail(userEmail, userEmailInfo) {\n        return userEmail === userEmailInfo;\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new Validations();\n","export default __webpack_public_path__ + \"static/media/logonovopatent.015ff878.jpg\";","import axios from \"axios\";\nimport {API_BACKEND_URL} from \"./Endpoints\";\n\nconst AXIOS = axios.create({\n    baseURL: API_BACKEND_URL,\n    headers: {\"Content-type\": \"application/json\"},\n})\nexport default AXIOS\n","// export const API_BACKEND_URL = 'http://localhost:8080/novopatent-api'\nexport const API_BACKEND_URL = 'https://sivymoapi-production.up.railway.app/novopatent-api'\nexport const API_SCRAPING_URL = 'http://localhost:8081'","import API from \"./API\";\n\nclass UsuarioService {\n    resetPassword(email) {\n        return API.put(`/reset-password/${email}`);\n    }\n\n    changePassword(email, oldPassword, newPassword) {\n        return API.put(\n            `/change-password/${email}/${oldPassword}/${newPassword}`\n        );\n    }\n\n    login(obj) {\n        return API.post(\"/login\", obj);\n    }\n\n    getAll() {\n        return API.get(\"/users\");\n    }\n\n    getOne(id) {\n        return API.get(`/users/${id}`);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/users\", obj);\n    }\n\n    updateOne(obj) {\n        return API.put(\"/users\", obj);\n    }\n\n    removeOne(email) {\n        return API.delete(`/users/${email}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new UsuarioService();\n","import React, {useState, useRef} from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport Validations from \"../../utils/Validations\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport {\n    txtAltLogoImg,\n    txtEmailValid,\n    txtPasswordValid,\n    txtLogin,\n    txtFillFields,\n    txtEmailLabel,\n    txtPasswordLabel,\n    txtLoginButton,\n    txtMessageLoginError,\n    txtMessageSucces,\n    txtMessageLoading\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function Login() {\n    const history = useHistory();\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [emailErrorSms, setEmailErrorSms] = useState(\"\");\n    const [passwordErrorSms, setPasswordErrorSms] = useState(\"\");\n    const [emailUIError, setEmailUIError] = useState(\"p-d-block\");\n    const [passwordUIError, setPasswordUIError] = useState(\"p-d-block\");\n    const toastMessages = useRef(null);\n\n    if (localStorage.getItem(\"userActive\") !== null) history.push(\"/inicio\");\n\n    const login = () => {\n        if (emailInput.length <= 0 || !Validations.validateEmail(emailInput)) {\n            setEmailErrorSms(txtEmailValid);\n            setEmailUIError(\"p-invalid p-d-block\");\n        } else {\n            setEmailErrorSms(\"\");\n            setEmailUIError(\"p-d-block\");\n        }\n        if (passwordInput.length <= 0) {\n            setPasswordErrorSms(txtPasswordValid);\n            setPasswordUIError(\"p-invalid p-d-block\");\n        } else {\n            setPasswordErrorSms(\"\");\n            setPasswordUIError(\"p-d-block\");\n        }\n        if (\n            emailInput.length > 0 &&\n            passwordInput.length > 0 &&\n            Validations.validateEmail(emailInput)\n        ) {\n            let userLogin = {\n                correo: emailInput,\n                contrasena: passwordInput,\n            };\n            showMessage(txtMessageLoading);\n            UsuarioService.login(userLogin)\n                .then((response) => {\n                    clearMessages();\n                    localStorage.setItem(\"userActive\", JSON.stringify(response.data.usuario));\n                    showMessage(txtMessageSucces);\n                    history.push(\"/inicio\");\n                })\n                .catch((err) => {\n                    clearMessages();\n                    console.error(err)\n                    showMessage(txtMessageLoginError);\n                });\n        }\n    };\n\n    const clearMessages = () => {\n        toastMessages.current.clear();\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toastMessages.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <div className=\"pagelogin p-d-flex p-jc-center p-ai-center\">\n            <div className=\"card p-shadow-11 p-col-12 p-md-6 p-lg-4\">\n                <Toast ref={toastMessages}/>\n                <div className=\"p-col p-text-center\">\n                    <img src={logonovopatent} alt={txtAltLogoImg} height=\"90px\"/>\n                </div>\n                <div className=\"p-col\">\n                    <div className=\"p-text-center\" style={{fontSize: \"2em\", fontWeight: \"500\"}}>\n                        {txtLogin}\n                    </div>\n                    <div className=\"p-text-center\">{txtFillFields}</div>\n                    <div className=\"p-mx-6 p-my-4\">\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"emailInput\" className=\"p-d-block\">\n                                    {txtEmailLabel}\n                                </label>\n                                <InputText\n                                    className={emailUIError}\n                                    id=\"emailInput\"\n                                    aria-describedby=\"emailInput-help\"\n                                    value={emailInput}\n                                    maxLength=\"50\"\n                                    onChange={(e) => {\n                                        setEmailInput(e.target.value);\n                                    }}\n                                />\n                                <small id=\"emailInput-help\" className=\"p-error p-d-block\">\n                                    {emailErrorSms}\n                                </small>\n                            </div>\n                        </div>\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"passwordInput\" className=\"p-d-block\">\n                                    {txtPasswordLabel}\n                                </label>\n                                <Password\n                                    id=\"passwordInput\"\n                                    toggleMask\n                                    className={passwordUIError}\n                                    feedback={false}\n                                    maxLength=\"50\"\n                                    value={passwordInput}\n                                    onChange={(e) => {\n                                        setPasswordInput(e.target.value);\n                                    }}\n                                />\n                                <small id=\"passwordInput-help\" className=\"p-error p-d-block\">\n                                    {passwordErrorSms}\n                                </small>\n                            </div>\n                        </div>\n                        <div className=\"p-text-center\">\n                            <Button\n                                label={txtLoginButton}\n                                icon=\"pi pi-sign-in\"\n                                className=\"p-button-success\"\n                                onClick={login}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import API from './API'\n\nclass ResumeService{\n     getResume(){\n          return API.get(\"/resume\")\n     }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ResumeService();","import React, {useState, useEffect} from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport {\n    backgroundWallpaper,\n    txtWelcome,\n    txtLastQueryPatent,\n    txtLastQueryBrand,\n    txtLastUpdateClients,\n} from \"../../utils/Strings\";\nimport ResumeService from \"../../service/ResumeService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function HomeTemplate() {\n    const [userInfo, setUserInfo] = useState({});\n    const [resume, setResume] = useState({\n        ultimaBusquedaPatentes: \"\",\n        ultimaBusquedaMarcas: \"\",\n        ultimaModificacionClientes: \"\",\n        clientesTotales: 0,\n    });\n\n    useEffect(() => {\n        getResume();\n        getPersonalInformation();\n    }, []);\n\n\n    const Cover = () => (\n        <img src=\"https://random.imagecdn.app/1080/720\" alt={backgroundWallpaper}\n             style={{width: \"100%\", height: \"300px\", objectFit: \"cover\"}}\n        />\n    );\n\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function getResume() {\n        ResumeService.getResume()\n            .then(({data}) => {\n                setResume({...data});\n                localStorage.setItem(\"resume\", JSON.stringify(data));\n            })\n            .catch((err) => console.error(err));\n    }\n\n    const Card = ({icon, text, value}) => (\n            <div className=\"p-col-12 p-sm-3 card p-shadow-2\">\n                <div className=\"p-d-flex p-d-flex p-jc-center p-ai-center\" style={{height: '200px'}}>\n                    <div className='p-text-center'>\n                        <i className={icon} style={{'fontSize': '2em'}}></i>\n                        <div className='p-mb-2 p-mt-1' style={{'fontSize': '1.5em'}}>{text}</div>\n                        <div className='p-text-bold' style={{'fontSize': '1.6em'}}>{moment(value).format(\"LLLL\")}</div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    return (\n        <>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <h1>{txtWelcome}{' '}<i>{`${userInfo.nombre} ${userInfo.primerApellido}`}</i></h1>\n                </div>\n                <div className=\"p-col\"><Cover/></div>\n            </div>\n            <div className='p-grid p-mt-3'>\n                <div className=\"p-col-12 p-sm-3 card p-shadow-2\"\n                     style={{backgroundColor: resume.clientesTotales === 0 ? 'var(--pink-100)' : 'var(--green-200)'}}>\n                    <div className=\"p-d-flex p-d-flex p-jc-center p-ai-center\" style={{height: '200px'}}>\n                        <div className='p-text-center'>\n                            <i className='pi pi-user' style={{'fontSize': '2em'}}></i>\n                            <div className='p-mb-2 p-mt-1' style={{'fontSize': '1.5em'}}>Total de expedientes:</div>\n                            <div className='p-text-bold' style={{'fontSize': '5em'}}>{resume.clientesTotales}</div>\n                        </div>\n                    </div>\n                </div>\n                <Card icon='pi pi-file' text={txtLastQueryPatent} value={resume.ultimaBusquedaPatentes}/>\n                <Card icon='pi pi-globe' text={txtLastQueryBrand} value={resume.ultimaBusquedaMarcas}/>\n                <Card icon='pi pi-id-card' text={txtLastUpdateClients} value={resume.ultimaModificacionClientes}/>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\nimport {Menubar} from \"primereact/menubar\";\nimport {Button} from \"primereact/button\";\nimport {confirmDialog} from \"primereact/confirmdialog\";\nimport {txtConfirmExit, txtExit, txtAltLogoImg, txtLogoutButton} from \"../../utils/Strings\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function MenuTop() {\n    const history = useHistory();\n    const itemsMenuTop = [\n        {\n            label: \"Inicio\",\n            icon: \"pi pi-fw pi-home\",\n            command: () => {\n                history.push(\"/inicio\");\n            },\n        },\n        {\n            label: \"Patentes\",\n            icon: \"pi pi-fw pi-file\",\n            command: () => {\n                history.push(\"/patentes\");\n            },\n        },\n        {\n            label: \"Marcas\",\n            icon: \"pi pi-fw pi-globe\",\n            command: () => {\n                history.push(\"/marcas\");\n            },\n        },\n        {\n            label: \"Expedientes\",\n            icon: \"pi pi-fw pi-id-card\",\n            command: () => {\n                history.push(\"/expedientes\");\n            },\n        },\n        {\n            label: \"Perfil\",\n            icon: \"pi pi-fw pi-user\",\n            command: () => {\n                history.push(\"/perfil\");\n            },\n        },\n    ];\n\n    const confirmLogout = () => {\n        confirmDialog({\n            message: txtConfirmExit,\n            header: txtExit,\n            icon: \"pi pi-exclamation-triangle\",\n            acceptClassName: \"p-button-success\",\n            rejectClassName: \"p-button-plain p-button-text\",\n            accept: () => {\n                localStorage.clear();\n                history.push(\"/\");\n            },\n        });\n    };\n\n    const start = (\n        <img\n            alt={txtAltLogoImg}\n            src={logonovopatent}\n            height=\"50\"\n            className=\"p-mr-2\"\n            onClick={() => {history.push(\"/inicio\");}}\n        />\n    );\n\n    const end = (\n        <Button\n            className=\"p-button-success\"\n            onClick={confirmLogout}\n            label={txtLogoutButton}\n            icon=\"pi pi-sign-out\"\n        />\n    );\n\n    return (\n        <div className=\"p-grid p-m-1\">\n            <div className=\"p-col\">\n                <div className=\"card\">\n                    <Menubar model={itemsMenuTop} start={start} end={end}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport HomeTemplate from \"../templates/HomeTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function HomePage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop/>\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\"><HomeTemplate/></div>\n            </div>\n        </>\n    );\n}\n","import API from \"./API\";\n\nclass ClienteService {\n    getAll() {\n        return API.get(\"/clients\");\n    }\n\n    insertAll(obj) {\n        return API.post(\"/clientsAll\", obj);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/clientsOne\", obj);\n    }\n\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ClienteService();","import axios from \"axios\";\nimport {API_SCRAPING_URL} from \"./Endpoints\";\n\nexport default axios.create({\n    baseURL: API_SCRAPING_URL,\n    headers: {\"Content-type\": \"application/json\",},\n});\n","import API from \"./APIScraping\";\n\nclass ScrapingService {\n    getPatentes(obj) {\n        return API.post(\"/patentes\", obj);\n    }\n\n    getMarcas(obj) {\n        return API.post(\"marcas\", obj);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ScrapingService();","import API from \"./API\";\n\nclass HistorialService {\n    insertOne(type) {\n        return API.post(`/history/${type}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new HistorialService();\n","export const dark_sea_green = \"#81BA8E\",\n    brunswick_green = \"#1B4631\",\n    amazon =\"#467256\"\n","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Toast} from \"primereact/toast\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Calendar} from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtNoData,\n    txtTitlePatents,\n    txtStartSearchButton,\n    txtExportButton,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtSubitlePatent1,\n    txtSubitlePatent2,\n    txtSubitlePatent3,\n    txtLastQueryPatent,\n    txtSmsLoading,\n    txtLodaing,\n    txtStartSearch,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages\n} from \"../../utils/Strings\";\nimport {dark_sea_green} from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function PatentTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [notificaciones, setNotificaciones] = useState([]);\n    const [patentesRegistros, setPatentesRegistros] = useState([]);\n    const [requisitos, setRequisitos] = useState([]);\n    const [history, setHistory] = useState(false);\n    const [filesReady, setFilesReady] = useState(false);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n    const dt2 = useRef(null);\n    const dt3 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(Validations.convertAPIDate(resume.ultimaBusquedaPatentes));\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(1)\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getPatentes(objSend)\n            .then((resp) => {\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n                saveHistory();\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data[0].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setNotificaciones(data[0].data);\n            showMessage({type: \"info\", title: txtSubitlePatent1, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent1, description: txtNoDataSearch,});\n\n        if (data[1].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setPatentesRegistros(data[1].data);\n            showMessage({type: \"info\", title: txtSubitlePatent2, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent2, description: txtNoDataSearch,});\n\n        if (data[2].data !== false) {\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n            setRequisitos(data[2].data);\n            showMessage({type: \"info\", title: txtSubitlePatent3, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent3, description: txtNoDataSearch,});\n\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => Validations.validateDateStartEnd(inputFechaInicio, inputFechaFin);\n\n\n    const exports = () => {\n        dt1.current.exportCSV();\n        dt2.current.exportCSV();\n        dt3.current.exportCSV();\n    };\n\n    const clear = () => {\n        setNotificaciones([]);\n        setPatentesRegistros([]);\n        setRequisitos([]);\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, sticky: true});\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    }\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\" rel=\"noreferrer\">\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n    function NotificacionPatentes() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent1}</h2>\n                <DataTable ref={dt1} emptyMessage={txtNoData} paginator rows={7} value={notificaciones}>\n                    <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                    <Column field=\"Fecha del Oficio\" header=\"Fecha del Oficio\" sortable/>\n                    <Column field=\"Descripción general del asunto\" header=\"Descripción general del asunto\" sortable/>\n                    <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" body={enlaceBodyTemplate} sortable/>\n                    <Column field=\"Expediente\" header=\"Expediente\" sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesIndustriales() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent2}</h2>\n                <DataTable ref={dt2} emptyMessage={txtNoData} paginator rows={7} scrollable value={patentesRegistros}>\n                    <Column field=\"Oficina, No de Patente y Tipo de documento\"\n                            header=\"Oficina, No de Patente y Tipo de documento\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Número de concesión\" header=\"Número de concesión\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Tipo de documento\" header=\"Tipo de documento\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Número de solicitud\" header=\"Número de solicitud\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Fecha de presentación\" header=\"Fecha de presentación\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Fecha de concesión\" header=\"Fecha de concesión\" headerStyle={{width: \"17vh\"}}\n                            sortable/>\n                    <Column field=\"Título\" header=\"Título\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Inventor(es)\" header=\"Inventor(es)\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Titular\" header=\"Titular\" headerStyle={{width: \"17vh\"}} sortable/>\n                    <Column field=\"Agente\" header=\"Agente\" headerStyle={{width: \"17vh\"}} sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    function PatentesNotificados() {\n        return (\n            <div className=\"p-grid p-col\"><h2>{txtSubitlePatent3}</h2>\n                <DataTable ref={dt3} emptyMessage={txtNoData} paginator rows={7} value={requisitos}>\n                    <Column field=\"Número de expediente\" header=\"Número de expediente\" sortable/>\n                    <Column field=\"Solicitante(s)\" header=\"Solicitante(s)\" sortable/>\n                    <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                    <Column field=\"Agente\" header=\"Agente\" sortable/>\n                </DataTable>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitlePatents}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitlePatents}</h1>\n                    <div>\n                        {txtLastQueryPatent}\n                        {moment(resume.ultimaBusquedaPatentes).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button label={txtStartSearchButton} icon=\"pi pi-search\" className=\"p-button-lg p-ml-auto\"\n                            style={{backgroundColor: \"var(--green-600)\"}} onClick={confirmStartSearch}/>\n                </div>\n            </div>\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\n                        <Button type=\"button\" className=\"p-mr-2\" icon=\"pi pi-download\" label={txtExportButton}\n                                style={{backgroundColor: \"var(--teal-600)\"}} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton}\n                                className=\"p-button-info  p-mr-2\" onClick={clear}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\"\n                                onClick={clearMessages}/>\n                    </div>\n                </div>\n                <div className=\"p-col\"><NotificacionPatentes/></div>\n                <div className=\"p-col\"><PatentesIndustriales/></div>\n                <div className=\"p-col\"><PatentesNotificados/></div>\n            </div>\n            <Dialog\n                showHeader={false}\n                visible={showDialog}\n                draggable={false}\n                closable={false}\n                onHide={() => {\n                }}>\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <>\n                                <div className=\"p-col p-col-align-center\">\n                                    <h1>{txtSmsLoading[0]}</h1>\n                                    <div>{txtLodaing}</div>\n                                    <ProgressBar\n                                        mode=\"indeterminate\"\n                                        color={dark_sea_green}\n                                        style={{height: \"6px\"}}\n                                    />\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateStartInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateStartInput\"\n                                            touchUI\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaInicio}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaInicio}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(e.target.value);\n                                                setInputFechaInicio(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label\n                                            htmlFor=\"dateEndInput\"\n                                            className=\"p-d-block\"\n                                        >\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            touchUI\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox\n                                            inputId=\"filesReady\"\n                                            checked={filesReady}\n                                            onChange={(e) =>\n                                                setFilesReady(e.checked)\n                                            }\n                                        />\n                                        <label htmlFor=\"filesReady\">\n                                            Ya cuento con los archivos descargados\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport PatentTemplate from \"../templates/PatentTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function PatentPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <PatentTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {Toast} from \"primereact/toast\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Calendar} from \"primereact/calendar\";\nimport ClienteService from \"../../service/ClienteService\";\nimport ScrapingService from \"../../service/ScrapingService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport {\n    txtExportButton,\n    txtStartSearchButton,\n    txtNoData,\n    txtTitleBrands,\n    txtClearButton,\n    txtMessageNoClients,\n    txtMessageSearchSuccess,\n    txtMessageSearchError,\n    txtLastQueryBrand,\n    txtSubtitleBrand,\n    txtSmsLoading,\n    txtStartSearch,\n    txtLodaing,\n    txtInstructionsSearch,\n    txtDateStartLabel,\n    txtDateEndLabel,\n    txtNoDataSearch,\n    txtDataSearch,\n    txtClearMessages,\n} from \"../../utils/Strings\";\nimport {dark_sea_green} from \"../../utils/Colors\";\nimport Validations from \"../../utils/Validations\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function BrandTemplate() {\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [marcas, setMarcas] = useState([]);\n    const [inputFechaInicio, setInputFechaInicio] = useState(\"\");\n    const [inputFechaFin, setInputFechaFin] = useState(\"\");\n    const [filesReady, setFilesReady] = useState(false);\n    const [history, setHistory] = useState(false);\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n\n    useEffect(() => {\n        getResume();\n    }, []);\n\n    const getResume = () => {\n        setResume(JSON.parse(localStorage.getItem(\"resume\")));\n    };\n\n    const confirmStartSearch = () => {\n        setFilesReady(false);\n        setInputFechaFin(Validations.convertInputDate(new Date()));\n        setInputFechaInicio(Validations.convertAPIDate(resume.ultimaBusquedaMarcas));\n        if (resume.clientesTotales > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const startSearch = () => {\n        setHistory(true);\n        setData();\n    };\n\n    function saveHistory() {\n        HistorialService.insertOne(2)\n    }\n\n    const setData = async () => {\n        let info = await getClients();\n        let objSend = {\n            fechaInicio: inputFechaInicio,\n            fechaFin: inputFechaFin,\n            datos: info,\n            descargado: filesReady,\n        };\n        await ScrapingService.getMarcas(objSend)\n            .then((resp) => {\n                saveHistory();\n                viewData(resp.data);\n                showMessage(txtMessageSearchSuccess);\n            })\n            .catch((err) => {\n                setShowDialog(false);\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            });\n        setShowDialog(false);\n        setHistory(false);\n    };\n\n    const viewData = (data) => {\n        if (data.data !== false) {\n            setMarcas(data.data);\n            showMessage({type: \"info\", title: txtSubtitleBrand, description: txtDataSearch,});\n            window.onbeforeunload = () => \"¿Seguro que quieres salir?\";\n        } else showMessage({type: \"warn\", title: txtSubtitleBrand, description: txtNoDataSearch,});\n    };\n\n    const getClients = () => {\n        return ClienteService.getAll()\n            .then((resp) => resp.data)\n            .catch((err) => console.error(err));\n    };\n\n    const datesValidation = () => Validations.validateDateStartEnd(inputFechaInicio, inputFechaFin);\n\n    const exports = () => {\n        dt1.current.exportCSV();\n    };\n\n    const clear = () => {\n        setMarcas([]);\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    };\n\n    const enlaceBodyTemplate = (rowdata) => {\n        return (\n            <Fragment>\n                <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\" rel=\"noreferrer\">\n                    {rowdata[\"Enlace electrónico\"]}\n                </a>\n            </Fragment>\n        );\n    };\n\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitleBrands}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"p-grid\">\n                <div className=\"p-col p-p-3\">\n                    <h1>{txtTitleBrands}</h1>\n                    <div>\n                        {txtLastQueryBrand}\n                        {moment(resume.ultimaBusquedaMarcas).format(\"LLLL\")}\n                    </div>\n                </div>\n                <div className=\"p-d-flex p-ai-center p-py-2\">\n                    <Button label={txtStartSearchButton} icon=\"pi pi-search\" className=\"p-button-lg p-ml-auto\"\n                            style={{backgroundColor: \"var(--green-600)\"}} onClick={confirmStartSearch}/>\n                </div>\n            </div>\n\n            <div className=\"p-grid p-dir-col\">\n                <div className=\"p-col\">\n                    <div className=\"p-d-flex p-ai-center export-buttons\">\n                        <Button type=\"button\" icon=\"pi pi-download\" className=\"p-mr-2\" label={txtExportButton}\n                                style={{backgroundColor: \"var(--teal-600)\"}} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton} className=\"p-button-info p-mr-2\"\n                                onClick={clear}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\"\n                                onClick={clearMessages}/>\n                    </div>\n                </div>\n                <div className=\"p-col\">\n                    <h2>{txtSubtitleBrand}</h2>\n                    <DataTable value={marcas} ref={dt1} emptyMessage={txtNoData} paginator scrollable rows={7}>\n                        <Column field=\"Expediente\" header=\"Expediente\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Descripción del oficio\" header=\"Descripción del oficio\"\n                                headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Fecha del oficio\" header=\"Fecha del oficio\" headerStyle={{width: \"20vh\"}}\n                                sortable/>\n                        <Column field=\"Número del oficio\" header=\"Número del oficio\" headerStyle={{width: \"20vh\"}}\n                                sortable/>\n                        <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" headerStyle={{width: \"20vh\"}}\n                                body={enlaceBodyTemplate} sortable/>\n                    </DataTable>\n                </div>\n            </div>\n\n            <Dialog showHeader={false} visible={showDialog} draggable={false} closable={false}>\n                <div className=\"p-grid\">\n                    <div className=\"p-col\">\n                        {history ? (\n                            <div className=\"p-col p-col-align-center\">\n                                <h1>{txtSmsLoading[0]}</h1>\n                                <div>{txtLodaing}</div>\n                                <ProgressBar mode=\"indeterminate\" color={dark_sea_green} style={{height: \"6px\"}}/>\n                            </div>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"p-text-center\">\n                                    <div className=\"p-field\">\n                                        <label htmlFor=\"dateStartInput\" className=\"p-d-block\">\n                                            {txtDateStartLabel}\n                                        </label>\n                                        <Calendar id=\"dateStartInput\"\n                                                  touchUI\n                                                  dateFormat=\"yy/mm/dd\"\n                                                  mask=\"9999/99/99\"\n                                                  value={inputFechaInicio} monthNavigator\n                                                  yearNavigator\n                                                  yearRange=\"2010:2030\"\n                                                  placeholder={inputFechaInicio}\n                                                  disabled={filesReady}\n                                                  onChange={(e) => {\n                                                      let dateFormat =\n                                                          Validations.convertInputDate(\n                                                              e.target.value\n                                                          );\n                                                      setInputFechaInicio(dateFormat);\n                                                  }}\n                                        />\n                                    </div>\n                                    <div className=\"p-field\">\n                                        <label htmlFor=\"dateEndInput\" className=\"p-d-block\">\n                                            {txtDateEndLabel}\n                                        </label>\n                                        <Calendar\n                                            id=\"dateEndInput\"\n                                            touchUI\n                                            dateFormat=\"yy/mm/dd\"\n                                            mask=\"9999/99/99\"\n                                            value={inputFechaFin}\n                                            monthNavigator\n                                            yearNavigator\n                                            yearRange=\"2010:2030\"\n                                            placeholder={inputFechaFin}\n                                            disabled={filesReady}\n                                            onChange={(e) => {\n                                                let dateFormat =\n                                                    Validations.convertInputDate(\n                                                        e.target.value\n                                                    );\n                                                setInputFechaFin(dateFormat);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\" p-field-checkbox\">\n                                        <Checkbox inputId=\"filesReady\" checked={filesReady}\n                                                  onChange={(e) =>\n                                                      setFilesReady(e.checked)\n                                                  }\n                                        />\n                                        <label htmlFor=\"filesReady\">Ya cuento con los archivos descargados</label>\n                                    </div>\n                                </div>\n                                <div className=\"p-ai-center p-text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => {\n                                            setShowDialog(false);\n                                        }}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"p-mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={datesValidation()}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport BrandTemplate from \"../templates/BrandTemplate\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function BrandPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop />\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <BrandTemplate />\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport ClienteService from \"../../service/ClienteService\";\nimport HistorialService from \"../../service/HistorialService\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport {\n  txtSmsLoading,\n  txtMessageErrorGeneral,\n  txtMessageClientsSaved,\n  txtTitleClients,\n  txtLastUpdateClients,\n} from \"../../utils/Strings\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { Button } from \"primereact/button\";\n\nmoment.locale(\"es\");\n\nexport default function ClientsTemplate() {\n  const [resume, setResume] = useState({});\n  const [allClients, setAllClients] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [allClientsText, setAllClientsText] = useState(\"\");\n  const [clientsText, setClientsText] = useState(\"\");\n\n  const toast = useRef(null);\n\n  useEffect(() => {\n    getResume();\n  }, []);\n\n  const getResume = () => {\n    setResume(JSON.parse(localStorage.getItem(\"resume\")));\n  };\n\n  const clearAndFilterData = async (data = []) => {\n    let newData = [];\n    for await (let item of data) {\n      item = item.trim();\n      if (item.length > 2) newData.push(item);\n    }\n    return newData;\n  };\n\n  const saveAllClients = async () => {\n    showMessageloading();\n    const data = await clearAndFilterData(allClients);\n    const middleBig1 = data.splice(0, data.length / 2);\n    const middleTiny1 = middleBig1.splice(0, middleBig1.length / 2);\n    const middleTiny2 = middleBig1.splice(0, middleBig1.length);\n    const middleBig2 = data.splice(0, data.length);\n    const middleTiny3 = middleBig2.splice(0, middleBig2.length / 2);\n    const middleTiny4 = middleBig2.splice(0, middleBig2.length);\n    ClienteService.insertAll(middleTiny1)\n      .then((res) => {\n        if (res.data) {\n          Promise.all([\n            ClienteService.insertOne(middleTiny2),\n            ClienteService.insertOne(middleTiny3),\n            ClienteService.insertOne(middleTiny4),\n          ])\n            .then((res) => {\n              if (res[0].data && res[1].data && res[2].data) {\n                clearMessageLoading();\n                saveHistory();\n                clearAllClients();\n                showMessage(txtMessageClientsSaved);\n              } else showMessage(txtMessageErrorGeneral);\n            })\n            .catch((err) => {\n              clearMessageLoading();\n              console.error(err);\n              showMessage(txtMessageErrorGeneral);\n            });\n        } else showMessage(txtMessageErrorGeneral);\n      })\n      .catch((err) => {\n        clearMessageLoading();\n        console.error(err);\n        showMessage(txtMessageErrorGeneral);\n      });\n  };\n\n  const saveClients = async () => {\n    showMessageloading();\n    const data = await clearAndFilterData(clients);\n    ClienteService.insertOne(data)\n      .then((response) => {\n        clearMessageLoading();\n        if (response) {\n          saveHistory();\n          clearClients();\n          showMessage(txtMessageClientsSaved);\n        } else {\n          showMessage(txtMessageErrorGeneral);\n        }\n      })\n      .catch((error) => {\n        clearMessageLoading();\n        console.error(error);\n        showMessage(txtMessageErrorGeneral);\n      });\n  };\n\n  const clearAllClients = () => {\n    setAllClients([]);\n    setAllClientsText(\"\");\n    showMessage({\n      type: \"info\",\n      title: \"Se han limpiado todos expedientes\",\n      description: \"Limpiado\",\n    });\n  };\n  const clearClients = () => {\n    setClients([]);\n    setClientsText(\"\");\n    showMessage({\n      type: \"info\",\n      title: \"Se han limpiado los expedientes\",\n      description: \"Limpiado\",\n    });\n  };\n\n  const clearMessageLoading = () => {\n    toast.current.clear();\n  };\n\n  const showMessageloading = () => {\n    toast.current.show({\n      severity: \"info\",\n      sticky: true,\n      content: (\n        <div className=\"p-flex p-flex-column\" style={{ flex: \"1\" }}>\n          <div className=\"p-text-center\">\n            <i\n              className=\"pi pi-spin pi-spinner\"\n              style={{ fontSize: \"3em\" }}\n            ></i>\n            <h4>{txtSmsLoading[0]}</h4>\n            <p>{txtSmsLoading[1]}</p>\n          </div>\n        </div>\n      ),\n    });\n  };\n\n  const saveHistory = () => {\n    HistorialService.insertOne(3);\n  };\n\n  const showMessage = ({ type, title, description }) => {\n    toast.current.show({\n      severity: type,\n      summary: title,\n      detail: description,\n      life: 3000,\n    });\n  };\n\n  return (\n    <>\n      <BreadCrumb\n        model={[{ label: txtTitleClients }]}\n        home={{ icon: \"pi pi-home\" }}\n      />\n      <Toast ref={toast} />\n      <div className=\"p-grid\">\n        <div className=\"p-col p-p-3\">\n          <h1>{txtTitleClients}</h1>\n          <div>\n            {txtLastUpdateClients}\n            {moment(resume.ultimaModificacionClientes).format(\"LLLL\")}\n          </div>\n          <div className=\"p-grid p-mt-3\">\n            <div className=\"p-col-12 p-sm-6\">\n              <div className=\"p-grid\">\n                <div className=\"p-col-12 p-sm-8\">\n                  <h2>\n                    Guardar todos los expedientes :{\" \"}\n                    <span>{allClients.length}</span>\n                  </h2>\n                </div>\n                <div className=\"p-col-12 p-sm-4 p-mt-0 p-mt-sm-2\">\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-times\"\n                    label=\"Limpiar\"\n                    className=\"p-button-info p-mr-1\"\n                    onClick={clearAllClients}\n                    disabled={allClients.length <= 0}\n                  />\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-save\"\n                    label=\"Guardar\"\n                    className=\"p-button-success\"\n                    onClick={saveAllClients}\n                    disabled={allClients.length <= 0}\n                  />\n                </div>\n              </div>\n              <InputTextarea\n                value={allClientsText}\n                rows={20}\n                autoResize\n                style={{ width: \"100%\" }}\n                onChange={(e) => {\n                  setAllClientsText(e.target.value);\n                  setAllClients(e.target.value.split(\"\\n\"));\n                }}\n              />\n            </div>\n            <div className=\"p-col-12 p-sm-6\">\n              <div className=\"p-grid\">\n                <div className=\"p-col\">\n                  <h2>\n                    Añadir más expedientes : <span>{clients.length}</span>\n                  </h2>\n                </div>\n                <div className=\"p-col-12 p-sm-4 p-mt-0 p-mt-sm-2\">\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-times\"\n                    label=\"Limpiar\"\n                    className=\"p-button-info p-mr-1\"\n                    onClick={clearClients}\n                    disabled={clients.length <= 0}\n                  />\n                  <Button\n                    type=\"button\"\n                    icon=\"pi pi-save\"\n                    label=\"Guardar\"\n                    className=\"p-button-warning\"\n                    onClick={saveClients}\n                    disabled={clients.length <= 0}\n                  />\n                </div>\n              </div>\n              <InputTextarea\n                value={clientsText}\n                rows={20}\n                autoResize\n                style={{ width: \"100%\" }}\n                onChange={(e) => {\n                  setClientsText(e.target.value);\n                  setClients(e.target.value.split(\"\\n\"));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport MenuTop from \"../organisms/MenuTop\";\nimport ClientsTemplate from '../templates/ClientsTemplate'\nimport {useHistory} from \"react-router-dom\";\n\nexport default function ClientsPage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n     return (\n          <>\n              <MenuTop/>\n              <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ClientsTemplate />\n                </div>\n            </div>\n          </>\n     )\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtMessageUserPasswordSuccess,\n    txtMessageUserPasswordError,\n    txtTitlePersonalData,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtDesactiveActiveFieldsLabel,\n    txtUpdateInformationLabel,\n    txtPasswordCurrentlyLabel,\n    txtPasswordCurrentlyHelp,\n    txtNewPasswordLabel,\n    txtNewPasswordHelp,\n    txtRepeatNewPasswordLabel,\n    txtRepeatNewPasswordHelp,\n    txtUpdatePassword,\n    txtMessageErrorGeneral,\n    txtCheckPasswords,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function PersonalData() {\n    // ? Controla la habilitación y deshabilitación de todos los campos\n    const [activePersonalFields, setActivePersonalFields] = useState(true);\n    const [activePasswordFields, setActivePasswordFields] = useState(true);\n    const toast = useRef(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    function changePassword({contraseñaActual, nuevaContraseña, repetirNuevaContraseña,}) {\n        UsuarioService.changePassword(\n            userInfo.correo,\n            contraseñaActual,\n            nuevaContraseña,\n            repetirNuevaContraseña\n        )\n            .then((response) => {\n                if (response.data) {\n                    showMessage(txtMessageUserPasswordSuccess);\n                    localStorage.clear();\n                    history.push(\"/\");\n                } else {\n                    txtMessageErrorGeneral.description = txtCheckPasswords;\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                setUserInfo(response.data);\n                localStorage.setItem(\"userActive\", JSON.stringify(userInfo));\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    //? Aquí se guarda la información de la persona que está operando el sistema\n    const [userInfo, setUserInfo] = useState({\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    });\n\n    // ? Aquí se guarda la información del cambio de contraseña\n    const [userPassword, setUserPassword] = useState({\n        contraseñaActual: \"****\",\n        nuevaContraseña: \"****\",\n        repetirNuevaContraseña: \"****\",\n    });\n\n    //? Valida los valores de userInfo y cambiar datos\n    const checkFormInfoUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = userInfo;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            updateOne(userInfo);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n    };\n\n    //? Valida los valores de userPassword  y cambiar datos\n    const checkFormPasswordUser = () => {\n        const {contraseñaActual, nuevaContraseña, repetirNuevaContraseña} =\n            userPassword;\n        if (\n            Validations.validatePassworsNoEmpty(\n                contraseñaActual,\n                nuevaContraseña,\n                repetirNuevaContraseña\n            )\n        ) {\n            if (nuevaContraseña === repetirNuevaContraseña) {\n                changePassword(userPassword);\n            } else {\n                showMessage(txtMessageUserPasswordError);\n            }\n        } else {\n            showMessage(txtMessageUserPasswordError);\n        }\n    };\n\n    //? Cambiar el contenido de los input (Solo es diseño)\n    const handleContentPasswordUser = () => {\n        setActivePasswordFields(!activePasswordFields);\n        if (activePasswordFields) {\n            setUserPassword({\n                contraseñaActual: \"\",\n                nuevaContraseña: \"\",\n                repetirNuevaContraseña: \"\",\n            });\n        } else {\n            setUserPassword({\n                contraseñaActual: \"****\",\n                nuevaContraseña: \"****\",\n                repetirNuevaContraseña: \"****\",\n            });\n        }\n    };\n\n    //? Muestra los mensajes de los Toast\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast}/>\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitlePersonalData}</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                        <InputText\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.nombre}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    nombre: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.nombre && \"p-invalid\"}\n                        />\n                        {!userInfo.nombre && (\n                            <small id=\"nombre-help\" className=\"p-error p-d-block\">\n                                {txtNameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"primerApellido\">\n                            {txtFistSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"primerApellido\"\n                            name=\"primerApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.primerApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    primerApellido: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.primerApellido && \"p-invalid\"}\n                        />\n                        {!userInfo.primerApellido && (\n                            <small id=\"primerApellido-help\" className=\"p-error p-d-block\">\n                                {txtFistSurnameHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"segundoApellido\">\n                            {txtSecondSurnameLabel}\n                        </label>\n                        <InputText\n                            id=\"segundoApellido\"\n                            name=\"segundoApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.segundoApellido}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    segundoApellido: e.target.value,\n                                });\n                            }}\n                        />\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"fechaDeNacimiento\">\n                            {txtDateOfBirthLabel}\n                        </label>\n                        <Calendar\n                            id=\"fechaDeNacimiento\"\n                            name=\"fechaDeNacimiento\"\n                            monthNavigator\n                            yearNavigator\n                            showIcon\n                            yearRange=\"1950:2010\"\n                            dateFormat=\"yy-mm-dd\"\n                            placeholder={\n                                userInfo.fechaDeNacimiento.split(\"T\")[0]\n                            }\n                            disabled={activePersonalFields}\n                            value={userInfo.fechaDeNacimiento}\n                            onChange={(e) => {\n                                let result = Validations.convertOnlyInputDate(\n                                    e.target.value\n                                );\n                                setUserInfo({\n                                    ...userInfo,\n                                    fechaDeNacimiento: result,\n                                });\n                            }}\n                        />\n                        {!userInfo.fechaDeNacimiento && (\n                            <small\n                                id=\"fechaDeNacimiento-help\"\n                                className=\"p-error p-d-block\"\n                            >\n                                {txtDateOfBirthHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                        <InputText\n                            id=\"correo\"\n                            name=\"correo\"\n                            type=\"correo\"\n                            disabled={activePersonalFields}\n                            value={userInfo.correo}\n                            onChange={(e) => {\n                                setUserInfo({\n                                    ...userInfo,\n                                    correo: e.target.value,\n                                });\n                            }}\n                            className={!userInfo.correo && \"p-invalid\"}\n                        />\n                        {!userInfo.correo && (\n                            <small id=\"correo-help\" className=\"p-error p-d-block\">\n                                {txtEmailHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            setActivePersonalFields(!activePersonalFields);\n                        }}\n                    />\n                    <Button\n                        label={txtUpdateInformationLabel}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePersonalFields}\n                        onClick={checkFormInfoUser}\n                    />\n                </div>\n            </div>\n            <div className=\"p-col p-p-3\">\n                <h2>Cambio de contraseña</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"p-field\">\n                        <label htmlFor=\"contraseñaActual\">\n                            {txtPasswordCurrentlyLabel}\n                        </label>\n                        <Password\n                            id=\"contraseñaActual\"\n                            name=\"contraseñaActual\"\n                            toggleMask\n                            feedback={false}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.contraseñaActual}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    contraseñaActual: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.contraseñaActual && (\n                            <small id=\"contraseñaActual-help\" className=\"p-error p-d-block\">\n                                {txtPasswordCurrentlyHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"nuevaContraseña\">\n                            {txtNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"nuevaContraseña\"\n                            name=\"nuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.nuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    nuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.nuevaContraseña && (\n                            <small id=\"nuevaContraseña-help\" className=\"p-error p-d-block\">\n                                {txtNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                    <div className=\"p-field\">\n                        <label htmlFor=\"repetirNuevaContraseña\">\n                            {txtRepeatNewPasswordLabel}\n                        </label>\n                        <Password\n                            id=\"repetirNuevaContraseña\"\n                            name=\"repetirNuevaContraseña\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.repetirNuevaContraseña}\n                            onChange={(e) => {\n                                setUserPassword({\n                                    ...userPassword,\n                                    repetirNuevaContraseña: e.target.value,\n                                });\n                            }}\n                        />\n                        {!userPassword.repetirNuevaContraseña && (\n                            <small id=\"repetirNuevaContraseña-help\" className=\"p-error p-d-block\">\n                                {txtRepeatNewPasswordHelp}\n                            </small>\n                        )}\n                    </div>\n                </div>\n                <div className=\"p-text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {\n                            handleContentPasswordUser();\n                        }}\n                    />\n                    <Button\n                        label={txtUpdatePassword}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePasswordFields}\n                        onClick={checkFormPasswordUser}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Toast} from \"primereact/toast\";\nimport {Toolbar} from \"primereact/toolbar\";\nimport {InputSwitch} from \"primereact/inputswitch\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Badge} from \"primereact/badge\";\nimport Validations from \"../../utils/Validations\";\nimport {\n    txtMessageUserSuccess,\n    txtMessageUserError,\n    txtNameLabel,\n    txtNameHelp,\n    txtFistSurnameLabel,\n    txtFistSurnameHelp,\n    txtSecondSurnameLabel,\n    txtDateOfBirthLabel,\n    txtDateOfBirthHelp,\n    txtEmailLabel,\n    txtEmailHelp,\n    txtMessageUserDelete,\n    txtRestartPasswordTitle,\n    txtRestartPasswordContent,\n    txtYES,\n    txtNO,\n    txtCancelButton,\n    txtSaveButton,\n    txtNewUserButton,\n    txtExport,\n    txtSearch,\n    txtTitleCrud,\n    txtFooterTableLabel,\n    txtUserDetails,\n    txtSuperAdminLabel,\n    txtDeleteUserTitle,\n    txtDeleteUserContent,\n    txtMessageUserPasswordReset,\n    txtMessageErrorGeneral,\n} from \"../../utils/Strings\";\nimport UsuarioService from \"../../service/UsuarioService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nexport default function CrudUsers() {\n    let emptyUser = {\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    };\n\n    const [users, setUsers] = useState([]);\n    const [userDialog, setUserDialog] = useState(false);\n    const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n    const [selectedUsers, setSelectedUsers] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(\"\");\n    const [user, setUser] = useState(emptyUser);\n    const [saveOrUpdate, setSaveOrUpdate] = useState(false);\n    const [detailsUser, setDetailsUser] = useState(false);\n    const [detailUserChange, setDetailUserChange] = useState({});\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    useEffect(() => {\n        getAll();\n    }, []);\n\n    const getAll = ()=> {\n        UsuarioService.getAll()\n            .then((response) => {\n                setUsers(response.data);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function insertOne(user) {\n        UsuarioService.insertOne(user)\n            .then((response) => {\n                setDetailUserChange(response.data);\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function removeOne(email) {\n        UsuarioService.removeOne(email)\n            .then((response) => {\n                if (response.data) {\n                    getAll();\n                    showMessage(txtMessageUserDelete);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function resetPasswordUser(email) {\n        UsuarioService.resetPassword(email)\n            .then((response) => {\n                if (response.data) {\n                    setDetailUserChange(response.data);\n                    hideDetailsUser();\n                    showMessage(txtMessageUserPasswordReset);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    const openNew = () => {\n        setUser(emptyUser);\n        setUserDialog(true);\n        setSaveOrUpdate(true);\n    };\n\n    const hideDialog = () => {\n        setUserDialog(false);\n    };\n\n    const hideDeleteUserDialog = () => {\n        setDeleteUserDialog(false);\n    };\n\n    const hideDetailsUser = () => setDetailsUser(!detailsUser);\n\n    const saveUser = () => {\n        const {\n            nombre,\n            primerApellido,\n            segundoApellido,\n            fechaDeNacimiento,\n            correo,\n        } = user;\n        if (\n            Validations.validateFormUser(\n                nombre,\n                primerApellido,\n                segundoApellido,\n                fechaDeNacimiento,\n                correo\n            )\n        ) {\n            if (saveOrUpdate) {\n                insertOne(user);\n                hideDetailsUser();\n            } else {\n                updateOne(user);\n            }\n            setSaveOrUpdate(false);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n        setUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const editUser = (user) => {\n        setUser({...user});\n        setUserDialog(true);\n    };\n\n    const confirmDeleteUser = (user) => {\n        setUser(user);\n        setDeleteUserDialog(true);\n    };\n\n    const deleteUser = () => {\n        removeOne(user.correo);\n        setDeleteUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const exportCSV = () => {\n        dt.current.exportCSV();\n    };\n\n    const resetPassword = (user) => {\n        resetPasswordUser(user.correo);\n        toast.current.clear();\n    };\n\n    const showConfirmResetPassword = (rowData) => {\n        toast.current.show({\n            severity: \"warn\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{flex: \"1\"}}>\n                    <div className=\"p-text-center\">\n                        <i className=\"pi pi-exclamation-triangle\" style={{fontSize: \"3rem\"}}></i>\n                        <h4>{txtRestartPasswordTitle}</h4>\n                        <p>{txtRestartPasswordContent}</p>\n                    </div>\n                    <div className=\"p-grid p-fluid\">\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtYES}\n                                className=\"p-button-success\"\n                                onClick={() => resetPassword(rowData)}\n                            />\n                        </div>\n                        <div className=\"p-col\">\n                            <Button\n                                type=\"button\"\n                                label={txtNO}\n                                className=\"p-button-danger\"\n                                onClick={() => {\n                                    toast.current.clear();\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                <Button\n                    icon=\"pi pi-pencil\"\n                    className=\"p-button-rounded p-button-info p-mr-2\"\n                    onClick={() => editUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-trash\"\n                    className=\"p-button-rounded p-button-danger p-mr-2\"\n                    onClick={() => confirmDeleteUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-replay\"\n                    className=\"p-button-rounded p-button-warning\"\n                    onClick={() => showConfirmResetPassword(rowData)}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const adminBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                {rowData.superAdmin ? (\n                    <Badge value={txtYES} severity=\"success\" className=\"p-mr-2\"/>\n                ) : (\n                    <Badge value={txtNO} className=\"p-mr-2\" severity=\"danger\"/>\n                )}\n            </React.Fragment>\n        );\n    };\n\n    const dateBirthBodyTemplane = (rowData) => {\n        return (\n            <React.Fragment>\n                <div>{moment(rowData.fechaDeNacimiento).format(\"LL\")}</div>\n            </React.Fragment>\n        );\n    };\n\n    const userDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtCancelButton}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDialog}\n            />\n            <Button\n                label={txtSaveButton}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={saveUser}\n            />\n        </React.Fragment>\n    );\n\n    const deleteUserDialogFooter = (\n        <React.Fragment>\n            <Button\n                label={txtNO}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDeleteUserDialog}\n            />\n            <Button\n                label={txtYES}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={deleteUser}\n            />\n        </React.Fragment>\n    );\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtNewUserButton}\n                    icon=\"pi pi-plus\"\n                    className=\"p-button-success p-mr-2\"\n                    onClick={openNew}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <Button\n                    label={txtExport}\n                    icon=\"pi pi-download\"\n                    className=\"p-button\"\n                    style={{backgroundColor: \"var(--teal-600)\"}}\n                    onClick={exportCSV}\n                />\n            </React.Fragment>\n        );\n    };\n\n    const header = (\n        <div className=\"table-header\">\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\"/>\n                <InputText\n                    type=\"search\"\n                    value={globalFilter}\n                    onInput={(e) => setGlobalFilter(e.target.value)}\n                    placeholder={txtSearch}\n                />\n            </span>\n        </div>\n    );\n\n    return (\n        <div className=\"p-grid\">\n            <Toast ref={toast}/>\n            <div className=\"p-col p-p-3\">\n                <h2>{txtTitleCrud}</h2>\n                <div className=\"card\">\n                    <Toolbar\n                        className=\"p-mb-4\"\n                        left={leftToolbarTemplate}\n                        right={rightToolbarTemplate}\n                    />\n                    <DataTable\n                        ref={dt}\n                        value={users}\n                        selection={selectedUsers}\n                        onSelectionChange={(e) => setSelectedUsers(e.value)}\n                        dataKey=\"correo\"\n                        paginator\n                        rows={7}\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate={txtFooterTableLabel}\n                        globalFilter={globalFilter}\n                        header={header}\n                        emptyMessage=\"Sin ningun usuario aún\"\n                    >\n                        <Column field=\"nombre\" header=\"Nombre\" sortable/>\n                        <Column\n                            field=\"primerApellido\"\n                            header=\"Primer apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"segundoApellido\"\n                            header=\"Segundo apellido\"\n                            sortable\n                        />\n                        <Column\n                            field=\"fechaDeNacimiento\"\n                            header=\"Fecha de nacimiento\"\n                            body={dateBirthBodyTemplane}\n                            sortable\n                        />\n                        <Column\n                            field=\"correo\"\n                            header=\"Correo electrónico\"\n                            sortable\n                        />\n                        <Column\n                            field=\"superAdmin\"\n                            header=\"Super administrador\"\n                            body={adminBodyTemplate}\n                        />\n                        <Column header=\"Acciones\" body={actionBodyTemplate}/>\n                    </DataTable>\n                    <Dialog\n                        visible={userDialog}\n                        style={{width: \"450px\"}}\n                        header={txtUserDetails}\n                        modal\n                        className=\"p-fluid\"\n                        footer={userDialogFooter}\n                        onHide={hideDialog}>\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                                <InputText\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    type=\"text\"\n                                    value={user.nombre}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            nombre: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.nombre && \"p-invalid\"}\n                                />\n                                {!user.nombre && (\n                                    <small id=\"nombre-help\" className=\"p-error p-d-block\">\n                                        {txtNameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"primerApellido\">\n                                    {txtFistSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"primerApellido\"\n                                    name=\"primerApellido\"\n                                    type=\"text\"\n                                    value={user.primerApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            primerApellido: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.primerApellido && \"p-invalid\"}\n                                />\n                                {!user.primerApellido && (\n                                    <small id=\"primerApellido-help\" className=\"p-error p-d-block\">\n                                        {txtFistSurnameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"segundoApellido\">\n                                    {txtSecondSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"segundoApellido\"\n                                    name=\"segundoApellido\"\n                                    type=\"text\"\n                                    value={user.segundoApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            segundoApellido: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"fechaDeNacimiento\">\n                                    {txtDateOfBirthLabel}\n                                </label>\n                                <Calendar\n                                    id=\"fechaDeNacimiento\"\n                                    name=\"fechaDeNacimiento\"\n                                    monthNavigator\n                                    yearNavigator\n                                    yearRange=\"1950:2010\"\n                                    showIcon\n                                    placeholder={\n                                        user.fechaDeNacimiento.split(\"T\")[0]\n                                    }\n                                    dateFormat=\"yy-mm-d\"\n                                    value={user.fechaDeNacimiento}\n                                    onChange={(e) => {\n                                        let result =\n                                            Validations.convertOnlyInputDate(\n                                                e.target.value\n                                            );\n                                        setUser({\n                                            ...user,\n                                            fechaDeNacimiento: result,\n                                        });\n                                    }}\n                                />\n                                {!user.fechaDeNacimiento && (\n                                    <small id=\"fechaDeNacimiento-help\" className=\"p-error p-d-block\">\n                                        {txtDateOfBirthHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                                <InputText\n                                    id=\"correo\"\n                                    name=\"correo\"\n                                    type=\"email\"\n                                    value={user.correo}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            correo: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.correo && \"p-invalid\"}\n                                />\n                                {!user.correo && (\n                                    <small id=\"correo-help\" className=\"p-error p-d-block\">\n                                        {txtEmailHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"p-field p-text-center\">\n                                <label htmlFor=\"superAdmin\">\n                                    {txtSuperAdminLabel}\n                                </label>\n                                <br/>\n                                <InputSwitch\n                                    id=\"superAdmin\"\n                                    name=\"superAdmin\"\n                                    checked={user.superAdmin}\n                                    onChange={(e) =>\n                                        setUser({\n                                            ...user,\n                                            superAdmin: !user.superAdmin,\n                                        })\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={deleteUserDialog}\n                        style={{width: \"450px\"}}\n                        header={txtDeleteUserTitle}\n                        modal\n                        footer={deleteUserDialogFooter}\n                        onHide={hideDeleteUserDialog}>\n                        <div className=\"confirmation-content\">\n                            {txtDeleteUserContent}\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={detailsUser}\n                        style={{width: \"450px\"}}\n                        header={\"Detalles de usuario\"}\n                        draggable={false}\n                        onHide={hideDetailsUser}\n                        footer={\n                            <Button\n                                label=\"¡Listo!\"\n                                className=\"p-button-success\"\n                                onClick={hideDetailsUser}\n                            />\n                        }>\n                        <div>\n                            Nombre completo:{\" \"}\n                            <span>{`${detailUserChange.nombre} ${detailUserChange.primerApellido} ${detailUserChange.segundoApellido}`}</span>\n                        </div>\n                        <div>\n                            Fecha de nacimiento:{\" \"}\n                            <span>{`${moment(detailUserChange.fechaDeNacimiento).format(\"LLL\")}`}</span>\n                        </div>\n                        <div>\n                            Correo: <span>{`${detailUserChange.correo}`}</span>\n                        </div>\n                        <div>\n                            Contraseña creada:{\" \"}\n                            <span>{`${detailUserChange.contrasena}`}</span>\n                            <p><i>Favor de guardar y cambiar la contraseña más tarde</i></p>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport PersonalData from \"../organisms/PersonalData\";\nimport CrudUsers from \"../organisms/CrudUsers\";\nimport {\n    txtTitleProfile,\n    txtTabPersonalData,\n    txtTabUserTable,\n} from \"../../utils/Strings\";\n\nexport default function ProfileTemplate() {\n    const [userInfo, setUserInfo] = useState({\n        superAdmin: false,\n    });\n\n    useEffect(() => {\n        getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    return (\n        <>\n            <BreadCrumb\n                model={[{ label: txtTitleProfile }]}\n                home={{ icon: \"pi pi-home\" }}\n            />\n            <div className=\"p-grid\">\n                <div className=\"p-col\">\n                    <TabView>\n                        <TabPanel\n                            header={txtTabPersonalData}\n                            leftIcon=\"pi pi-fw pi-user\"\n                        >\n                            <PersonalData />\n                        </TabPanel>\n                        {userInfo.superAdmin ? (\n                            <TabPanel\n                                header={txtTabUserTable}\n                                leftIcon=\"pi pi-fw pi-pencil\"\n                            >\n                                <CrudUsers />\n                            </TabPanel>\n                        ) : (\n                            <div className=\"disable\"></div>\n                        )}\n                    </TabView>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport ProfileTemplate from '../templates/ProfileTemplate';\nimport MenuTop from \"../organisms/MenuTop\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function ProfilePage() {\n    const history = useHistory();\n    if (localStorage.getItem(\"userActive\") === null) history.push(\"/\");\n    return (\n        <>\n            <MenuTop/>\n            <div className=\"p-grid p-d-flex\">\n                <div className=\"p-col-10 p-offset-1\">\n                    <ProfileTemplate/>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from \"react\";\nimport \"../../assets/css/MyCustom.css\";\nimport {txtAltLogoImg, txt404, txtPageNotFound, txtPageError,} from \"../../utils/Strings\";\nimport logonovopatent from \"../../assets/img/logonovopatent.jpg\";\n\nexport default function ErrorPage() {\n    return (\n        <div className=\"p-d-flex p-ai-center p-jc-center pageerror\">\n            <div className=\"p-col-6\">\n                <div className=\"p-text-center\">\n                    <img src={logonovopatent} alt={txtAltLogoImg} height=\"100px\"/>\n                    <div style={{fontSize: \"8em\", color: \"#454545\"}}>{txt404}</div>\n                    <div style={{fontSize: \"3em\", color: \"#454545\"}}>{txtPageNotFound}</div>\n                    <div style={{fontSize: \"1.5em\", color: \"#454545\"}}>{txtPageError}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import \"primereact/resources/themes/tailwind-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport React from \"react\";\nimport { locale, addLocale } from \"primereact/api\";\nimport { localLocation } from \"./utils/Strings\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport HomePage from \"./components/pages/HomePage\";\nimport PatentPage from \"./components/pages/PatentPage\";\nimport BrandPage from \"./components/pages/BrandPage\";\nimport InformationPage from \"./components/pages/ClientsPage\";\nimport ProfilePage from \"./components/pages/ProfilePage\";\nimport ErrorPage from \"./components/pages/ErrorPage\";\naddLocale(\"es\", localLocation);\nlocale(\"es\");\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/inicio\" component={HomePage} />\n                <Route path=\"/patentes\" component={PatentPage} />\n                <Route path=\"/marcas\" component={BrandPage} />\n                <Route path=\"/expedientes\" component={InformationPage} />\n                <Route path=\"/perfil\" component={ProfilePage} />\n                <Route component={ErrorPage} />\n            </Switch>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}