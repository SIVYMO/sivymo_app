{"version":3,"sources":["utils/Strings.js","utils/LocalStorage.js","utils/Validations.js","assets/img/logo.jpg","service/API.js","service/Endpoints.js","service/UsuarioService.js","pages/Login.jsx","pages/ErrorPage.jsx","components/Header.jsx","service/ResumeService.js","pages/HomePage.jsx","service/APIScraping.js","service/ScrapingService.js","service/HistorialService.js","utils/Colors.js","service/ClienteService.js","components/SearchDialog.jsx","pages/PatentPage.jsx","pages/BrandPage.jsx","components/ClientsDialog.jsx","pages/ClientPage.jsx","components/Perfil.jsx","components/CrudUsers.jsx","pages/ProfilePage.jsx","utils/Modules.js","App.js","index.js"],"names":["txtLastQueryPatent","txtLastQueryBrand","txtLastUpdateClients","txtConfirmExit","txtExit","txtAltLogoImg","txtLogoutButton","txtEmailValid","txtPasswordValid","txtMessageSucces","type","title","description","txtMessageLoading","txtLogin","txtFillFields","txtEmailLabel","txtPasswordLabel","txtLoginButton","txtCancelButton","txtMessageLoginError","txt404","txtPageNotFound","txtMessageUserSuccess","txtMessageUserError","txtMessageUserDelete","txtMessageUserPasswordSuccess","txtMessageUserPasswordError","txtMessageUserPasswordReset","txtMessageErrorGeneral","txtTitlePersonalData","txtNameLabel","txtNameHelp","txtFistSurnameLabel","txtFistSurnameHelp","txtSecondSurnameLabel","txtDateOfBirthLabel","txtDateOfBirthHelp","txtEmailHelp","txtDesactiveActiveFieldsLabel","txtUpdateInformationLabel","txtUpdatePassword","txtPasswordCurrentlyLabel","txtPasswordCurrentlyHelp","txtNewPasswordLabel","txtNewPasswordHelp","txtRepeatNewPasswordLabel","txtRepeatNewPasswordHelp","txtRestartPasswordTitle","txtRestartPasswordContent","txtYES","txtNO","txtSaveButton","txtNewUserButton","txtExport","txtSearch","txtTitleCrud","txtFooterTableLabel","txtUserDetails","txtSuperAdminLabel","txtDeleteUserTitle","txtDeleteUserContent","txtCheckPasswords","txtSmsLoading","txtMessageClientsSaved","txtTitleClients","txtClearButton","txtClearMessages","txtSaveClientsButton","txtExportButton","txtStartSearchButton","txtNoData","txtTitlePatents","txtTitleBrands","txtMessageNoClients","txtMessageSearchError","txtSubtitleBrand","txtSubitlePatent1","txtSubitlePatent2","txtSubitlePatent3","txtLodaing","txtStartSearch","txtInstructionsSearch","txtDatesRange","txtNoDataSearch","txtDataSearch","KEY_USER_ACTIVE","KEY_HISTORY","setUser","payload","localStorage","setItem","JSON","stringify","getUser","parse","getItem","getHistory","cleanLocalStorage","removeItem","clear","validateEmail","email","test","validateNames","name","flag","i","length","indexOf","charAt","validateSecondSurname","surname","this","convertAPIDate","date","String","split","replaceAll","convertInputDate","tempDate","cutDate","substring","convertOnlyInputDate","validateDateStartEnd","dateStart","dateEnd","validateFormUser","first","second","dateBirth","validatePassworsNoEmpty","curently","newPas","repeat","validateSameEmail","userEmail","userEmailInfo","AXIOS","axios","create","baseURL","headers","resetPassword","API","put","concat","changePassword","oldPassword","newPassword","login","obj","post","getAll","get","getOne","id","insertOne","updateOne","removeOne","delete","Login","navigate","useNavigate","emailInput","setEmailInput","useState","passwordInput","setPasswordInput","emailErrorSms","setEmailErrorSms","passwordErrorSms","setPasswordErrorSms","emailUIError","setEmailUIError","passwordUIError","setPasswordUIError","toastMessages","useRef","clearMessages","current","showMessage","_ref","show","severity","summary","detail","sticky","_jsx","className","children","_jsxs","Toast","ref","src","Logo","alt","height","style","fontSize","fontWeight","htmlFor","InputText","value","maxLength","onChange","e","target","Password","toggleMask","feedback","Button","label","icon","onClick","Validations","userLogin","correo","contrasena","UsuarioService","then","response","data","usuario","catch","err","console","error","ErrorPage","Image","Header","MENU","command","start","end","confirmLogout","confirmDialog","message","header","draggable","acceptClassName","rejectClassName","accept","_Fragment","ConfirmDialog","Menubar","model","Outlet","getResume","HomePage","userInfo","setUserInfo","resume","setResume","ultimaBusquedaPatentes","ultimaBusquedaMarcas","ultimaModificacionClientes","clientesTotales","useEffect","ResumeService","Card","_ref2","text","moment","format","nombre","primerApellido","locale","getPatentes","getMarcas","dark_sea_green","deleteBulk","getAllRaw","insertAll","SearchDialog","setPayload","loading","setLoading","setStartSearch","showDialog","setShowDialog","dates","setDates","toast","getClients","ClienteService","resp","datos","finally","confirmStartSearch","Dialog","showHeader","visible","closable","onHide","ProgressBar","mode","color","Calendar","selectionMode","touchUI","showIcon","dateFormat","disabled","descargado","fechaInicio","toISOString","fechaFin","Checkbox","inputId","checked","async","PatentPage","startSearch","data1","setData1","data2","setData2","data3","setData3","dt1","dt2","dt3","getScrapingData","ScrapingService","viewData","HistorialService","log","code","BreadCrumb","home","exports","exportCSV","DataTable","emptyMessage","paginator","rows","Column","field","sortable","body","rowdata","href","rel","scrollable","BrandPage","setData","headerStyle","width","ClientsDialog","setSaved","clients","setClients","clientsText","setClientsText","openDialog","clearAndFilterData","arguments","undefined","newData","item","trim","push","clearClients","clearMessageLoading","showMessageloading","content","flex","life","InputTextarea","autoResize","ClientPage","saved","selected","setSelected","confirmDelete","selection","onSelectionChange","rowsPerPageOptions","filter","rowData","Perfil","activePersonalFields","setActivePersonalFields","activePasswordFields","setActivePasswordFields","segundoApellido","fechaDeNacimiento","superAdmin","userPassword","setUserPassword","contrasenaActual","nuevaContrasena","repetirnuevaContrasena","monthNavigator","yearNavigator","yearRange","placeholder","result","checkFormInfoUser","user","handleContentPasswordUser","checkFormPasswordUser","setTimeout","emptyUser","CrudUsers","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","selectedUsers","setSelectedUsers","globalFilter","setGlobalFilter","saveOrUpdate","setSaveOrUpdate","detailsUser","setDetailsUser","detailUserChange","setDetailUserChange","dt","openNew","hideDialog","hideDeleteUserDialog","hideDetailsUser","userDialogFooter","saveUser","deleteUserDialogFooter","deleteUser","onInput","Toolbar","leftToolbarTemplate","rightToolbarTemplate","backgroundColor","dataKey","paginatorTemplate","currentPageReportTemplate","Badge","editUser","confirmDeleteUser","showConfirmResetPassword","modal","footer","InputSwitch","ProfilePage","TabView","TabPanel","leftIcon","MODULES","path","element","errorElement","App","ROUTER","createHashRouter","loader","validateIsLogOut","Response","status","validateIsLogIn","RouterProvider","router","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","reject","choose","upload","cancel","passwordPrompt","weak","medium","strong","matchAll","matchAny","addRule","removeRule","rangeStart","rangeEnd","startsWith","contains","notContains","endsWith","equals","notEquals","apply","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a96ea71f.chunk.js","sourcesContent":["// ? Locale\nexport const localLocation = {\n    firstDayOfWeek: 1,\n    dayNames: [\n        \"domingo\",\n        \"lunes\",\n        \"martes\",\n        \"miércoles\",\n        \"jueves\",\n        \"viernes\",\n        \"sábado\",\n    ],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"Mi\", \"J\", \"V\", \"S\"],\n    monthNames: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n    ],\n    monthNamesShort: [\n        \"Ene\",\n        \"Feb\",\n        \"Mar\",\n        \"Abr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Ago\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dic\",\n    ],\n    today: \"Hoy\",\n    clear: \"Limpiar\",\n    accept: \"Si\",\n    reject: \"No\",\n    choose: \"Elija\",\n    upload: \"Subir\",\n    cancel: \"Cancelar\",\n    passwordPrompt: \"Ingrese contraseña\",\n    weak: \"Débil\",\n    medium: \"Normal\",\n    strong: \"Fuerte\",\n    matchAll: \"Coincide con todo\",\n    matchAny: \"Coincide con cualquier\",\n    addRule: \"Agregar regla\",\n    removeRule: \"Eliminar regla\",\n    rangeStart: \"Inicio\",\n    rangeEnd: \"Fin\",\n    startsWith: \"Empieza con\",\n    contains: \"Contiene\",\n    notContains: \"No contiene\",\n    endsWith: \"Termina con\",\n    equals: \"Igual\",\n    notEquals: \"No igual\",\n    apply: \"Aplicar\",\n};\n\n// ? HomePage.jsx\nexport const txtWelcome = \"Hola, bienvenido(a) de nuevo\",\n    txtLastQueryPatent = \"Última búsqueda de patentes: \",\n    txtLastQueryBrand = \"Última búsqueda de marcas: \",\n    txtLastUpdateClients = \"Última actualización en expedientes: \",\n    txtBadgeClients =\"Ingresar expedientes para poder realizar consultas\";\n\n// ? Header.jsx\nexport const txtConfirmExit = \"¿Estás seguro de salir del sistema?\",\n    txtExit = \"Salir\",\n    txtAltLogoImg = \"Logo Novopatent\",\n    txtLogoutButton = \"Salir\";\n\n// ? Login.jsx\nexport const txtEmailValid = \"El email no debe estar vacío y debe ser válido\",\n    txtPasswordValid = \"La contraseña no debe estar vacía\",\n    txtMessageSucces = {\n        type: \"success\",\n        title: \"El código es correcto\",\n        description: \"Redirigiendo...\",\n    },\n    txtMessageLoading = {\n        type: \"info\",\n        title: \"Cargando...\",\n        description: \"Por favor espere\",\n    },\n    txtLogin = \"Inicio de sesión\",\n    txtFillFields = \"Favor de llenar todos los campos\",\n    txtEmailLabel = \"Correo electrónico:\",\n    txtPasswordLabel = \"Contraseña:\",\n    txtLoginButton = \"Iniciar sesión\",\n    txtCancelButton = \"Cancelar\",\n    txtMessageLoginError = {\n        type: \"error\",\n        title: \"Correo electrónico y/o contraseña incorrectos\",\n        description: \"Por favor verifíquelos nuevamente\",\n    };\n\n// ? ErrorPage.jsx\nexport const txt404 = \"404\",\n    txtPageNotFound = \"Página no encontrada\";\n\n// ? ProfilePage.jsx\nexport const txtMessageUserSuccess = {\n        type: \"success\",\n        title: \"Usuario guardado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserError = {\n        type: \"error\",\n        title: \"Campos no válidos\",\n        description:\n            \"Algunos campos tienen caracteres especiales o están vacíos\",\n    },\n    txtMessageUserDelete = {\n        type: \"success\",\n        title: \"Usuario eliminado correctamente\",\n        description: \"Los datos del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordSuccess = {\n        type: \"success\",\n        title: \"Contraseña guardada correctamente\",\n        description: \"La contraseña del usuario se han actualizado\",\n    },\n    txtMessageUserPasswordError = {\n        type: \"error\",\n        title: \"Las contraseñas no coinciden o están vacías\",\n        description: \"Verificar los campos de las contraseñas\",\n    },\n    txtMessageUserPasswordReset = {\n        type: \"success\",\n        title: \"Contraseña restablecida correctamente\",\n        description: \"Se ha cambiado la contraseña\",\n    },\n    txtMessageErrorGeneral = {\n        type: \"error\",\n        title: \"No se ejecutó la operación\",\n        description: \"Intente de nuevo\",\n    },\n    txtTitlePersonalData = \"Tu información\",\n    txtNameLabel = \"Nombre:\",\n    txtNameHelp = \" El nombre no debe estar vacío y debe ser válido\",\n    txtFistSurnameLabel = \"Primer apellido:\",\n    txtFistSurnameHelp =\n        \" El primer apellido no debe estar vacío y debe ser válido\",\n    txtSecondSurnameLabel = \"Segundo apellido:\",\n    txtDateOfBirthLabel = \"Fecha de nacimiento:\",\n    txtDateOfBirthHelp =\n        \"La fecha de nacimiento no debe estar vacía y debe ser válida\",\n    txtEmailHelp =\n        \"El correo electrónico no debe estar vacío y debe ser válido\",\n    txtDesactiveActiveFieldsLabel = \"Habilitar/Deshabilitar campos\",\n    txtUpdateInformationLabel = \"Actualizar información\",\n    txtUpdatePassword = \"Actualizar contraseña\",\n    txtPasswordCurrentlyLabel = \"Contraseña actual:\",\n    txtPasswordCurrentlyHelp = \"La contraseña actual no debe estar vacía\",\n    txtNewPasswordLabel = \"Nueva contraseña:\",\n    txtNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRepeatNewPasswordLabel = \"Repetir nueva contraseña:\",\n    txtRepeatNewPasswordHelp = \"La contraseña nueva no debe estar vacía\",\n    txtRestartPasswordTitle = \"¿Restablecer la contraseña de este usuario?\",\n    txtRestartPasswordContent =\n        \" Se le enviará un correo electrónico a esa persona con la nueva contraseña\",\n    txtYES = \"Si\",\n    txtNO = \"No\",\n    txtSaveButton = \"Guardar\",\n    txtNewUserButton = \"Nuevo usuario\",\n    txtExport = \"Exportar en CSV\",\n    txtSearch = \"Buscar...\",\n    txtTitleCrud = \"Tabla de usuarios\",\n    txtFooterTableLabel =\n        \"Mostrando {first} a {last} de {totalRecords} usuarios\",\n    txtUserDetails = \"Detalles de usuario\",\n    txtSuperAdminLabel = \"Super administrador:\",\n    txtDeleteUserTitle = \"¿Eliminar usuario?\",\n    txtDeleteUserContent =\n        \"El usuario se eliminará permanente de la aplicación\",\n    txtTitleProfile = \"Perfil\",\n    txtTabPersonalData = \"Datos personales\",\n    txtTabUserTable = \"Tabla de usuarios\",\n    txtCheckPasswords = \"Verifica que la contraseña actual sea correcta\"\n\n//  ? ClientPage.js\nexport const txtSmsLoading = [\n        \"Cargando\",\n        \"Espere a que los datos estén listos\",\n    ],\n    txtMessageClientsSaved = {\n        type: \"success\",\n        title: \"Expedientes guardados\",\n        description: \"Se han actualizado correctamente\",\n    },\n    txtTitleClients = \"Expedientes\",\n    txtClearButton = \"Limpiar datos\",\n    txtClearMessages = \"Limpiar mensajes\",\n    txtSaveClientsButton = \"Guardar expedientes\";\n\n// ? PatentPage.jsx\n// ? BrandPage.jsx\nexport const txtExportButton = \"Exportar resultados\",\n    txtStartSearchButton = \"Iniciar con la búsqueda\",\n    txtNoData = \"No hay datos\",\n    txtTitleExtraordinaryExamples = \"Ejemplares extraordinarios\",\n    txtTitlePatents = \"Patentes\",\n    txtTitleBrands = \"Marcas\",\n    txtMessageNoClients = {\n        type: \"error\",\n        title: \"No hay expedientes registrados\",\n        description: \"Registra algunos para realizar búsquedas\",\n    },\n    txtMessageSearchSuccess = {\n        type: \"success\",\n        title: \"Búsqueda realizada con éxito\",\n        description: \"Revisa si hubo coincidencias con los registros\",\n    },\n    txtMessageSearchError = {\n        type: \"error\",\n        title: \"Ocurrió un error de conexión\",\n        description: \"Vuelve a intentarlo de nuevo\",\n    },\n    txtSubtitleBrand = \"Notificación de Resoluciones, Requerimientos y demás Actos\",\n    txtSubitlePatent1 = \"Notificaciones de la Dirección Divisional de Patentes\",\n    txtSubitlePatent2 = \"Patentes, Registros de Modelos de Utilidad y de Diseños Industriales\",\n    txtSubitlePatent3 = \"Requisitos de Examen de Forma y Fondo, Abandonos de Solicitudes de Patentes y Registros\",\n    txtLodaing = \"Realizando las búsquedas necesarias\",\n    txtStartSearch = \"Iniciar búsqueda\",\n    txtInstructionsSearch =\n        \"Puedes colocar alguna fecha en especifico o ignorar y continuar con la búsqueda regular\",\n    txtDateStartLabel = \"Fecha inicio:\",\n    txtDateEndLabel = \"Fecha fin:\",\n    txtDatesRange = 'Rango de fechas',\n    txtNoDataSearch = \"No se encontraron coincidencias\",\n    txtDataSearch = \"Se encontraron coincidencias\"\n","const KEY_USER_ACTIVE = 'userActive';\n\nconst KEY_HISTORY = 'resume';\n\n\nexport function isUserActive() {\n    return localStorage.getItem(KEY_USER_ACTIVE) !== null;\n}\n\nexport function isUserInactive(){\n    return localStorage.getItem(KEY_USER_ACTIVE) === null;\n}\n\n\nexport function setUser(payload) {\n    localStorage.setItem(KEY_USER_ACTIVE, JSON.stringify(payload));\n}\n\nexport function getUser() {\n    return JSON.parse(localStorage.getItem(KEY_USER_ACTIVE));\n}\n\n\nexport function setHistory(payload) {\n    localStorage.setItem(KEY_HISTORY, JSON.stringify(payload));\n}\n\nexport function getHistory() {\n    return JSON.parse(localStorage.getItem(KEY_HISTORY));\n}\n\nexport function cleanLocalStorage() {\n    localStorage.removeItem(KEY_USER_ACTIVE);\n    localStorage.removeItem(KEY_HISTORY);\n    localStorage.clear();\n}\n","/* eslint-disable no-useless-escape */\nconst CHARS =\n    \"áéíóúÁÉÍÓÚabcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ \";\n\nclass Validations {\n    validateEmail(email) {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    validateNames(name) {\n        let flag = true;\n        if (name !== \"\") {\n            for (let i = 0; i < name.length; i++) {\n                if (CHARS.indexOf(name.charAt(i)) === -1) {\n                    flag = false;\n                    break;\n                }\n            }\n        } else {\n            return false;\n        }\n        return flag;\n    }\n\n    validateSecondSurname(surname) {\n        if (surname === \"\") {\n            return true;\n        } else {\n            return this.validateNames(surname);\n        }\n    }\n\n    convertAPIDate(date) {\n        let tempDate = String(date).split(\"T\")[0];\n        return tempDate.replaceAll(\"-\", \"/\");\n    }\n\n    convertInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        let cutDate = tempDate.substring(1, tempDate.length - 1);\n        return this.convertAPIDate(cutDate);\n    }\n\n    convertOnlyInputDate(date) {\n        let tempDate = JSON.stringify(date);\n        return tempDate.substring(1, tempDate.length - 1);\n    }\n\n    validateDateStartEnd(dateStart, dateEnd) {\n        return dateStart !== \"\" && dateEnd !== \"\";\n    }\n\n    validateFormUser(name, first, second, dateBirth, email) {\n        return this.validateNames(name) &&\n            this.validateNames(first) &&\n            this.validateSecondSurname(second) &&\n            dateBirth !== \"\" &&\n            this.validateEmail(email);\n    }\n\n    validatePassworsNoEmpty(curently, newPas, repeat) {\n        return curently !== \"\" && newPas !== \"\" && repeat !== \"\"\n    }\n\n    validateSameEmail(userEmail, userEmailInfo) {\n        return userEmail === userEmailInfo;\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new Validations();\n","export default __webpack_public_path__ + \"static/media/logo.015ff878.jpg\";","import axios from \"axios\";\nimport {API_BACKEND_URL} from \"./Endpoints\";\n\nconst AXIOS = axios.create({\n    baseURL: API_BACKEND_URL,\n    headers: {\"Content-type\": \"application/json\"},\n})\nexport default AXIOS\n","export const API_BACKEND_URL = 'http://localhost:8080/novopatent-api'\nexport const API_SCRAPING_URL = 'http://localhost:8081'","import API from \"./API\";\n\nclass UsuarioService {\n    resetPassword(email) {\n        return API.put(`/reset-password/${email}`);\n    }\n\n    changePassword(email, oldPassword, newPassword) {\n        return API.put(\n            `/change-password/${email}/${oldPassword}/${newPassword}`\n        );\n    }\n\n    login(obj) {\n        return API.post(\"/login\", obj);\n    }\n\n    getAll() {\n        return API.get(\"/users\");\n    }\n\n    getOne(id) {\n        return API.get(`/users/${id}`);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/users\", obj);\n    }\n\n    updateOne(obj) {\n        return API.put(\"/users\", obj);\n    }\n\n    removeOne(email) {\n        return API.delete(`/users/${email}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new UsuarioService();\n","import React, {useState, useRef} from \"react\";\nimport \"../assets/css/MyCustom.css\";\nimport Validations from \"../utils/Validations\";\nimport Logo from \"../assets/img/logo.jpg\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport {txtAltLogoImg, txtEmailValid, txtPasswordValid, txtLogin,\n    txtFillFields, txtEmailLabel, txtPasswordLabel, txtLoginButton,\n    txtMessageLoginError, txtMessageSucces, txtMessageLoading\n} from \"../utils/Strings\";\nimport {setUser } from \"../utils/LocalStorage\";\nimport UsuarioService from \"../service/UsuarioService\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [emailErrorSms, setEmailErrorSms] = useState(\"\");\n    const [passwordErrorSms, setPasswordErrorSms] = useState(\"\");\n    const [emailUIError, setEmailUIError] = useState(\"block\");\n    const [passwordUIError, setPasswordUIError] = useState(\"block\");\n    const toastMessages = useRef(null);\n\n    const login = () => {\n        if (emailInput.length <= 0 || !Validations.validateEmail(emailInput)) {\n            setEmailErrorSms(txtEmailValid);\n            setEmailUIError(\"p-invalid block\");\n        } else {\n            setEmailErrorSms(\"\");\n            setEmailUIError(\"block\");\n        }\n        if (passwordInput.length <= 0) {\n            setPasswordErrorSms(txtPasswordValid);\n            setPasswordUIError(\"p-invalid block\");\n        } else {\n            setPasswordErrorSms(\"\");\n            setPasswordUIError(\"block\");\n        }\n        if (\n            emailInput.length > 0 &&\n            passwordInput.length > 0 &&\n            Validations.validateEmail(emailInput)\n        ) {\n            let userLogin = {\n                correo: emailInput,\n                contrasena: passwordInput,\n            };\n            showMessage(txtMessageLoading);\n            UsuarioService.login(userLogin)\n                .then((response) => {\n                    clearMessages();\n                    setUser(response.data.usuario);\n                    showMessage(txtMessageSucces);\n                    navigate(\"/\");\n                })\n                .catch((err) => {\n                    clearMessages();\n                    console.error(err)\n                    showMessage(txtMessageLoginError);\n                });\n        }\n    };\n\n    const clearMessages = () => toastMessages.current.clear();\n\n    const showMessage = ({type, title, description}) => {\n        toastMessages.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            sticky: true,\n        });\n    };\n\n    return (\n        <div className=\"w-screen h-screen pagelogin flex justify-content-center align-items-center\">\n            <div className=\"bg-white shadow-8 col-12 md:col-6 lg:col-4 border-round-2xl\">\n                <Toast ref={toastMessages}/>\n                <div className=\"col text-center\"><img src={Logo} alt={txtAltLogoImg} height=\"90px\"/></div>\n                <div className=\"col\">\n                    <div className=\"text-center\" style={{fontSize: \"2em\", fontWeight: \"500\"}}>{txtLogin}</div>\n                    <div className=\"text-center\">{txtFillFields}</div>\n                    <div className=\"mx-6 my-4\">\n                        <div className=\"p-fluid\">\n                            <div className=\"field\">\n                                <label htmlFor=\"emailInput\" className=\"block\">{txtEmailLabel}</label>\n                                <InputText\n                                    className={emailUIError}\n                                    id=\"emailInput\"\n                                    aria-describedby=\"emailInput-help\"\n                                    value={emailInput}\n                                    maxLength=\"50\"\n                                    onChange={(e) => setEmailInput(e.target.value)}\n                                />\n                                <small id=\"emailInput-help\" className=\"p-error block\">{emailErrorSms}</small>\n                            </div>\n                        </div>\n                        <div className=\"p-fluid\">\n                            <div className=\"field\">\n                                <label htmlFor=\"passwordInput\" className=\"block\">{txtPasswordLabel}</label>\n                                <Password\n                                    id=\"passwordInput\"\n                                    toggleMask\n                                    className={passwordUIError}\n                                    feedback={false}\n                                    maxLength=\"50\"\n                                    value={passwordInput}\n                                    onChange={(e) => setPasswordInput(e.target.value)}\n                                />\n                                <small id=\"passwordInput-help\" className=\"p-error block\">{passwordErrorSms}</small>\n                            </div>\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                label={txtLoginButton}\n                                icon=\"pi pi-sign-in\"\n                                className=\"p-button-success\"\n                                onClick={login}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import {txtAltLogoImg, txt404, txtPageNotFound,} from \"../utils/Strings\";\nimport Logo from \"../assets/img/logo.jpg\";\nimport { Image } from 'primereact/image';\nimport { Button } from 'primereact/button';\nimport {useNavigate} from \"react-router-dom\";\n\nexport default function ErrorPage() {\n    const navigate = useNavigate();\n    return (\n        <div className=\"w-screen h-screen flex align-items-center justify-content-center\">\n            <div className=\"\">\n                <div className=\"text-center text-gray-600\">\n                    <Image src={Logo} alt={txtAltLogoImg} height=\"100px\"/>\n                    <div className='text-8xl font-semibold'>{txt404}</div>\n                    <div className='text-5xl'>{txtPageNotFound}</div>\n                    <Button label=\"Ir al inicio\" icon='pi pi-home' className='my-2 bg-green-600' onClick={() => navigate('/')}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import Logo from \"../assets/img/logo.jpg\";\nimport {Menubar} from \"primereact/menubar\";\nimport {Button} from \"primereact/button\";\nimport {ConfirmDialog, confirmDialog} from 'primereact/confirmdialog';\nimport {txtConfirmExit, txtExit, txtAltLogoImg, txtLogoutButton} from \"../utils/Strings\";\nimport {useNavigate, Outlet} from \"react-router-dom\";\nimport {cleanLocalStorage} from \"../utils/LocalStorage\";\n\nexport default function Header() {\n    const navigate = useNavigate();\n    const MENU = [\n        {label: \"Inicio\", icon: \"pi pi-home\", command: () => navigate(\"/\"),},\n        {label: \"Patentes\", icon: \"pi pi-book\", command: () => navigate(\"/patentes\"),},\n        {label: \"Marcas\", icon: \"pi pi-globe\", command: () => navigate(\"/marcas\"),},\n        {label: \"Expedientes\", icon: \"pi pi-folder-open\", command: () => navigate(\"/expedientes\"),},\n        {label: \"Perfil\", icon: \"pi pi-user\", command: () => navigate(\"/perfil\"),},\n    ];\n\n    const confirmLogout = () => {\n        confirmDialog({\n            message: txtConfirmExit,\n            header: txtExit,\n            draggable: false,\n            icon: \"pi pi-exclamation-triangle\",\n            acceptClassName: \"p-button-success\",\n            rejectClassName: \"p-button-plain p-button-text\",\n            accept: () => {\n                cleanLocalStorage()\n                navigate(\"/inicio-sesion\");\n            },\n        });\n    };\n\n    const start = (\n        <img alt={txtAltLogoImg} src={Logo} height=\"50\" className=\"p-mr-2\" onClick={() => navigate(\"/\")}/>\n    );\n\n    const end = (\n        <Button className=\"p-button-success\" onClick={confirmLogout} label={txtLogoutButton} icon=\"pi pi-sign-out\"/>\n    );\n\n    return (\n        <>\n            <ConfirmDialog/>\n            <Menubar className='m-3' model={MENU} start={start} end={end}/>\n            <div className=\"grid flex\">\n                <div className=\"col-12 md:col-10 md:col-offset-1\">\n                    <Outlet/>\n                </div>\n            </div>\n        </>\n    );\n}\n","import API from './API'\n\nclass ResumeService{\n     getResume(){\n          return API.get(\"/resume\")\n     }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ResumeService();","import React, {useState, useEffect} from \"react\";\nimport \"../assets/css/MyCustom.css\";\nimport {\n    txtWelcome,\n    txtLastQueryPatent,\n    txtLastQueryBrand,\n    txtLastUpdateClients,\n} from \"../utils/Strings\";\nimport ResumeService from \"../service/ResumeService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport {getUser, setHistory} from \"../utils/LocalStorage\";\n\nmoment.locale(\"es\");\n\nexport default function HomePage() {\n    const [userInfo, setUserInfo] = useState({});\n    const [resume, setResume] = useState({\n        ultimaBusquedaPatentes: \"\",\n        ultimaBusquedaMarcas: \"\",\n        ultimaModificacionClientes: \"\",\n        clientesTotales: 0,\n    });\n\n    useEffect(() => {\n        getResume();\n        getPersonalInformation();\n    }, []);\n\n\n    function getPersonalInformation() {\n        setUserInfo(getUser());\n    }\n\n    function getResume() {\n        ResumeService.getResume()\n            .then(({data}) => {\n                setResume({...data});\n                setHistory(data);\n            })\n            .catch((err) => console.error(err));\n    }\n\n    const Card = ({icon, text, value}) => (\n        <div className=\"col-12 md:col-6 p-card shadow-2 \">\n            <div className=\"flex justify-content-center align-items-center h-15rem\">\n                <div className='text-center'>\n                    <i className={`${icon} text-4xl`}></i>\n                    <div className='mb-2 mt-1 text-2xl'>{text}</div>\n                    <div className='font-bold text-4xl'>{moment(value).format(\"LLLL\")}</div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"grid\">\n            <h1 className='col-12'>{txtWelcome}{' '} {`${userInfo.nombre} ${userInfo.primerApellido}`}</h1>\n            <div\n                className={`col-12 md:col-6 p-card shadow-2 ${resume.clientesTotales === 0 ? 'bg-pink-100' : 'bg-green-200'}`}>\n                <div className=\"flex justify-content-center align-items-center h-15rem\">\n                    <div className='text-center'>\n                        <i className={`pi pi-user text-4xl`}></i>\n                        <div className='mb-2 mt-1 text-2xl'>Total de expedientes:</div>\n                        <div className='font-bold text-8xl'>{resume.clientesTotales}</div>\n                    </div>\n                </div>\n            </div>\n            <Card icon='pi pi-book' text={txtLastQueryPatent} value={resume.ultimaBusquedaPatentes}/>\n            <Card icon='pi pi-globe' text={txtLastQueryBrand} value={resume.ultimaBusquedaMarcas}/>\n            <Card icon='pi pi-folder-open' text={txtLastUpdateClients} value={resume.ultimaModificacionClientes}/>\n        </div>\n    );\n}\n","import axios from \"axios\";\nimport {API_SCRAPING_URL} from \"./Endpoints\";\n\nexport default axios.create({\n    baseURL: API_SCRAPING_URL,\n    headers: {\"Content-type\": \"application/json\",},\n});\n","import API from \"./APIScraping\";\n\nclass ScrapingService {\n    getPatentes(obj) {\n        return API.post(\"/patentes\", obj);\n    }\n\n    getMarcas(obj) {\n        return API.post(\"marcas\", obj);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ScrapingService();","import API from \"./API\";\n\nclass HistorialService {\n    insertOne(type) {\n        return API.post(`/history/${type}`);\n    }\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new HistorialService();\n","export const dark_sea_green = \"#81BA8E\",\n    brunswick_green = \"#1B4631\",\n    amazon =\"#467256\"\n","import API from \"./API\";\n\nclass ClienteService {\n\n    getAll() {\n        return API.get(\"/clients\");\n    }\n\n    deleteBulk(obj) {\n        return API.delete(\"/clients/bulk\", {data: obj});\n    }\n\n    getAllRaw() {\n        return API.get(\"/clientsRaw\");\n    }\n\n    insertAll(obj) {\n        return API.post(\"/clientsAll\", obj);\n    }\n\n    insertOne(obj) {\n        return API.post(\"/clientsOne\", obj);\n    }\n\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowNew\": true}] */\nexport default new ClienteService();","import React, {useEffect, useRef, useState} from 'react';\nimport {Button} from \"primereact/button\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Toast} from \"primereact/toast\";\nimport {Dialog} from \"primereact/dialog\";\nimport {\n    txtDatesRange,\n    txtInstructionsSearch,\n    txtLodaing,\n    txtMessageNoClients,\n    txtSmsLoading,\n    txtStartSearch,\n    txtStartSearchButton\n} from \"../utils/Strings\";\nimport Validations from \"../utils/Validations\";\nimport {dark_sea_green} from \"../utils/Colors\";\nimport ClienteService from \"../service/ClienteService\";\n\nexport default function SearchDialog({payload, setPayload, resume, loading, setLoading, setStartSearch, showDialog, setShowDialog}) {\n\n    const [dates, setDates] = useState()\n    const toast = useRef(null);\n\n    useEffect(() => {\n        getClients();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    const startSearch = async () => {\n        setLoading(true);\n        setStartSearch(true);\n    };\n\n    const confirmStartSearch = () => {\n        if (resume.clientesTotales > 0 && payload.datos.length > 0) {\n            setShowDialog(true);\n        } else {\n            showMessage(txtMessageNoClients);\n        }\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, sticky: true,});\n    };\n\n    const getClients = () => {\n        setLoading(true)\n        ClienteService.getAllRaw()\n            .then((resp) => setPayload({...payload, datos: resp.data}))\n            .catch((err) => console.error(err)).finally(() => setLoading(false));\n    };\n\n\n    return (\n        <>\n            <Toast ref={toast}/>\n            <div className=\"flex align-items-center\">\n                <Button label={txtStartSearchButton} icon=\"pi pi-search\" className=\"p-button-lg bg-green-600\"\n                        onClick={confirmStartSearch} loading={loading}/>\n            </div>\n            <Dialog showHeader={false} visible={showDialog} draggable={false} closable={false} onHide={false}>\n                <div className=\"grid\">\n                    <div className=\"col\">\n                        {loading ? (\n                            <div className=\"col col-align-center\">\n                                <h1>{txtSmsLoading[0]}</h1>\n                                <div>{txtLodaing}</div>\n                                <ProgressBar mode=\"indeterminate\" color={dark_sea_green} style={{height: \"6px\"}}/>\n                            </div>\n                        ) : (\n                            <>\n                                <h1>{txtStartSearch}</h1>\n                                <p>{txtInstructionsSearch}</p>\n                                <div className=\"text-center\">\n                                    <div className=\"field\">\n                                        <label htmlFor=\"rangeDates\" className=\"block font-semibold\">\n                                            {txtDatesRange}\n                                        </label>\n                                        <Calendar id=\"rangeDates\"\n                                                  className='w-full'\n                                                  selectionMode='range'\n                                                  value={dates}\n                                                  touchUI\n                                                  showIcon\n                                                  icon={'pi pi-calendar'}\n                                                  dateFormat=\"dd/mm/yy\"\n                                                  disabled={payload.descargado}\n                                                  onChange={(e) => {\n                                                      if (e.value[0]) {\n                                                          setPayload({\n                                                              ...payload,\n                                                              fechaInicio: Validations.convertAPIDate(e.value[0].toISOString())\n                                                          })\n                                                      }\n                                                      if (e.value[1]) {\n                                                          setPayload({\n                                                              ...payload,\n                                                              fechaFin: Validations.convertAPIDate(e.value[1].toISOString())\n                                                          })\n                                                      }\n                                                      setDates(e.value)\n                                                  }}\n                                        />\n                                    </div>\n                                    <div className=\"field-checkbox\">\n                                        <Checkbox id='filesReady' inputId=\"filesReady\" checked={payload.descargado}\n                                                  onChange={(e) => setPayload({...payload, descargado: e.checked})}/>\n                                        <label htmlFor=\"filesReady\" className='font-semibold'>Ya cuento con los archivos\n                                            descargados</label>\n                                    </div>\n                                </div>\n                                <div className=\"text-center\">\n                                    <Button\n                                        type=\"button\"\n                                        className=\"mr-2 p-button-danger\"\n                                        label=\"Cancelar\"\n                                        onClick={() => setShowDialog(false)}\n                                    />\n                                    <Button\n                                        type=\"button\"\n                                        className=\"mr-2 p-button-success\"\n                                        label=\"Buscar\"\n                                        disabled={payload.fechaInicio === \"\" || payload.fechaFin === \"\" || !payload.fechaInicio || !payload.fechaFin}\n                                        onClick={startSearch}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {Toast} from \"primereact/toast\";\nimport ScrapingService from \"../service/ScrapingService\";\nimport HistorialService from \"../service/HistorialService\";\nimport {txtNoData, txtTitlePatents, txtExportButton, txtClearButton,\n    txtMessageSearchError, txtSubitlePatent1, txtSubitlePatent2, txtNoDataSearch,\n    txtSubitlePatent3, txtLastQueryPatent, txtClearMessages, txtDataSearch\n} from \"../utils/Strings\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport {getHistory} from \"../utils/LocalStorage\";\nimport SearchDialog from \"../components/SearchDialog\";\n\nmoment.locale(\"es\");\n\nexport default function PatentPage() {\n\n    const [payload, setPayload] = useState({datos: [], fechaInicio: \"\", fechaFin: \"\", descargado: false,})\n    const [startSearch, setStartSearch] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [data1, setData1] = useState([])\n    const [data2, setData2] = useState([])\n    const [data3, setData3] = useState([])\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n    const dt2 = useRef(null);\n    const dt3 = useRef(null);\n\n    useEffect(() => {\n        setResume(getHistory());\n    }, []);\n\n    useEffect(() => {\n        if (payload.fechaFin !== \"\" && payload.fechaInicio !== \"\" && payload.datos.length > 0 && startSearch) {\n            getScrapingData();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [startSearch]);\n\n    const getScrapingData = () => {\n        ScrapingService.getPatentes(payload)\n            .then((resp) => {\n                viewData(resp.data);\n                HistorialService.insertOne(1)\n            })\n            .catch((err) => {\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            }).finally(() => {\n            setLoading(false);\n            setStartSearch(false);\n            setShowDialog(false);\n        });\n    }\n\n    const viewData = (data) => {\n        console.log(data)\n        if (data[0].code === 200 && data[0].data.length > 0) {\n            setData1(data[0].data);\n            showMessage({type: \"info\", title: txtSubitlePatent1, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent1, description: txtNoDataSearch,});\n        if (data[1].code === 200 && data[1].data.length > 0) {\n            setData2(data[1].data);\n            showMessage({type: \"info\", title: txtSubitlePatent2, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent2, description: txtNoDataSearch,});\n        if (data[2].code === 200 && data[2].data.length > 0) {\n            setData3(data[2].data);\n            showMessage({type: \"info\", title: txtSubitlePatent3, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubitlePatent3, description: txtNoDataSearch,});\n    };\n\n    const exports = () => {\n        dt1.current.exportCSV();\n        dt2.current.exportCSV();\n        dt3.current.exportCSV();\n    };\n\n    const clear = () => {\n        setData1([]);\n        setData2([]);\n        setData3([]);\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, sticky: true});\n    };\n\n    const clearMessages = () => {\n        toast.current.clear();\n    }\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitlePatents}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"grid\">\n                <div className=\"col p-3\">\n                    <h1>{txtTitlePatents}</h1>\n                    <div>{txtLastQueryPatent}{moment(resume.ultimaBusquedaPatentes).format(\"LLLL\")}</div>\n                </div>\n                <SearchDialog payload={payload} setPayload={setPayload} resume={resume} loading={loading}\n                              setLoading={setLoading} setStartSearch={setStartSearch} showDialog={showDialog} setShowDialog={setShowDialog}/>\n            </div>\n            <div className=\"grid \">\n                <div className=\"col-12\">\n                    <div className=\"flex justify-content-between\">\n                        <Button type=\"button\" icon=\"pi pi-download\" className=\"bg-teal-600\" label={txtExportButton} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\" onClick={clearMessages}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton} className=\"p-button-info\" onClick={clear}/>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <h2>{txtSubitlePatent1}</h2>\n                    <DataTable ref={dt1} emptyMessage={txtNoData} paginator rows={10} value={data1} loading={loading}>\n                        <Column field=\"Descripción general del asunto\" header=\"Descripción general del asunto\" sortable/>\n                        <Column field=\"Expediente\" header=\"Expediente\" sortable/>\n                        <Column field=\"Número de concesión\" header=\"Número de concesión\" sortable/>\n                        <Column field=\"Fecha del Oficio\" header=\"Fecha del Oficio\" sortable/>\n                        <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                        <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" sortable body={(rowdata) => <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\" rel=\"noreferrer\">{rowdata[\"Enlace electrónico\"]}</a>}/>\n                    </DataTable>\n                </div>\n                <div className=\"col-12\">\n                    <h2>{txtSubitlePatent2}</h2>\n                    <DataTable ref={dt2} emptyMessage={txtNoData} paginator rows={10} scrollable value={data2} loading={loading}>\n                        <Column field=\"Oficina, No de Patente y Tipo de documento\" header=\"Oficina, No de Patente y Tipo de documento\" sortable/>\n                        <Column field=\"Tipo de documento\" header=\"Tipo de documento\"  sortable/>\n                        <Column field=\"Fecha de concesión\" header=\"Fecha de concesión\"  sortable/>\n                        <Column field=\"Número de solicitud\" header=\"Número de solicitud\"  sortable/>\n                        <Column field=\"Fecha de presentación\" header=\"Fecha de presentación\"  sortable/>\n                        <Column field=\"Número de solicitud internacional\" header=\"Número de solicitud internacional\"  sortable/>\n                        <Column field=\"Fecha de presentación internacional\" header=\"Fecha de presentación internacional\"  sortable/>\n                        <Column field=\"Número de publicación internacional\" header=\"Número de publicación internacional\"  sortable/>\n                        <Column field=\"Fecha de publicación internacional\" header=\"Fecha de publicación internacional\"  sortable/>\n                        <Column field=\"Inventor(es)\" header=\"Inventor(es)\"  sortable/>\n                        <Column field=\"Titular\" header=\"Titular\"  sortable/>\n                        <Column field=\"Agente\" header=\"Agente\"  sortable/>\n                        <Column field=\"Clasificación CIP\" header=\"Clasificación CIP\"  sortable/>\n                        <Column field=\"Clasificación CPC\" header=\"Clasificación CPC\"  sortable/>\n                        <Column field=\"Título\" header=\"Título\"  sortable/>\n                        <Column field=\"Resumen\" header=\"Resumen\"  sortable/>\n                    </DataTable>\n                </div>\n                <div className=\"col-12\">\n                    <h2>{txtSubitlePatent3}</h2>\n                    <DataTable ref={dt3} emptyMessage={txtNoData} paginator rows={10} value={data3} loading={loading}>\n                        <Column field=\"Solicitante(s)\" header=\"Solicitante(s)\" sortable/>\n                        <Column field=\"Número del Oficio\" header=\"Número del Oficio\" sortable/>\n                        <Column field=\"Número de expediente\" header=\"Número de expediente\" sortable/>\n                        <Column field=\"Agente\" header=\"Agente\" sortable/>\n                    </DataTable>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useState, useEffect, useRef, Fragment} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {Toast} from \"primereact/toast\";\nimport ScrapingService from \"../service/ScrapingService\";\nimport HistorialService from \"../service/HistorialService\";\nimport {\n    txtExportButton, txtNoData, txtTitleBrands, txtClearButton,\n    txtMessageSearchError, txtLastQueryBrand, txtSubtitleBrand,\n    txtNoDataSearch, txtDataSearch, txtClearMessages,\n} from \"../utils/Strings\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport {getHistory} from \"../utils/LocalStorage\";\nimport SearchDialog from \"../components/SearchDialog\";\n\nmoment.locale(\"es\");\n\nexport default function BrandPage() {\n\n    const [payload, setPayload] = useState({datos: [], fechaInicio: \"\", fechaFin: \"\", descargado: false,})\n    const [startSearch, setStartSearch] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [showDialog, setShowDialog] = useState(false);\n    const [resume, setResume] = useState({});\n    const [data, setData] = useState([])\n    const toast = useRef(null);\n    const dt1 = useRef(null);\n\n    useEffect(() => {\n        setResume(getHistory());\n    }, []);\n\n    useEffect(() => {\n        if (payload.fechaFin !== \"\" && payload.fechaInicio !== \"\" && payload.datos.length > 0 && startSearch) {\n            getScrapingData();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [startSearch]);\n\n    const getScrapingData = () => {\n        ScrapingService.getMarcas(payload)\n            .then((resp) => {\n                viewData(resp.data);\n                HistorialService.insertOne(2)\n            })\n            .catch((err) => {\n                showMessage(txtMessageSearchError);\n                console.log(err);\n            }).finally(() => {\n                setLoading(false);\n                setStartSearch(false);\n                setShowDialog(false);\n        });\n    };\n\n    const viewData = (data) => {\n        if (data.code === 200 && data.data.length > 0) {\n            setData(data.data);\n            showMessage({type: \"info\", title: txtSubtitleBrand, description: txtDataSearch,});\n        } else showMessage({type: \"warn\", title: txtSubtitleBrand, description: txtNoDataSearch,});\n    };\n\n\n    const exports = () => {\n        dt1.current.exportCSV();\n    };\n\n    const clear = () => {\n        setData([])\n    };\n\n    const clearMessages = () => {\n        toast.current.clear()\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, sticky: true,});\n    };\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitleBrands}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"grid\">\n                <div className=\"col p-3\">\n                    <h1>{txtTitleBrands}</h1>\n                    <div>{txtLastQueryBrand}{moment(resume.ultimaBusquedaMarcas).format(\"LLLL\")}</div>\n                </div>\n                <SearchDialog payload={payload} setPayload={setPayload} resume={resume} loading={loading}\n                              setLoading={setLoading} setStartSearch={setStartSearch} showDialog={showDialog} setShowDialog={setShowDialog}/>\n            </div>\n\n            <div className=\"grid\">\n                <div className=\"col-12\">\n                    <div className=\"flex justify-content-between\">\n                        <Button type=\"button\" icon=\"pi pi-download\" className=\"bg-teal-600\" label={txtExportButton} onClick={exports}/>\n                        <Button type=\"button\" icon=\"pi pi-comments\" label={txtClearMessages} className=\"p-button-help\" onClick={clearMessages}/>\n                        <Button type=\"button\" icon=\"pi pi-times\" label={txtClearButton} className=\"p-button-info\" onClick={clear}/>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <h2>{txtSubtitleBrand}</h2>\n                    <DataTable value={data} ref={dt1} emptyMessage={txtNoData} paginator scrollable rows={10}\n                               loading={loading}>\n                        <Column field=\"Expediente\" header=\"Expediente\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Registro de Marca\" header=\"Registro de Marca\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Serie del expediente\" header=\"Serie del expediente\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Descripción del oficio\" header=\"Descripción del oficio\"\n                                headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Número del oficio\" header=\"Número del oficio\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Fecha del oficio\" header=\"Fecha del oficio\" headerStyle={{width: \"20vh\"}} sortable/>\n                        <Column field=\"Enlace electrónico\" header=\"Enlace electrónico\" headerStyle={{width: \"20vh\"}}\n                                sortable\n                                body={(rowdata) => <a href={rowdata[\"Enlace electrónico\"]} target=\"_blank\"\n                                                      rel=\"noreferrer\">{rowdata[\"Enlace electrónico\"]}</a>}/>\n                    </DataTable>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useRef, useState} from 'react';\nimport {Button} from \"primereact/button\";\nimport {InputTextarea} from \"primereact/inputtextarea\";\nimport ClienteService from \"../service/ClienteService\";\nimport {\n    txtMessageClientsSaved,\n    txtMessageErrorGeneral,\n    txtSmsLoading,\n    txtSaveClientsButton,\n} from \"../utils/Strings\";\nimport HistorialService from \"../service/HistorialService\";\nimport {Toast} from \"primereact/toast\";\nimport {Dialog} from \"primereact/dialog\";\n\nexport default function ClientsDialog({showDialog, setShowDialog, setSaved}) {\n    const toast = useRef(null);\n\n    const [clients, setClients] = useState([]);\n    const [clientsText, setClientsText] = useState(\"\");\n\n    const openDialog = () => {\n        setSaved(false);\n        setShowDialog(!showDialog);\n    }\n\n    const saveClients = async () => {\n        showMessageloading();\n        const data = await clearAndFilterData(clients);\n        ClienteService.insertOne(data)\n            .then((response) => {\n                clearMessageLoading();\n                if (response) {\n                    HistorialService.insertOne(3);\n                    clearClients();\n                    openDialog();\n                    showMessage(txtMessageClientsSaved);\n                    setSaved(true);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((error) => {\n                clearMessageLoading();\n                console.error(error);\n                showMessage(txtMessageErrorGeneral);\n            });\n    };\n\n    const clearAndFilterData = async (data = []) => {\n        let newData = [];\n        for await (let item of data) {\n            item = item.trim();\n            if (item.length > 2) {\n                newData.push({'expediente': item});\n            }\n        }\n        return newData;\n    };\n\n    const clearClients = () => {\n        setClients([]);\n        setClientsText(\"\");\n        showMessage({\n            type: \"info\",\n            title: \"Se han limpiado los expedientes\",\n            description: \"Limpiado\",\n        });\n    };\n\n    const clearMessageLoading = () => {\n        toast.current.clear();\n    };\n\n    const showMessageloading = () => {\n        toast.current.show({\n            severity: \"info\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{flex: \"1\"}}>\n                    <div className=\"text-center\">\n                        <i className=\"pi pi-spin pi-spinner\" style={{fontSize: \"3em\"}}></i>\n                        <h4>{txtSmsLoading[0]}</h4>\n                        <p>{txtSmsLoading[1]}</p>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    return (\n\n        <>\n            <Toast ref={toast}/>\n            <div className=\"flex align-items-center\">\n                <Button label={txtSaveClientsButton} icon=\"pi pi-save\" className=\"p-button-lg bg-green-600\"\n                        onClick={openDialog}/>\n            </div>\n            <Dialog showHeader={false} visible={showDialog} draggable={false} closable={true} onHide={false}>\n                <div className=\"grid m-3\">\n                    <div className=\"col-12\">\n                        <div className=\"grid\">\n                            <h2>Añadir más expedientes: {clients.length}</h2>\n                            <div className=\"col-12\">\n                                <Button type=\"button\" icon=\"pi pi-times\" label=\"Limpiar\"\n                                        className=\"p-button-info mr-1\" onClick={clearClients}\n                                        disabled={clients.length <= 0}/>\n                                <Button type=\"button\" icon=\"pi pi-save\" label=\"Guardar\" className=\"p-button-warning\"\n                                        onClick={saveClients} disabled={clients.length <= 0}/>\n                            </div>\n                        </div>\n                        <InputTextarea\n                            value={clientsText}\n                            rows={20}\n                            autoResize\n                            style={{width: \"100%\"}}\n                            onChange={(e) => {\n                                setClientsText(e.target.value);\n                                setClients(e.target.value.split(\"\\n\"));\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 text-center\">\n                    <Button type=\"button\" icon=\"pi pi-times\" label=\"Cerrar\" className=\"p-button-help\" onClick={openDialog}/>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {Toast} from \"primereact/toast\";\nimport {BreadCrumb} from \"primereact/breadcrumb\";\nimport {txtTitleClients, txtLastUpdateClients, txtNoData,} from \"../utils/Strings\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport {getHistory} from \"../utils/LocalStorage\";\nimport ClientsDialog from \"../components/ClientsDialog\";\nimport {Column} from \"primereact/column\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Button} from \"primereact/button\";\nimport ClienteService from \"../service/ClienteService\";\nimport {confirmDialog} from 'primereact/confirmdialog';\n\nmoment.locale(\"es\");\n\nexport default function ClientPage() {\n    const [loading, setLoading] = useState(false);\n    const [saved, setSaved] = useState(false)\n    const [resume, setResume] = useState({});\n    const [showDialog, setShowDialog] = useState()\n    const dt1 = useRef(null);\n    const [selected, setSelected] = useState([])\n    const toast = useRef(null);\n    const [data, setData] = useState([])\n\n\n    useEffect(() => {\n        getResume();\n        getClients()\n    }, []);\n\n    useEffect(() => {\n        if (saved) getClients()\n    }, [saved]);\n\n\n    const getResume = () => {\n        setResume(getHistory());\n    };\n\n    const getClients = () => {\n        setLoading(true)\n        ClienteService.getAll()\n            .then((resp) => setData(resp.data))\n            .catch((err) => console.error(err))\n            .finally(() => setLoading(false));\n    }\n\n    const deleteClients = () => {\n        setLoading(true)\n        ClienteService.deleteBulk(selected)\n            .then((resp) => {\n                if(resp.data) {\n                    setSelected([])\n                    getClients()\n                }\n                else console.error(resp)\n            })\n            .catch((err) => console.error(err)).finally(() => setLoading(false));\n    }\n\n    const confirmDelete = () => {\n        confirmDialog({\n            message: '¿Está seguro que desea eliminar los registros seleccionados?',\n            header: 'Eliminar registros seleccionados',\n            draggable: false,\n            icon: \"pi pi-exclamation-triangle\",\n            acceptClassName: \"p-button-success\",\n            rejectClassName: \"p-button-plain p-button-text\",\n            accept: () => {\n                deleteClients()\n            },\n        });\n    };\n\n\n    return (\n        <>\n            <BreadCrumb model={[{label: txtTitleClients}]} home={{icon: \"pi pi-home\"}}/>\n            <Toast ref={toast}/>\n            <div className=\"grid\">\n                <div className=\"col p-3\">\n                    <h1>{txtTitleClients}</h1>\n                    <div>{txtLastUpdateClients}{moment(resume.ultimaModificacionClientes).format(\"LLLL\")}</div>\n                </div>\n                <ClientsDialog showDialog={showDialog} setShowDialog={setShowDialog} saved={saved} setSaved={setSaved}/>\n            </div>\n            <div className='grid'>\n                <div className=\"col-12\">\n                    <Button className='my-3' severity='danger' disabled={selected.length === 0} onClick={confirmDelete}>Eliminar\n                        registros seleccionados</Button>\n                    <DataTable value={data} ref={dt1}\n                               selectionMode='multiple' selection={selected} onSelectionChange={(e) => setSelected(e.value)}\n                               emptyMessage={txtNoData} paginator scrollable rows={10} loading={loading} rowsPerPageOptions={[5, 10, 25, 50]}>\n                        <Column selectionMode=\"multiple\" headerStyle={{width: '3rem'}}/>\n                        <Column field=\"expediente\" header=\"Expediente\" sortable filter />\n                        <Column field=\"creacion\" header=\"Creación\" sortable filter body={(rowData) => <div> {moment(rowData['creacion']).format(\"LLLL\")} </div>}/>\n                    </DataTable>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Toast} from \"primereact/toast\";\nimport Validations from \"../utils/Validations\";\nimport {txtMessageUserSuccess, txtMessageUserError, txtMessageUserPasswordSuccess,\n    txtMessageUserPasswordError, txtTitlePersonalData, txtNameLabel, txtNameHelp,\n    txtFistSurnameLabel, txtFistSurnameHelp, txtSecondSurnameLabel, txtDateOfBirthLabel,\n    txtDateOfBirthHelp, txtEmailLabel, txtEmailHelp, txtDesactiveActiveFieldsLabel,\n    txtUpdateInformationLabel, txtPasswordCurrentlyLabel, txtPasswordCurrentlyHelp,\n    txtNewPasswordLabel, txtNewPasswordHelp, txtRepeatNewPasswordLabel, txtRepeatNewPasswordHelp,\n    txtUpdatePassword, txtMessageErrorGeneral, txtCheckPasswords,\n} from \"../utils/Strings\";\nimport UsuarioService from \"../service/UsuarioService\";\nimport {useNavigate} from \"react-router-dom\";\nimport {cleanLocalStorage} from \"../utils/LocalStorage\";\nimport {getUser, setUser} from \"../utils/LocalStorage\";\n\nexport default function Perfil() {\n    const toast = useRef(null);\n    const navigate = useNavigate();\n\n    // ? Controla la habilitación y deshabilitación de todos los campos\n    const [activePersonalFields, setActivePersonalFields] = useState(true);\n    const [activePasswordFields, setActivePasswordFields] = useState(true);\n\n    //? Aquí se guarda la información de la persona que está operando el sistema\n    const [userInfo, setUserInfo] = useState({\n        nombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        fechaDeNacimiento: \"\",\n        correo: \"\",\n        superAdmin: false,\n    });\n\n    // ? Aquí se guarda la información del cambio de contraseña\n    const [userPassword, setUserPassword] = useState({\n        contrasenaActual: \"****\",\n        nuevaContrasena: \"****\",\n        repetirnuevaContrasena: \"****\",\n    });\n\n\n    useEffect(() => {\n        setUserInfo(getUser());\n    }, []);\n\n\n    function changePassword({contrasenaActual, nuevaContrasena, repetirnuevaContrasena,}) {\n        UsuarioService.changePassword(userInfo.correo, contrasenaActual, nuevaContrasena, repetirnuevaContrasena)\n            .then((response) => {\n                if (response.data) {\n                    showMessage(txtMessageUserPasswordSuccess);\n                    setTimeout(() => {\n                        cleanLocalStorage();\n                        navigate(\"/inicio-sesion\");\n                    }, 1000);\n                } else {\n                    txtMessageErrorGeneral.description = txtCheckPasswords;\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then((response) => {\n                setUserInfo(response.data);\n                setUser(response.data);\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n\n    //? Valida los valores de userInfo y cambiar datos\n    const checkFormInfoUser = () => {\n        const {nombre, primerApellido, segundoApellido, fechaDeNacimiento, correo,} = userInfo;\n        if (Validations.validateFormUser(nombre, primerApellido, segundoApellido, fechaDeNacimiento, correo)) {\n            updateOne(userInfo);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n    };\n\n    //? Valida los valores de userPassword  y cambiar datos\n    const checkFormPasswordUser = () => {\n        const {contrasenaActual, nuevaContrasena, repetirnuevaContrasena} = userPassword;\n        if (Validations.validatePassworsNoEmpty(contrasenaActual, nuevaContrasena, repetirnuevaContrasena)) {\n            if (nuevaContrasena === repetirnuevaContrasena) {\n                changePassword(userPassword);\n            } else {\n                showMessage(txtMessageUserPasswordError);\n            }\n        } else {\n            showMessage(txtMessageUserPasswordError);\n        }\n    };\n\n    //? Cambiar el contenido de los input (Solo es diseño)\n    const handleContentPasswordUser = () => {\n        setActivePasswordFields(!activePasswordFields);\n        if (activePasswordFields) setUserPassword({contrasenaActual: \"\", nuevaContrasena: \"\", repetirnuevaContrasena: \"\",});\n        else setUserPassword({contrasenaActual: \"****\", nuevaContrasena: \"****\", repetirnuevaContrasena: \"****\",});\n    };\n\n    //? Muestra los mensajes de los Toast\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({severity: type, summary: title, detail: description, life: 3000,});\n    };\n\n    return (\n        <div className=\"grid\">\n            <Toast ref={toast}/>\n            <div className=\"col p-3\">\n                <h2>{txtTitlePersonalData}</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"field\">\n                        <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                        <InputText\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.nombre}\n                            onChange={(e) => {setUserInfo({...userInfo, nombre: e.target.value,});}}\n                            className={!userInfo.nombre && \"p-invalid\"}\n                        />\n                        {!userInfo.nombre && (<small id=\"nombre-help\" className=\"p-error block\">{txtNameHelp}</small>)}\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"primerApellido\">{txtFistSurnameLabel}</label>\n                        <InputText\n                            id=\"primerApellido\"\n                            name=\"primerApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.primerApellido}\n                            onChange={(e) => {setUserInfo({...userInfo, primerApellido: e.target.value,});}}\n                            className={!userInfo.primerApellido && \"p-invalid\"}\n                        />\n                        {!userInfo.primerApellido && (<small id=\"primerApellido-help\" className=\"p-error block\">{txtFistSurnameHelp}</small>)}\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"segundoApellido\">{txtSecondSurnameLabel}</label>\n                        <InputText\n                            id=\"segundoApellido\"\n                            name=\"segundoApellido\"\n                            type=\"text\"\n                            disabled={activePersonalFields}\n                            value={userInfo.segundoApellido}\n                            onChange={(e) => {setUserInfo({...userInfo, segundoApellido: e.target.value,})}}\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"fechaDeNacimiento\">{txtDateOfBirthLabel}</label>\n                        <Calendar\n                            id=\"fechaDeNacimiento\"\n                            name=\"fechaDeNacimiento\"\n                            monthNavigator\n                            yearNavigator\n                            showIcon\n                            yearRange=\"1950:2010\"\n                            dateFormat=\"yy-mm-dd\"\n                            placeholder={userInfo.fechaDeNacimiento.split(\"T\")[0]}\n                            disabled={activePersonalFields}\n                            value={userInfo.fechaDeNacimiento}\n                            onChange={(e) => {\n                                let result = Validations.convertOnlyInputDate(e.target.value);\n                                setUserInfo({...userInfo, fechaDeNacimiento: result,});\n                            }}\n                        />\n                        {!userInfo.fechaDeNacimiento && (\n                            <small id=\"fechaDeNacimiento-help\" className=\"p-error block\">{txtDateOfBirthHelp}</small>\n                        )}\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                        <InputText\n                            id=\"correo\"\n                            name=\"correo\"\n                            type=\"correo\"\n                            disabled={activePersonalFields}\n                            value={userInfo.correo}\n                            onChange={(e) => {setUserInfo({...userInfo, correo: e.target.value,});}}\n                            className={!userInfo.correo && \"p-invalid\"}\n                        />\n                        {!userInfo.correo && (<small id=\"correo-help\" className=\"p-error block\">{txtEmailHelp}</small>)}\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={() => {setActivePersonalFields(!activePersonalFields);}}\n                    />\n                    <Button\n                        label={txtUpdateInformationLabel}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePersonalFields}\n                        onClick={checkFormInfoUser}\n                    />\n                </div>\n            </div>\n            <div className=\"col p-3\">\n                <h2>Cambio de contraseña</h2>\n                <div className=\"p-fluid\">\n                    <div className=\"field\">\n                        <label htmlFor=\"contrasenaActual\">{txtPasswordCurrentlyLabel}</label>\n                        <Password\n                            id=\"contrasenaActual\"\n                            name=\"contrasenaActual\"\n                            toggleMask\n                            feedback={false}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.contrasenaActual}\n                            onChange={(e) => {setUserPassword({...userPassword, contrasenaActual: e.target.value,});}}\n                        />\n                        {!userPassword.contrasenaActual && (<small id=\"contrasenaActual-help\" className=\"p-error block\">{txtPasswordCurrentlyHelp}</small>)}\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"nuevaContrasena\">{txtNewPasswordLabel}</label>\n                        <Password\n                            id=\"nuevaContrasena\"\n                            name=\"nuevaContrasena\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.nuevaContrasena}\n                            onChange={(e) => {setUserPassword({...userPassword, nuevaContrasena: e.target.value,});}}\n                        />\n                        {!userPassword.nuevaContrasena && (<small id=\"nuevaContrasena-help\" className=\"p-error block\">{txtNewPasswordHelp}</small>)}\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"repetirnuevaContrasena\">{txtRepeatNewPasswordLabel}</label>\n                        <Password\n                            id=\"repetirnuevaContrasena\"\n                            name=\"repetirnuevaContrasena\"\n                            toggleMask\n                            feedback={true}\n                            maxLength=\"50\"\n                            disabled={activePasswordFields}\n                            value={userPassword.repetirnuevaContrasena}\n                            onChange={(e) => {setUserPassword({...userPassword, repetirnuevaContrasena: e.target.value,});}}\n                        />\n                        {!userPassword.repetirnuevaContrasena && (<small id=\"repetirnuevaContrasena-help\" className=\"p-error block\">{txtRepeatNewPasswordHelp}</small>)}\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <Button\n                        label={txtDesactiveActiveFieldsLabel}\n                        className=\"p-button-link p-mr-2\"\n                        onClick={handleContentPasswordUser}\n                    />\n                    <Button\n                        label={txtUpdatePassword}\n                        className=\"p-button-success p-ml-2\"\n                        disabled={activePasswordFields}\n                        onClick={checkFormPasswordUser}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useState, useRef, useEffect} from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Calendar} from \"primereact/calendar\";\nimport {Button} from \"primereact/button\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Toast} from \"primereact/toast\";\nimport {Toolbar} from \"primereact/toolbar\";\nimport {InputSwitch} from \"primereact/inputswitch\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Badge} from \"primereact/badge\";\nimport Validations from \"../utils/Validations\";\nimport {\n    txtMessageUserSuccess, txtMessageUserError, txtNameLabel,\n    txtNameHelp, txtFistSurnameLabel, txtFistSurnameHelp,\n    txtSecondSurnameLabel, txtDateOfBirthLabel, txtDateOfBirthHelp,\n    txtEmailLabel, txtEmailHelp, txtMessageUserDelete, txtRestartPasswordTitle,\n    txtRestartPasswordContent, txtYES, txtNO, txtCancelButton, txtSaveButton,\n    txtNewUserButton, txtExport, txtSearch, txtTitleCrud, txtFooterTableLabel,\n    txtUserDetails, txtSuperAdminLabel, txtDeleteUserTitle, txtDeleteUserContent,\n    txtMessageUserPasswordReset, txtMessageErrorGeneral,\n} from \"../utils/Strings\";\nimport UsuarioService from \"../service/UsuarioService\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nmoment.locale(\"es\");\n\nlet emptyUser = {\n    nombre: \"\",\n    primerApellido: \"\",\n    segundoApellido: \"\",\n    fechaDeNacimiento: \"\",\n    correo: \"\",\n    superAdmin: false,\n};\n\nexport default function CrudUsers() {\n\n    const [users, setUsers] = useState([]);\n    const [userDialog, setUserDialog] = useState(false);\n    const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n    const [selectedUsers, setSelectedUsers] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(\"\");\n    const [user, setUser] = useState(emptyUser);\n    const [saveOrUpdate, setSaveOrUpdate] = useState(false);\n    const [detailsUser, setDetailsUser] = useState(false);\n    const [detailUserChange, setDetailUserChange] = useState({});\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    useEffect(() => {\n        getAll();\n    }, []);\n\n    const getAll = () => {\n        UsuarioService.getAll()\n            .then((response) => {\n                setUsers(response.data);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function insertOne(user) {\n        UsuarioService.insertOne(user)\n            .then((response) => {\n                setDetailUserChange(response.data);\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function updateOne(user) {\n        UsuarioService.updateOne(user)\n            .then(() => {\n                getAll();\n                showMessage(txtMessageUserSuccess);\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function removeOne(email) {\n        UsuarioService.removeOne(email)\n            .then((response) => {\n                if (response.data) {\n                    getAll();\n                    showMessage(txtMessageUserDelete);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    function resetPasswordUser(email) {\n        UsuarioService.resetPassword(email)\n            .then((response) => {\n                if (response.data) {\n                    setDetailUserChange(response.data);\n                    hideDetailsUser();\n                    showMessage(txtMessageUserPasswordReset);\n                } else {\n                    showMessage(txtMessageErrorGeneral);\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                showMessage(txtMessageErrorGeneral);\n            });\n    }\n\n    const openNew = () => {\n        setUser(emptyUser);\n        setUserDialog(true);\n        setSaveOrUpdate(true);\n    };\n\n    const hideDialog = () => {\n        setUserDialog(false);\n    };\n\n    const hideDeleteUserDialog = () => {\n        setDeleteUserDialog(false);\n    };\n\n    const hideDetailsUser = () => setDetailsUser(!detailsUser);\n\n    const saveUser = () => {\n        const {nombre, primerApellido, segundoApellido, fechaDeNacimiento, correo,} = user;\n        if (Validations.validateFormUser(nombre, primerApellido, segundoApellido, fechaDeNacimiento, correo)) {\n            if (saveOrUpdate) {\n                insertOne(user);\n                hideDetailsUser();\n            } else {\n                updateOne(user);\n            }\n            setSaveOrUpdate(false);\n        } else {\n            showMessage(txtMessageUserError);\n        }\n        setUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const editUser = (user) => {\n        setUser({...user});\n        setUserDialog(true);\n    };\n\n    const confirmDeleteUser = (user) => {\n        setUser(user);\n        setDeleteUserDialog(true);\n    };\n\n    const deleteUser = () => {\n        removeOne(user.correo);\n        setDeleteUserDialog(false);\n        setUser(emptyUser);\n    };\n\n    const exportCSV = () => {\n        dt.current.exportCSV();\n    };\n\n    const resetPassword = (user) => {\n        resetPasswordUser(user.correo);\n        toast.current.clear();\n    };\n\n    const showConfirmResetPassword = (rowData) => {\n        toast.current.show({\n            severity: \"warn\",\n            sticky: true,\n            content: (\n                <div className=\"p-flex p-flex-column\" style={{flex: \"1\"}}>\n                    <div className=\"text-center\">\n                        <i className=\"pi pi-exclamation-triangle\" style={{fontSize: \"3rem\"}}></i>\n                        <h4>{txtRestartPasswordTitle}</h4>\n                        <p>{txtRestartPasswordContent}</p>\n                    </div>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col\">\n                            <Button\n                                type=\"button\"\n                                label={txtYES}\n                                className=\"p-button-success\"\n                                onClick={() => resetPassword(rowData)}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <Button\n                                type=\"button\"\n                                label={txtNO}\n                                className=\"p-button-danger\"\n                                onClick={() => {\n                                    toast.current.clear();\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ),\n        });\n    };\n\n    const showMessage = ({type, title, description}) => {\n        toast.current.show({\n            severity: type,\n            summary: title,\n            detail: description,\n            life: 3000,\n        });\n    };\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <Button\n                    icon=\"pi pi-pencil\"\n                    className=\"p-button-rounded p-button-info p-mr-2\"\n                    onClick={() => editUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-trash\"\n                    className=\"p-button-rounded p-button-danger p-mr-2\"\n                    onClick={() => confirmDeleteUser(rowData)}\n                />\n                <Button\n                    icon=\"pi pi-replay\"\n                    className=\"p-button-rounded p-button-warning\"\n                    onClick={() => showConfirmResetPassword(rowData)}\n                />\n            </>\n        );\n    };\n\n    const adminBodyTemplate = (rowData) => {\n        return (\n            rowData.superAdmin ?\n                (<Badge value={txtYES} severity=\"success\" className=\"p-mr-2\"/>) :\n                (<Badge value={txtNO} className=\"p-mr-2\" severity=\"danger\"/>)\n        );\n    };\n\n    const dateBirthBodyTemplate = (rowData) => <div>{moment(rowData.fechaDeNacimiento).format(\"LL\")}</div>;\n\n    const userDialogFooter = (\n        <>\n            <Button\n                label={txtCancelButton}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDialog}\n            />\n            <Button\n                label={txtSaveButton}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={saveUser}\n            />\n        </>\n    );\n\n    const deleteUserDialogFooter = (\n        <>\n            <Button\n                label={txtNO}\n                icon=\"pi pi-times\"\n                className=\"p-button-text\"\n                onClick={hideDeleteUserDialog}\n            />\n            <Button\n                label={txtYES}\n                icon=\"pi pi-check\"\n                className=\"p-button-text\"\n                onClick={deleteUser}\n            />\n        </>\n    );\n\n    const leftToolbarTemplate = () => <Button label={txtNewUserButton} icon=\"pi pi-plus\"\n                                              className=\"p-button-success p-mr-2\" onClick={openNew}/>;\n\n    const rightToolbarTemplate = () => <Button label={txtExport} icon=\"pi pi-download\" className=\"p-button\"\n                                               style={{backgroundColor: \"var(--teal-600)\"}} onClick={exportCSV}/>;\n\n    const header = (\n        <div className=\"table-header\">\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\"/>\n                <InputText\n                    type=\"search\"\n                    value={globalFilter}\n                    onInput={(e) => setGlobalFilter(e.target.value)}\n                    placeholder={txtSearch}\n                />\n            </span>\n        </div>\n    );\n\n    return (\n        <div className=\"grid\">\n            <Toast ref={toast}/>\n            <div className=\"col p-3\">\n                <h2>{txtTitleCrud}</h2>\n                <div className=\"p-card\">\n                    <Toolbar className=\"mb-4\" start={leftToolbarTemplate} end={rightToolbarTemplate}/>\n                    <DataTable\n                        ref={dt}\n                        value={users}\n                        selection={selectedUsers}\n                        onSelectionChange={(e) => setSelectedUsers(e.value)}\n                        dataKey=\"correo\"\n                        paginator\n                        rows={7}\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate={txtFooterTableLabel}\n                        globalFilter={globalFilter}\n                        header={header}\n                        emptyMessage=\"Sin ningun usuario aún\">\n                        <Column field=\"nombre\" header=\"Nombre\" sortable/>\n                        <Column field=\"primerApellido\" header=\"Primer apellido\" sortable/>\n                        <Column field=\"segundoApellido\" header=\"Segundo apellido\" sortable/>\n                        <Column field=\"fechaDeNacimiento\" header=\"Fecha de nacimiento\" body={dateBirthBodyTemplate}\n                                sortable/>\n                        <Column field=\"correo\" header=\"Correo electrónico\" sortable/>\n                        <Column field=\"superAdmin\" header=\"Super administrador\" body={adminBodyTemplate}/>\n                        <Column header=\"Acciones\" body={actionBodyTemplate}/>\n                    </DataTable>\n                    <Dialog\n                        visible={userDialog}\n                        style={{width: \"600px\"}}\n                        header={txtUserDetails}\n                        modal\n                        className=\"p-fluid\"\n                        footer={userDialogFooter}\n                        onHide={hideDialog}>\n                        <div className=\"p-fluid\">\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">{txtNameLabel}</label>\n                                <InputText\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    type=\"text\"\n                                    value={user.nombre}\n                                    onChange={(e) => {\n                                        setUser({...user, nombre: e.target.value,});\n                                    }}\n                                    className={!user.nombre && \"p-invalid\"}\n                                />\n                                {!user.nombre && (\n                                    <small id=\"nombre-help\" className=\"p-error block\">{txtNameHelp}</small>)}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"primerApellido\">\n                                    {txtFistSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"primerApellido\"\n                                    name=\"primerApellido\"\n                                    type=\"text\"\n                                    value={user.primerApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            primerApellido: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.primerApellido && \"p-invalid\"}\n                                />\n                                {!user.primerApellido && (\n                                    <small id=\"primerApellido-help\" className=\"p-error block\">\n                                        {txtFistSurnameHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"segundoApellido\">\n                                    {txtSecondSurnameLabel}\n                                </label>\n                                <InputText\n                                    id=\"segundoApellido\"\n                                    name=\"segundoApellido\"\n                                    type=\"text\"\n                                    value={user.segundoApellido}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            segundoApellido: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"fechaDeNacimiento\">\n                                    {txtDateOfBirthLabel}\n                                </label>\n                                <Calendar\n                                    id=\"fechaDeNacimiento\"\n                                    name=\"fechaDeNacimiento\"\n                                    monthNavigator\n                                    yearNavigator\n                                    yearRange=\"1950:2010\"\n                                    showIcon\n                                    placeholder={\n                                        user.fechaDeNacimiento.split(\"T\")[0]\n                                    }\n                                    dateFormat=\"yy-mm-d\"\n                                    value={user.fechaDeNacimiento}\n                                    onChange={(e) => {\n                                        let result =\n                                            Validations.convertOnlyInputDate(\n                                                e.target.value\n                                            );\n                                        setUser({\n                                            ...user,\n                                            fechaDeNacimiento: result,\n                                        });\n                                    }}\n                                />\n                                {!user.fechaDeNacimiento && (\n                                    <small id=\"fechaDeNacimiento-help\" className=\"p-error block\">\n                                        {txtDateOfBirthHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"correo\">{txtEmailLabel}</label>\n                                <InputText\n                                    id=\"correo\"\n                                    name=\"correo\"\n                                    type=\"email\"\n                                    value={user.correo}\n                                    onChange={(e) => {\n                                        setUser({\n                                            ...user,\n                                            correo: e.target.value,\n                                        });\n                                    }}\n                                    className={!user.correo && \"p-invalid\"}\n                                />\n                                {!user.correo && (\n                                    <small id=\"correo-help\" className=\"p-error block\">\n                                        {txtEmailHelp}\n                                    </small>\n                                )}\n                            </div>\n                            <div className=\"field text-center\">\n                                <label htmlFor=\"superAdmin\">\n                                    {txtSuperAdminLabel}\n                                </label>\n                                <br/>\n                                <InputSwitch\n                                    id=\"superAdmin\"\n                                    name=\"superAdmin\"\n                                    checked={user.superAdmin}\n                                    onChange={() =>\n                                        setUser({\n                                            ...user,\n                                            superAdmin: !user.superAdmin,\n                                        })\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={deleteUserDialog}\n                        style={{width: \"450px\"}}\n                        header={txtDeleteUserTitle}\n                        modal\n                        footer={deleteUserDialogFooter}\n                        onHide={hideDeleteUserDialog}>\n                        <div className=\"confirmation-content\">\n                            {txtDeleteUserContent}\n                        </div>\n                    </Dialog>\n\n                    <Dialog\n                        visible={detailsUser}\n                        style={{width: \"450px\"}}\n                        header={\"Detalles de usuario\"}\n                        draggable={false}\n                        onHide={hideDetailsUser}\n                        footer={\n                            <Button\n                                label=\"¡Listo!\"\n                                className=\"p-button-success\"\n                                onClick={hideDetailsUser}\n                            />\n                        }>\n                        <div>\n                            Nombre completo:{\" \"}\n                            <span>{`${detailUserChange.nombre} ${detailUserChange.primerApellido} ${detailUserChange.segundoApellido}`}</span>\n                        </div>\n                        <div>\n                            Fecha de nacimiento:{\" \"}\n                            <span>{`${moment(detailUserChange.fechaDeNacimiento).format(\"LLL\")}`}</span>\n                        </div>\n                        <div>\n                            Correo: <span>{`${detailUserChange.correo}`}</span>\n                        </div>\n                        <div>\n                            Contraseña creada:{\" \"}\n                            <span>{`${detailUserChange.contrasena}`}</span>\n                            <p><i>Favor de guardar y cambiar la contraseña más tarde</i></p>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { TabView, TabPanel } from \"primereact/tabview\";\nimport { BreadCrumb } from \"primereact/breadcrumb\";\nimport Perfil from \"../components/Perfil\";\nimport CrudUsers from \"../components/CrudUsers\";\nimport {\n    txtTitleProfile,\n    txtTabPersonalData,\n    txtTabUserTable,\n} from \"../utils/Strings\";\n\nexport default function ProfilePage() {\n    const [userInfo, setUserInfo] = useState({\n        superAdmin: false,\n    });\n\n    useEffect(() => {\n         getPersonalInformation();\n    }, []);\n\n    function getPersonalInformation() {\n        setUserInfo(JSON.parse(localStorage.getItem(\"userActive\")));\n    }\n\n    return (\n        <>\n            <BreadCrumb model={[{ label: txtTitleProfile }]} home={{ icon: \"pi pi-home\" }}/>\n            <div className=\"grid\">\n                <div className=\"col\">\n                    <TabView>\n                        <TabPanel header={txtTabPersonalData} leftIcon=\"pi pi-fw pi-user\">\n                            <Perfil />\n                        </TabPanel>\n                        {userInfo.superAdmin ? (\n                            <TabPanel header={txtTabUserTable} leftIcon=\"pi pi-fw pi-pencil\">\n                                <CrudUsers />\n                            </TabPanel>) : (<div className=\"disable\"></div>)}\n                    </TabView>\n                </div>\n            </div>\n        </>\n    );\n}\n","import HomePage from \"../pages/HomePage\";\nimport Login from \"../pages/Login\";\nimport PatentPage from \"../pages/PatentPage\";\nimport BrandPage from \"../pages/BrandPage\";\nimport ClientPage from \"../pages/ClientPage\";\nimport ProfilePage from \"../pages/ProfilePage\";\n\nexport const MODULES = [\n    {\n        path: \"/\",\n        element: <HomePage/>,\n        errorElement: <Login/>,\n    },\n    {\n        path: \"/patentes\",\n        element: <PatentPage/>,\n        errorElement: <Login/>,\n    },\n    {\n        path: \"/marcas\",\n        element: <BrandPage/>,\n        errorElement: <Login/>,\n    },\n    {\n        path: \"/expedientes\",\n        element: <ClientPage/>,\n        errorElement: <Login/>,\n    },\n    {\n        path: \"/perfil\",\n        element: <ProfilePage/>,\n        errorElement: <Login/>,\n    },\n]","// import \"primereact/resources/themes/tailwind-light/theme.css\";\nimport \"primereact/resources/themes/md-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\n\nimport {locale, addLocale} from \"primereact/api\";\nimport {localLocation} from \"./utils/Strings\";\nimport {createHashRouter, RouterProvider,} from \"react-router-dom\";\nimport { isUserActive, isUserInactive } from \"./utils/LocalStorage\";\nimport Login from \"./pages/Login\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport Header from \"./components/Header\";\nimport {MODULES} from \"./utils/Modules\";\n\naddLocale(\"es\", localLocation);\nlocale(\"es\");\n\nexport default function App() {\n\n    const validateIsLogIn = () => {\n        if (isUserInactive()) throw new Response(\"Not Found\", {status: 404});\n        else return true;\n    }\n\n    const validateIsLogOut = () => {\n        if (isUserActive()) throw new Response(\"Not Found\", {status: 404});\n        else return true;\n    }\n\n    const ROUTER = createHashRouter([\n        {\n            path: \"/inicio-sesion\",\n            element: <Login/>,\n            errorElement: <Header/>,\n            loader: validateIsLogOut,\n        },\n        {\n            path: \"/\",\n            element: <Header/>,\n            errorElement: <Login/>,\n            loader: validateIsLogIn,\n            children: MODULES\n        },\n        {\n            path: \"*\",\n            element: <ErrorPage/>,\n        },\n    ]);\n\n    return <RouterProvider router={ROUTER}/>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>, document.getElementById('root'));"],"sourceRoot":""}